{"version":3,"sources":["types.js","../../../../delegate-eth/packages/js-eth-delegatable-utils/createTypedMessage.js","logo.svg","chainList.js","LazyConnect.jsx","createRegistry.js","TextInput.jsx","PhisherCheck.jsx","InstallExtension.jsx","linkForInvitation.js","copyInvitationLink.js","ReviewAndRevokeInvitations.jsx","contractInfo.js","reportPhishers.js","PhishingReport.jsx","reportMembers.js","MemberReport.jsx","MemberCheck.jsx","createInvitation.js","Members.jsx","QueryParamsRoute.jsx","App.jsx","index.jsx","../../../../delegate-eth/packages/js-eth-delegatable-utils/index.js","../../../../delegate-eth/packages/js-eth-delegatable-utils/types.js"],"names":["module","exports","primaryType","domain","name","version","entries","delegate","caveat","authority","types","EIP712Domain","type","Invocation","Invocations","SignedInvocation","Transaction","ReplayProtection","Delegation","Caveat","SignedDelegation","require","verifyingContract","message","contractName","chainId","console","log","arguments","data","chainIds","LazyConnect","props","actionName","opts","needsAccountConnected","provider","setInjectedProvider","useState","accounts","setAccounts","userChainId","setUserChainId","loading","setLoading","MetaMaskOnboarding","isMetaMaskInstalled","window","ethereum","chainName","chainList","Number","useEffect","async","_accounts","request","method","length","err","getAccounts","then","catch","error","on","removeListener","getUserChainId","needsToSwitchChain","needsToConnectAccount","requiresAction","className","createChecklist","hasWallet","onClick","startOnboarding","children","childrenWithProps","React","Children","map","child","isValidElement","cloneElement","checklistOpts","switchAccountsItem","switchNetworkItem","params","toString","reason","setError","abi","address","createRegistry","readOnly","wallet","getSigner","toUse","registry","attachRegistry","signer","Registry","ethers","Contract","_registry","attach","deployed","TextInput","onComplete","placeholder","buttonLabel","value","setValue","onKeyPress","event","key","onChange","target","PhisherCheck","output","setOutput","checkPhisher","result","PhisherCheckButton","ethersProvider","providers","Web3Provider","setRegistry","codedName","toLowerCase","isPhisher","InstallExtension","disabled","linkForInvitation","invitation","location","origin","encodeURIComponent","JSON","stringify","copyInvitationLink","petName","Promise","resolve","inviteLink","navigator","clipboard","writeText","alert","generateUtil","util","invitations","setInvitations","_invitation","index","signedDelegations","signedDelegation","intendedRevocation","delegationHash","createSignedDelegationHash","signedIntendedRevocation","signRevocation","revokeDelegation","newInvites","splice","localStorage","setItem","createMembership","reportPhishers","phishers","membership","contractInfo","invocations","all","_phisher","phisher","indexOf","slice","desiredTx","populateTransaction","claimIfPhisher","transaction","to","gasLimit","queue","Math","floor","random","signedInvocations","signInvocations","batch","replayProtection","nonce","invoke","config","setPhisher","setPhishers","loaded","setLoaded","rawStorage","getItem","storedPhishers","parse","includes","newPhishers","push","filter","p","SubmitBatchButton","clear","reportMembers","members","_member","member","claimIfMember","setMembers","storedMembers","newMembers","MemberCheck","checkMember","MemberCheckButton","isMember","signDelegation","sigUtil","TypedDataUtils","validateInvitation","Members","query","search","useLocation","useMemo","URLSearchParams","useQuery","loadingFromDisk","setLoadingFromDisk","errorMessage","setErrorMessage","setInvitation","history","useHistory","parsedInvitation","rawLoaded","document","cookie","get","checkInvitations","loadedInvitations","inviteView","addInvitation","tier","prompt","newInvitation","createInvitation","generateInviteView","PhishingReport","MemberReport","ReviewAndRevokeInvitations","QueryParamsRouter","exact","path","App","src","logo","alt","href","themes","dark","light","prevTheme","subgraphUri","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","getElementById","__read","this","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","__spreadArray","from","pack","l","Array","prototype","concat","createTypedMessage","Address","secp","keccak_256","Error","_a","_b","_c","recipientAddress","delegation","createFirstDelegatedInvitation","createDelegatedInvitation","createMembershipFromDelegation","signedDelegations_1","lastSignedDelegation","hexHash","firstInvitation","forEach","invocation","privateKey","signRevocationMessage","lastDelegation","intentionToRevoke","hashStruct","recoverSigner","recoverDelegationSigner","signInvocation","recoverInvocationSigner","signedInvocation","revocation","recoverRevocationSignature","signedRevocation","typedMessage","recoverTypedSignature","signature","signTypedData","fromHexString","substring","intendedSender","canGrant","d","delegationSigner","generateAccount","toHexString","caveats","enforcer","terms","delegatorKey","newSignedDelegation","undefined","hexString","matched","match","mapped","byte","parseInt","Uint8Array","buffer","x","padStart","join","privKey","utils","randomPrivateKey","addressForKey","fromPrivateKey","IntentionToRevoke","SignedIntentionToRevoke"],"mappings":"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","file":"static/js/main.9e368a90.chunk.js","sourcesContent":["const typedMessage = {\n  primaryType: 'Delegation',\n  domain: {\n    name: 'MobyMask',\n    version: '1',\n  },\n\n  entries: {\n    delegate: \"address\",\n    caveat: \"Caveat\",\n    authority: \"SignedDelegation\",\n  },\n\n  types: {\n    EIP712Domain: [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ],\n    Invocation: [\n      { name: 'transaction', type: 'Transaction' },\n      { name: 'authority', type: 'SignedDelegation[]' },\n    ],\n    Invocations: [\n      { name: 'batch', type: 'Invocation[]' },\n      { name: 'replayProtection', type: 'ReplayProtection' },\n    ],\n    SignedInvocation: [\n      { name: 'invocations', type: 'Invocations' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    Transaction: [\n      { name: 'to', type: 'address' },\n      { name: 'gasLimit', type: 'uint256' },\n      { name: 'data', type: 'bytes' },\n    ],\n    ReplayProtection: [\n      { name: 'nonce', type: 'uint' },\n      { name: 'queue', type: 'uint' },\n    ],\n    Delegation: [\n      { name: 'delegate', type: 'address' },\n      { name: 'authority', type: 'bytes32' },\n      { name: 'caveats', type: 'Caveat[]' },\n    ],\n    Caveat: [\n      { name: 'enforcer', type: 'address' },\n      { name: 'terms', type: 'bytes' },\n    ],\n    SignedDelegation: [\n      { name: 'delegation', type: 'Delegation' },\n      { name: 'signature', type: 'bytes' },\n    ],\n  }\n};\n\nmodule.exports = typedMessage;\n","const { types } = require('./types');\n\nmodule.exports = function createTypedMessage (verifyingContract, message, primaryType, contractName, chainId) {\n  console.log('creating typed message with', [...arguments])\n  return { data: {\n    types,\n    primaryType,\n    domain: {\n      name: contractName,\n      version: '1',\n      chainId,\n      verifyingContract,\n    },\n    message,\n  }};\n}\n\n","export default __webpack_public_path__ + \"static/media/logo.06de1321.svg\";","const chainIds = {\n  0: \"kardia\",\n  1: \"ethereum\",\n  3: \"ropsten test\",\n  4: \"rinkeby test\",\n  5: \"goerli test\",\n  8: \"ubiq\",\n  10: \"optimism\",\n  19: \"songbird\",\n  20: \"elastos\",\n  25: \"cronos\",\n  30: \"rsk\",\n  40: \"telos\",\n  42: \"kovan test\",\n  52: \"csc\",\n  55: \"zyx\",\n  56: \"binance\",\n  57: \"syscoin\",\n  60: \"gochain\",\n  61: \"ethclassic\",\n  66: \"okexchain\",\n  70: \"hoo\",\n  82: \"meter\",\n  88: \"tomochain\",\n  100: \"xdai\",\n  106: \"velas\",\n  108: \"thundercore\",\n  122: \"fuse\",\n  128: \"heco\",\n  137: \"polygon\",\n  200: \"xdaiarb\",\n  246: \"energyweb\",\n  250: \"fantom\",\n  269: \"hpb\",\n  288: \"boba\",\n  321: \"kucoin\",\n  336: \"shiden\",\n  361: \"theta\",\n  534: \"candle\",\n  592: \"astar\",\n  820: \"callisto\",\n  888: \"wanchain\",\n  1088: \"metis\",\n  1284: \"moonbeam\",\n  1285: \"moonriver\",\n  2020: \"ronin\",\n  2612: \"ezchain\",\n  4689: \"iotex\",\n  5050: \"xlc\",\n  5551: \"nahmii\",\n  8217: \"klaytn\",\n  10000: \"smartbch\",\n  32659: \"fusion\",\n  42161: \"arbitrum\",\n  42220: \"celo\",\n  42262: \"oasis\",\n  43114: \"avalanche\",\n  71394: \"godwoken\",\n  333999: \"polis\",\n  1313161554: \"aurora\",\n  1666600000: \"harmony\",\n  11297108109: \"palm\",\n  836542336838601: \"curio\",\n};\n\nexport default chainIds;\n","import React, { useEffect, useState } from \"react\";\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport chainList from './chainList';\n\nexport default function LazyConnect (props) {\n  const { actionName, chainId } = props;\n  let { opts = {} } = props;\n  const { needsAccountConnected = true } = opts;\n  const [provider, setInjectedProvider] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [userChainId, setUserChainId] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  if (!provider && MetaMaskOnboarding.isMetaMaskInstalled()) { \n    setInjectedProvider(window.ethereum);\n  }\n\n  const chainName = chainId ? chainList[Number(chainId)] : null;\n\n  // Get accounts;\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    getAccounts()\n    .then(setAccounts)\n    .catch(console.error);\n\n    async function getAccounts() {\n      try {\n        const _accounts = await provider.request({ method: 'eth_accounts' });\n        if (_accounts.length > 0) {\n          setAccounts(_accounts);\n        }\n      } catch (err) {\n        console.log('Getting accounts failed!', err);\n      }\n    }\n\n    provider.on(\"accountsChanged\", setAccounts);\n\n    return () => {\n      provider.removeListener('accountsChanged', setAccounts);\n    }\n  }, []);\n\n  // Get current selected network:\n  useEffect(() => {\n    if (!provider || userChainId) {\n      return;\n    }\n    getUserChainId()\n    .then(setUserChainId)\n    .catch(console.error);\n\n    async function getUserChainId() {\n      const chainId = await provider.request({ method: 'eth_chainId' });\n      return chainId;\n    }\n\n    provider.on('chainChanged', setUserChainId);\n\n    return () => {\n      provider.removeListener('chainChanged', setUserChainId);\n    }\n  }, []);\n\n  const needsToSwitchChain = Number(userChainId) !== chainId;\n  const needsToConnectAccount = needsAccountConnected && (!accounts || accounts.length === 0);\n  const requiresAction = needsToSwitchChain || needsToConnectAccount;\n\n  if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\n    return (<div className=\"lazyConnect\">\n      { createChecklist({\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        provider,\n        needsToConnectAccount,\n        setLoading,\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n      <button onClick={() => {\n        const onboarding = new MetaMaskOnboarding();\n        onboarding.startOnboarding();\n        }}>Get MetaMask</button>\n    </div>);\n  }\n  \n  if (requiresAction) {\n    return <div className=\"lazyConnect\">\n      { createChecklist({\n        setLoading,\n        provider,\n        needsToConnectAccount,\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n    </div>\n  }\n\n  if (loading) {\n    return (<div className=\"lazyConnect\">Loading...</div>)\n  }\n\n  const { children } = props;\n\n  const childrenWithProps = React.Children.map(children, child => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { provider });\n    }\n    return child;\n  });  \n\n  return (<div className=\"lazyConnected\">{childrenWithProps}</div>)\n}\n\nfunction createChecklist (checklistOpts) {\n  const { chainId, userChainId, chainName, setAccounts, provider, setLoading,\n    needsToConnectAccount,\n    needsAccountConnected, actionName, hasWallet, accounts } = checklistOpts;\n  return (<div>\n    <p>You need a few things to {actionName}.</p>\n    <ol>\n      { hasWallet ?\n        <li>✅ Get a web3 compatible Wallet (like MetaMask)</li> :\n        <li>☐ Get a web3 compatible Wallet (like MetaMask)</li> }\n      { switchAccountsItem({ needsAccountConnected, needsToConnectAccount, setAccounts, provider, setLoading, accounts, hasWallet }) }\n      { switchNetworkItem({ chainId, userChainId, chainName, setAccounts, provider, setLoading, hasWallet })} \n    </ol>\n   </div>);\n}\n\nfunction switchAccountsItem (opts) {\n  const { needsToConnectAccount, setAccounts, accounts, provider, hasWallet } = opts;\n\n  if (!needsToConnectAccount) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>☐ Connect an account</li>;\n  }\n\n  if (typeof accounts !== 'undefined' && accounts.length > 0) {\n    return null;\n  }\n\n  return <li>☐ <button onClick={async () => {\n      const _accounts = await provider.request({ method: 'eth_requestAccounts' });\n      setAccounts(_accounts);\n    }}>Connect an account</button>\n  </li>\n}\n\nfunction switchNetworkItem (opts) {\n  const { chainId, userChainId, chainName, provider, setLoading, hasWallet } = opts;\n  const needsToSwitchChain =  !!chainId && (Number(userChainId) !== chainId);\n\n  if (!needsToSwitchChain) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>Switch to the {chainName} network</li>;\n  }\n\n  return <li>\n    <button onClick={async () => {\n      provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x' + chainId.toString(16) }],\n      })\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((reason) => {\n        setLoading(false);\n        setError(reason);\n      });\n      setLoading(true);\n    }}>Switch to the { chainName } network</button>\n  </li>\n}\n","import { ethers } from \"ethers\";\nconst { abi } = require('./artifacts');\nconst { address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function createRegistry (provider, readOnly = false) {\n  const wallet = !readOnly && provider.getSigner();\n  const toUse = readOnly ? provider : wallet;\n  const registry = await attachRegistry(toUse);\n  return registry;\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\n\nexport default function TextInput (props) {\n  const { onComplete, placeholder, buttonLabel } = props;\n  const [ value, setValue ] = useState('');\n      \n  return <div>\n    <input type=\"text\" value={value} placeholder={placeholder} onKeyPress={(event) => {\n      if (event.key === 'Enter') {\n        onComplete(value);\n        setValue('');\n      }\n    }} onChange={(event) => {\n      setValue(event.target.value);\n    }}/>\n    \n    <button onClick={() => { onComplete(value) }}>{ buttonLabel }</button>\n  </div>\n} \n","import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport createRegistry from './createRegistry';\nimport TextInput from './TextInput';\n\nexport default function PhisherCheck (props) {\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Phisher Status</h3>\n      <TextInput placeholder=\"Enter a Twitter name\" buttonLabel=\"Check\"\n      onComplete={(name) => {\n        props.checkPhisher(name)\n        .then((result) => {\n          setOutput(result);\n        })\n        .catch(console.error);\n      }}/>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}\n\nexport function PhisherCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider, true)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return <PhisherCheck checkPhisher={async (name) => {\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isPhisher(codedName);\n      if (result) {\n        return `${name} is an accused phisher.`;\n      } else {\n        return `${name} is not a registered phisher.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}","import React from 'react';\n\nfunction InstallExtension() {\n  return (\n    <div className='box'>\n      <p>\n        Get warned about phishers on the web:\n      </p>\n      <button className='installButton' disabled>Install the Web Extension (coming soon!)</button>\n    </div>\n  );\n}\n\nexport default InstallExtension;\n","export default function linkForInvitation (invitation) {\n  return window.location.origin + '/#/members?invitation=' + encodeURIComponent(JSON.stringify(invitation));\n}","import linkForInvitation from \"./linkForInvitation\";\n\nexport default function copyInvitationLink (invitation, petName) {\n  return new Promise((resolve) => {\n    const inviteLink = linkForInvitation(invitation);\n    navigator.clipboard.writeText(inviteLink).then(function() {\n      alert('Your invite link for ' + petName + ' has been copied to your clipboard. Paste it somewhere only the intended recipients can see or you can lose your membership: \\n\\n' + inviteLink);\n      resolve();\n    })\n    .catch(function(err) {\n      alert('Had trouble writing to your clipboard. Here is your invite link (it may be copied). Paste it somewhere only the intended recipients can see or you can lose your membership: \\n\\n' + inviteLink);\n      resolve();\n    });\n  });\n}\n","import { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { chainId, address, name } = require('./config.json');\nimport createRegistry from './createRegistry';\nimport linkForInvitation from './linkForInvitation';\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\nimport copyInvitationLink from './copyInvitationLink';\n\nexport default function (props) {\n  const { provider, invitations, invitation, setInvitations } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return (<details className='box'>\n    <summary>Outstanding Invitations ({invitations.length})</summary>\n    { invitations.map((_invitation, index) => {\n      return (\n        <div key={index}>\n          <span>{ _invitation.petName }</span>\n          <input type=\"text\" readOnly value={linkForInvitation(_invitation.invitation)}></input>\n          <button onClick={() => {\n            copyInvitationLink(_invitation.invitation, _invitation.petName)\n            .catch((err) => alert(err.message));\n          }}>Copy</button>\n          <button onClick={async () => {\n            const { signedDelegations } = _invitation.invitation;\n            const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n            const delegationHash = util.createSignedDelegationHash(signedDelegation);\n            const intendedRevocation = {\n              delegationHash,\n            }\n            const signedIntendedRevocation = util.signRevocation(intendedRevocation, invitation.key);\n\n            await registry.revokeDelegation(signedDelegation, signedIntendedRevocation);\n\n            const newInvites = [...invitations];\n            newInvites.splice(index, 1);\n            localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n            setInvitations(newInvites);\n          }}>Revoke</button>\n        </div>\n      )\n    })}\n  </details>);\n\n}","const { chainId, address, name } = require('./config.json');\n\nexport default {\n  chainId,\n  name,\n  verifyingContract: address,\n}\n","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { createMembership } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nimport contractInfo from \"./contractInfo\";\nconst CONTRACT_NAME = name;\n\nexport default async function reportPhishers (phishers, provider, invitation) {\n  const { key, signedDelegations } = invitation;\n  const membership = createMembership({\n    contractInfo,\n    invitation,\n  });\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(phishers.map(async (phisher) => {\n    const _phisher = phisher.indexOf('@') === '0' ? phisher.slice(1) : phisher;\n    const desiredTx = await registry.populateTransaction.claimIfPhisher(`TWT:${_phisher.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n      authority: signedDelegations,\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = membership.signInvocations({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  });\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportPhishers from './reportPhishers';\nimport LazyConnect from './LazyConnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json')\nconst { chainId } = config;\nimport TextInput from './TextInput';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ phisher, setPhisher ] = useState();\n  const [ phishers, setPhishers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingPhishers');\n      let storedPhishers = JSON.parse(rawStorage) || [];\n      setPhishers(storedPhishers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  return (\n    <div className='box'>\n      <h3>Report a phishing attempt</h3>\n      <TextInput placeholder=\"@phisher_person\" buttonLabel=\"Report\"\n        onComplete={(phisher) => {\n        const _phisher = phisher.indexOf('@') === 0 ? phisher.slice(1) : phisher;\n        if (phishers.includes(_phisher)) return;\n        const newPhishers = [...phishers, _phisher];\n        console.log('new phishers is ', newPhishers);\n        localStorage.setItem('pendingPhishers', JSON.stringify(newPhishers));\n        setPhishers(newPhishers);\n      }}/>\n\n      <button onClick={() => {\n        if (phisher) {\n          phishers.push(phisher);\n          localStorage.setItem('pendingPhishers', JSON.stringify(phishers));\n          setPhisher('');\n        } \n      }}>Report twitter phisher</button>\n\n      <div className='phishers'>\n        { phishers && phishers.length > 0 ? \n        <div>\n          <p>Pending phishing reports:</p>\n          <ol>\n            {phishers.map((phisher, index) => {\n              return (<li key={index}>{phisher} <button onClick={() => {\n                const newPhishers = phishers.filter((p) => p !== phisher);\n                localStorage.setItem('pendingPhishers', JSON.stringify(newPhishers));\n                setPhishers(newPhishers);\n              }}>Remove</button></li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit reports directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton phishers={phishers} invitation={invitation} setPhishers={setPhishers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, phishers, invitation, setPhishers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  console.log('trying to submit batch with', ethersProvider);\n  return (<div>\n    <button onClick={async () => {\n      try {\n        const block = await reportPhishers(phishers, ethersProvider, invitation);\n        localStorage.clear();\n        setPhishers([]);\n      } catch (err) {\n        alert(`Error: ${err}`);\n      }\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import { ethers } from \"ethers\";\nimport contractInfo from \"./contractInfo\";\nconst types = require('./types')\nconst { createMembership } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function reportMembers (members, provider, invitation) {\n  const membership = createMembership({\n    contractInfo,\n    invitation,\n  });\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(members.map(async (member) => {\n    const _member = member.indexOf('@') === '0' ? member.slice(1) : member;\n    const desiredTx = await registry.populateTransaction.claimIfMember(`TWT:${_member.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = membership.signInvocations({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  });\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportMembers from './reportMembers';\nimport LazyConnect from './LazyConnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json')\nconst { chainId } = config;\nimport TextInput from './TextInput';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ members, setMembers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(function loadMembersFromDisk () {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingMembers');\n      let storedMembers = JSON.parse(rawStorage) || [];\n      setMembers(storedMembers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  return (\n    <div className='box'>\n      <h3>Endorse a member</h3>\n      <TextInput placeholder=\"@member_person\" buttonLabel=\"Endorse\"\n        onComplete={(member) => {\n          const _member = member.indexOf('@') === 0 ? member.slice(1) : member;\n          if (members.includes(_member)) return;\n          const newMembers = [...members, _member];\n          setMembers(newMembers);\n          localStorage.setItem('pendingMembers', JSON.stringify(newMembers));\n      }}/>\n\n      <div className='members'>\n        { members && members.length > 0 ? \n        <div>\n          <p>Pending member nominations:</p>\n          <ol>\n            {members.map((member, index) => {\n              return (<li key={index}>{member} <button onClick={() => {\n                const newMembers = members.filter((p) => p !== member);\n                localStorage.setItem('pendingMembers', JSON.stringify(newMembers));\n                setMembers(newMembers);\n              }}>Remove</button></li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit endorsements directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton members={members} invitation={invitation} setMembers={setMembers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, members, invitation, setMembers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  return (<div>\n    <button onClick={async () => {\n      try {\n        const block = await reportMembers(members, ethersProvider, invitation);\n        localStorage.clear();\n        setMembers([]);\n     } catch (err) {\n        console.error(err);\n        alert(`Error: ${err}`);\n      }\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport createRegistry from './createRegistry';\nimport TextInput from './TextInput';\n\nexport default function MemberCheck (props) {\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Member Status</h3>\n      <TextInput placeholder=\"Enter a Twitter name\" buttonLabel=\"Check\"\n      onComplete={(name) => {\n        props.checkMember(name)\n        .then((result) => {\n          setOutput(result);\n        })\n        .catch(console.error);\n      }}/>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}\n\nexport function MemberCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider, true)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return <MemberCheck checkMember={async (name) => {\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isMember(codedName);\n      if (result) {\n        return `${name} is an endorsed moby.`;\n      } else {\n        return `${name} has not been endorsed.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}","const { signDelegation } = require('eth-delegatable-utils');\nimport { ethers } from \"ethers\";\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst sigUtil = require('eth-sig-util');\nconst { TypedDataUtils } = sigUtil;\nconst types = require('./types');\n\nexport default function createInvitation (invitation) {\n  const { signedDelegations, key } = invitation;\n  const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n  const delegate = ethers.Wallet.createRandom();\n  console.log('types', types);\n  const delegationHash = TypedDataUtils.hashStruct('SignedDelegation', signedDelegation, types.types, true);\n  const hexHash = '0x' + delegationHash.toString('hex');\n\n  const delegation = {\n    delegate: delegate.address,\n    authority: hexHash,\n\n    // Revokable by default:\n    caveats: [{\n      enforcer: address,\n      terms: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    }]\n  }\n\n  const newSignedDelegation = signDelegation(delegation, key, {\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  });\n  const newInvite = {\n    signedDelegations: [...signedDelegations, newSignedDelegation],\n    key: delegate.privateKey,\n  }\n  console.log({ newInvite });\n  return newInvite;\n}\n","import React, { useEffect, useState } from 'react';\nimport InstallExtension from \"./InstallExtension\"\nimport ReviewAndRevokeInvitations from './ReviewAndRevokeInvitations';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nconst { validateInvitation } = require('eth-delegatable-utils');\nimport contractInfo from './contractInfo';\nconst { chainId } = contractInfo;\n\nimport PhishingReport from './PhishingReport';\nimport MemberReport from './MemberReport';\nimport { PhisherCheckButton } from './PhisherCheck';\nimport { MemberCheckButton } from './MemberCheck';\nimport createInvitation from './createInvitation';\nconst { createMembership } = require('eth-delegatable-utils');\nimport LazyConnect from './LazyConnect';\nimport copyInvitationLink from './copyInvitationLink';\n\nexport default function Members (props) {\n  const query = useQuery();\n\n  const [ loaded, setLoaded ] = useState(false); // For loading invitations\n  const [ loadingFromDisk, setLoadingFromDisk ] = useState(false);\n  const [ errorMessage, setErrorMessage ] = useState(null);\n\n  const [ invitation, setInvitation ] = useState(null); // Own invitation\n  const [ invitations, setInvitations ] = useState([]); // Outbound invitations\n  const history = useHistory();\n\n  \n  // Load user's own invitation from disk or query string:\n  useEffect(() => {\n    async function checkInvitations () {\n      if (!loadingFromDisk) {\n        setLoadingFromDisk(true);\n\n        if (!invitation) {\n          try {\n            let parsedInvitation;\n            let rawLoaded = document.cookie;\n            if (rawLoaded) {\n              parsedInvitation = JSON.parse(rawLoaded);\n            }\n            if (!parsedInvitation || parsedInvitation === 'null') {\n              parsedInvitation = JSON.parse(query.get(\"invitation\"));\n              validateInvitation({\n                contractInfo,\n                invitation: parsedInvitation,\n              });\n              document.cookie = query.get(\"invitation\");\n            }\n\n            history.push('/members');\n            validateInvitation({\n              contractInfo,\n              invitation: parsedInvitation,\n            });\n            if (parsedInvitation) {\n              setInvitation(parsedInvitation);\n            }\n            setLoadingFromDisk(false);\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(err.message);\n          }\n        }\n      }\n    }\n\n    checkInvitations().catch(console.error);\n  });\n\n  // Load user's outstanding invitations from disk:\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('outstandingInvitations');\n      let loadedInvitations = JSON.parse(rawStorage) || [];\n      setInvitations(loadedInvitations);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  if (!invitation) {\n    if (errorMessage) {\n      return (<div>\n        <h3>Invalid invitation.</h3>\n        <p>Sorry, we were unable to process your invitation.</p>\n        <p className='error'>{ errorMessage } </p>\n      </div>)   \n    } else {\n      return (<div>\n        <h3>Processing invitation...</h3> \n      </div>)\n    }\n  }\n\n  const inviteView = generateInviteView(invitation, (invitation) => {\n    console.log('adding invitation', invitation);\n    if (invitation) {\n      const newInvites = [...invitations, invitation];\n      localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n      setInvitations(newInvites);\n    } \n  });\n\n  return (\n    <div>\n      <div className=\"controlBoard\">\n\n        <div className=\"phisherBox\">\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is a phisher\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <PhisherCheckButton/>\n            </LazyConnect>\n          </div>\n\n          <div className=\"box\">\n            <PhishingReport invitation={invitation}/>\n          </div>\n        </div>\n\n        <div className=\"memberBox\">\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is endorsed\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <MemberCheckButton/>\n            </LazyConnect>\n          </div>\n\n          <div className=\"box\">\n            <MemberReport invitation={invitation}/>\n          </div>\n        </div>\n\n        <div className=\"inviteBox\">\n          { inviteView }\n\n          <LazyConnect actionName=\"revoke outstanding invitations\" chainId={chainId}>\n            <ReviewAndRevokeInvitations\n              invitations={invitations}\n              invitation={invitation}\n              setInvitations={setInvitations}/>\n          </LazyConnect>\n\n        </div>\n\n        <InstallExtension />\n      </div>\n\n    </div>\n  )\n}\n\nfunction generateInviteView(invitation, addInvitation) {\n  const tier = invitation.signedDelegations.length;\n\n  const membership = createMembership({\n    invitation,\n    contractInfo,\n  })\n\n  if (tier < 4) {\n    return (\n      <div className='box'>\n        <p>You are a tier {invitation.signedDelegations.length} invitee. This means you can invite up to {4-tier} additional tiers of members.</p>\n        <p>Invite people who you think will respect the system, and only report definite impostors and frauds, and only endorse people who are neither.</p>\n        <p>If you invite an abusive person and don't revoke their activity quickly, you may have your membership revoked.</p>\n        <button onClick={() => {\n          const petName = prompt('Who is this invitation for (for your personal use only, so you can view their reports and revoke the invitation)?');\n          const newInvitation = membership.createInvitation();\n          copyInvitationLink(newInvitation, petName)\n          .then(() => {\n            if (addInvitation) {\n              addInvitation({\n                petName,\n                invitation: newInvitation,\n              });\n            }\n          })\n          .catch(() => {\n            addInvitation({\n              petName,\n              invitation: newInvitation,\n            });\n          })\n        }}>Create new invite link</button>\n      </div> \n    );\n  } else if (tier === 4) {\n    <div>\n      <p>You are a tier 4 member. That means you can't currently invite new members through this interface, but if this site becomes popular, we can add support for this later.</p>\n    </div> \n  }\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\nimport LazyConnect from './LazyConnect';\nimport { PhisherCheckButton } from './PhisherCheck';\nconst { chainId } = require('./config.json');\n\n// Routes\nimport InstallExtension from './InstallExtension';\nimport Members from './Members';\nimport { MemberCheckButton } from './MemberCheck';\n\nexport default function QueryParamsRouter(props) {\n  const { provider } = props;\n  let query = useQuery();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div className='box'>\n          <LazyConnect actionName=\"check if a user is a phisher or member\" chainId={chainId}\n            opts={{ needsAccountConnected: false }}>\n            <PhisherCheckButton/>\n            <MemberCheckButton/>\n          </LazyConnect>\n        </div>\n\n        <InstallExtension/>\n      </Route>\n      <Route path=\"/members/\">\n        <Members/>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import logo from './logo.svg';\nimport QueryParamsRoute from './QueryParamsRoute';\nimport \"antd/dist/antd.css\";\nimport { HashRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <h1>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          MobyMask</h1>\n        <p>\n          An alliance of good-hearted phish, aiming to eliminate phishers. \n        </p>\n      </header>\n\n      <Router>\n        <QueryParamsRoute/>\n      </Router>\n\n      <div className='footer'>\n        <p>Reporters are added on an invite-only basis.</p>\n        <p>Learn more about how our invite system works at <a href=\"https://github.com/danfinlay/delegatable-eth\">delegatable-eth</a>.</p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar types = require('./types');\nvar createTypedMessage = require('./createTypedMessage');\nvar sigUtil = require('@metamask/eth-sig-util');\nvar TypedDataUtils = sigUtil.TypedDataUtils;\nvar abi = require('./artifacts').abi;\nvar typedMessage = require('./types');\nvar Address = require('micro-eth-signer').Address;\nvar secp = require('@noble/secp256k1');\nvar keccak_256 = require('@noble/hashes/sha3').keccak_256;\n/* This is designed to be a particularly convenient method for interacting with delegations.\n * It creates an object that can be used to sign a delegation, or revoke a delegation.\n * It can also be used to create invitation objects, and can be instantiated with those invitation objects.\n */\nexports.createMembership = function createMembership(opts) {\n    var invitation, key, contractInfo;\n    if ('invitation' in opts) {\n        invitation = opts.invitation;\n    }\n    if ('key' in opts) {\n        key = opts.key;\n    }\n    if ('contractInfo' in opts) {\n        contractInfo = opts.contractInfo;\n    }\n    if (!invitation && !key) {\n        throw new Error('Either an invitation or a key is required to initialize membership.');\n    }\n    if (!key && invitation) {\n        key = invitation.key;\n        if (!contractInfo && invitation.contractInfo) {\n            contractInfo = invitation.contractInfo;\n        }\n    }\n    if (invitation) {\n        exports.validateInvitation({ invitation: invitation, contractInfo: contractInfo });\n    }\n    if (!contractInfo || !contractInfo.verifyingContract) {\n        throw new Error('Contract info must be provided to initialize membership.');\n    }\n    return {\n        createInvitation: function (_a) {\n            var _b;\n            var _c = _a === void 0 ? {} : _a, recipientAddress = _c.recipientAddress, delegation = _c.delegation;\n            if (!invitation) {\n                return exports.createFirstDelegatedInvitation({ contractInfo: contractInfo, recipientAddress: recipientAddress, delegation: delegation, key: key });\n            }\n            // Having an invitation means there may be signedDelegations to chain from:\n            if (((_b = invitation === null || invitation === void 0 ? void 0 : invitation.signedDelegations) === null || _b === void 0 ? void 0 : _b.length) === 0) {\n                var newInvitation = exports.createFirstDelegatedInvitation({ contractInfo: contractInfo, recipientAddress: recipientAddress, delegation: delegation, key: key });\n                exports.validateInvitation({ invitation: newInvitation, contractInfo: contractInfo });\n                return newInvitation;\n            }\n            else {\n                var newInvitation = exports.createDelegatedInvitation({\n                    contractInfo: contractInfo,\n                    invitation: invitation,\n                    delegation: delegation,\n                    key: key,\n                });\n                exports.validateInvitation({ invitation: newInvitation, contractInfo: contractInfo });\n                return newInvitation;\n            }\n        },\n        createMembershipFromDelegation: function (delegation) {\n            if (invitation) {\n                var signedDelegations = invitation.signedDelegations;\n                if (invitation) {\n                    var signedDelegations_1 = invitation.signedDelegations;\n                    var lastSignedDelegation = signedDelegations_1[signedDelegations_1.length - 1];\n                    var delegationHash = exports.createSignedDelegationHash(lastSignedDelegation);\n                    var hexHash = '0x' + delegationHash.toString('hex');\n                    delegation.authority = hexHash;\n                }\n                else {\n                    delegation.authority = '0x0000000000000000000000000000000000000000000000000000000000000000';\n                }\n                var newInvitation = exports.createDelegatedInvitation({\n                    contractInfo: contractInfo,\n                    recipientAddress: delegation.delegate,\n                    invitation: invitation,\n                    delegation: delegation,\n                });\n                if (!newInvitation.key) {\n                    // We can allow instantiating with a local delegate key later,\n                    // but for now it seems like a less common use case so I'm not prioritizing it.\n                    throw new Error('Cannot create a membership object without a signing key.');\n                }\n                return exports.createMembership({\n                    invitation: newInvitation,\n                    contractInfo: contractInfo,\n                });\n            }\n            delegation.authority = '0x0000000000000000000000000000000000000000000000000000000000000000';\n            var firstInvitation = exports.createFirstDelegatedInvitation({\n                contractInfo: contractInfo,\n                recipientAddress: delegation.delegate,\n                delegation: delegation,\n                key: key,\n            });\n            return exports.createMembership({\n                invitation: firstInvitation,\n                contractInfo: contractInfo,\n            });\n        },\n        signDelegation: function (delegation) {\n            if (invitation) {\n                var signedDelegations = invitation.signedDelegations;\n                var lastSignedDelegation = signedDelegations[signedDelegations.length - 1];\n                var delegationHash = exports.createSignedDelegationHash(lastSignedDelegation);\n                var hexHash = '0x' + delegationHash.toString('hex');\n                delegation.authority = hexHash;\n            }\n            else {\n                delegation.authority = '0x0000000000000000000000000000000000000000000000000000000000000000';\n            }\n            // function signDelegation ({ delegation, key, contractInfo }):\n            return exports.signDelegation({ contractInfo: contractInfo, delegation: delegation, key: key });\n        },\n        signInvocations: function (invocations) {\n            invocations.batch.forEach(function (invocation) {\n                if (invitation && invitation.signedDelegations && invitation.signedDelegations.length > 0) {\n                    if (!('authority' in invocation)) {\n                        invocation.authority = invitation.signedDelegations;\n                    }\n                }\n                else {\n                    invocation.authority = [];\n                }\n            });\n            return exports.signInvocations({ invocations: invocations, privateKey: key, contractInfo: contractInfo });\n        },\n        signRevocationMessage: function (invitation) {\n            var signedDelegations = invitation.signedDelegations;\n            var lastDelegation = signedDelegations[signedDelegations.length - 1];\n            // Owner revokes outstanding delegation\n            var intentionToRevoke = {\n                delegationHash: TypedDataUtils.hashStruct('SignedDelegation', lastDelegation, types, true)\n            };\n            return exports.signRevocation(intentionToRevoke, key);\n        }\n    };\n};\n// Util curries contract info into a reusable utility\nexports.generateUtil = function generateUtil(contractInfo) {\n    return {\n        recoverSigner: function (signedDelegation) { return exports.recoverSigner(signedDelegation, contractInfo); },\n        signDelegation: function (delegation, key) { return exports.signDelegation({ delegation: delegation, key: key, contractInfo: contractInfo }); },\n        createInvitation: function (delegation, privateKey) { return exports.createInvitation({ delegation: delegation, privateKey: privateKey, contractInfo: contractInfo }); },\n        recoverDelegationSigner: function (signedDelegation) { return exports.recoverDelegationSigner(signedDelegation, contractInfo); },\n        signInvocation: function (invocation, privateKey) { return exports.signInvocation({ invocation: invocation, privateKey: privateKey, contractInfo: contractInfo }); },\n        recoverInvocationSigner: function (signedInvocation) { return exports.recoverInvocationSigner({ signedInvocation: signedInvocation, contractInfo: contractInfo }); },\n        signRevocation: function (revocation, privateKey) { return exports.signRevocation(revocation, privateKey, contractInfo); },\n        recoverRevocationSignature: function (signedRevocation) { return exports.recoverRevocationSignature(signedRevocation, contractInfo); },\n    };\n};\nexports.createSignedDelegationHash = function createDelegationHash(signedDelegation) {\n    var hash = TypedDataUtils.hashStruct('SignedDelegation', signedDelegation, types.types, 'V4');\n    return hash;\n};\nexports.recoverDelegationSigner = function recoverDelegationSigner(signedDelegation, contractInfo) {\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    types.domain.chainId = chainId;\n    types.domain.name = name;\n    types.domain.verifyingContract = verifyingContract;\n    var typedMessage = createTypedMessage(verifyingContract, signedDelegation.delegation, 'Delegation', name, chainId);\n    var signer = sigUtil.recoverTypedSignature({\n        data: typedMessage.data,\n        signature: signedDelegation.signature,\n        version: 'V4',\n    });\n    return signer;\n};\nexports.recoverSigner = exports.recoverDelegationSigner;\nexports.recoverInvocationSigner = function recoverInvocationSigner(_a) {\n    var signedInvocation = _a.signedInvocation, contractInfo = _a.contractInfo;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    types.domain.chainId = chainId;\n    types.domain.name = name;\n    types.domain.verifyingContract = verifyingContract;\n    var typedMessage = createTypedMessage(verifyingContract, signedInvocation.invocations, 'Invocations', name, chainId);\n    var signer = sigUtil.recoverTypedSignature({\n        data: typedMessage.data,\n        signature: signedInvocation.signature,\n        version: 'V4',\n    });\n    return signer;\n};\nexports.signInvocations = function signInvocations(_a) {\n    var invocations = _a.invocations, privateKey = _a.privateKey, contractInfo = _a.contractInfo;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    var typedMessage = createTypedMessage(verifyingContract, invocations, 'Invocations', name, chainId);\n    var signature = sigUtil.signTypedData({\n        privateKey: exports.fromHexString(privateKey.indexOf('0x') === 0 ? privateKey.substring(2) : privateKey),\n        data: typedMessage.data,\n        version: 'V4',\n    });\n    var signedInvocations = {\n        signature: signature,\n        invocations: invocations,\n    };\n    return signedInvocations;\n};\nexports.signDelegation = function signDelegation(_a) {\n    var delegation = _a.delegation, key = _a.key, contractInfo = _a.contractInfo;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    var typedMessage = createTypedMessage(verifyingContract, delegation, 'Delegation', name, chainId);\n    var signature = sigUtil.signTypedData({\n        privateKey: exports.fromHexString(key.indexOf('0x') === 0 ? key.substring(2) : key),\n        data: typedMessage.data,\n        version: 'V4',\n    });\n    var signedDelegation = {\n        signature: signature,\n        delegation: delegation,\n    };\n    return signedDelegation;\n};\nexports.signRevocation = function signRevocation(revocation, privateKey, contractInfo) {\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    var typedMessage = createTypedMessage(verifyingContract, revocation, 'IntentionToRevoke', name, chainId);\n    var signature = sigUtil.signTypedData({\n        privateKey: exports.fromHexString(privateKey.indexOf('0x') === 0 ? privateKey.substring(2) : privateKey),\n        data: typedMessage.data,\n        version: 'V4',\n    });\n    var signedRevocation = {\n        signature: signature,\n        intentionToRevoke: revocation,\n    };\n    return signedRevocation;\n};\nexports.recoverRevocationSignature = function recoverRevocationSignature(signedRevocation, contractInfo) {\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    types.domain.chainId = chainId;\n    types.domain.name = name;\n    types.domain.verifyingContract = verifyingContract;\n    var typedMessage = createTypedMessage(verifyingContract, signedRevocation.revocation, 'IntentionToRevoke', name, chainId);\n    var signer = sigUtil.recoverTypedSignature({\n        data: typedMessage.data,\n        signature: signedRevocation.signature,\n        version: 'V4',\n    });\n    return signer;\n};\nexports.validateInvitation = function validateInvitation(_a) {\n    var contractInfo = _a.contractInfo, invitation = _a.invitation;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    if (!invitation) {\n        throw new Error('Invitation is required');\n    }\n    var signedDelegations = invitation.signedDelegations, key = invitation.key;\n    if (signedDelegations.length === 0 && key && typeof key === 'string') {\n        // we have to assume this is a root invitation, and cannot really validate it without trying things on chain.\n        return true;\n    }\n    // Trying to follow the code from Delegatable.sol as closely as possible here\n    // To ensure readable correctness.\n    var intendedSender = exports.recoverDelegationSigner(signedDelegations[0], {\n        chainId: chainId,\n        verifyingContract: verifyingContract,\n        name: name,\n    }).toLowerCase();\n    var canGrant = intendedSender.toLowerCase();\n    var authHash;\n    for (var d = 0; d < signedDelegations.length; d++) {\n        var signedDelegation = signedDelegations[d];\n        var delegationSigner = exports.recoverDelegationSigner(signedDelegation, {\n            chainId: chainId,\n            verifyingContract: verifyingContract,\n            name: name,\n        }).toLowerCase();\n        if (d === 0) {\n            intendedSender = delegationSigner;\n            canGrant = intendedSender.toLowerCase();\n        }\n        var delegation = signedDelegation.delegation;\n        if (delegationSigner !== canGrant) {\n            throw new Error(\"Delegation signer \".concat(delegationSigner, \" of delegation \").concat(d, \" does not match required signer \").concat(canGrant));\n        }\n        var delegationHash = exports.createSignedDelegationHash(signedDelegation);\n        // Skipping caveat evaluation for now\n        authHash = delegationHash;\n        canGrant = delegation.delegate.toLowerCase();\n    }\n    // TODO: Also verify the final canGrant equals the key address.\n    // Not adding yet b/c I want it well tested when I add it.\n    return !!invitation;\n};\n/* Allows a user to create a new invitation, which can be used to grant\n * that user's own permissions to the recipient.\n */\nexports.createInvitation = function createInvitation(opts) {\n    var contractInfo = opts.contractInfo, privateKey = opts.privateKey, recipientAddress = opts.recipientAddress;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    if (recipientAddress) {\n        return exports.createDelegatedInvitation(opts);\n    }\n    var delegate = exports.generateAccount();\n    // Prepare the delegation message.\n    // This contract is also a revocation enforcer, so it can be used for caveats:\n    var delegation = {\n        delegate: exports.toHexString(delegate.address),\n        authority: '0x0000000000000000000000000000000000000000000000000000000000000000',\n        caveats: [{\n                enforcer: verifyingContract,\n                terms: '0x0000000000000000000000000000000000000000000000000000000000000000',\n            }],\n    };\n    var typedMessage = createTypedMessage(verifyingContract, delegation, 'Delegation', name, chainId);\n    var signature = sigUtil.signTypedData({\n        privateKey: exports.fromHexString(privateKey.indexOf('0x') === 0 ? privateKey.substring(2) : privateKey),\n        data: typedMessage.data,\n        version: 'V4',\n    });\n    var signedDelegation = {\n        signature: signature,\n        delegation: delegation,\n    };\n    var invitation = {\n        signedDelegations: [signedDelegation],\n        key: delegate.key,\n    };\n    return invitation;\n};\n/* Allows a user to create a new invitation, which creates a\n * delegated delegation to another user.\n */\nexports.createDelegatedInvitation = function createDelegatedInvitation(_a) {\n    var contractInfo = _a.contractInfo, recipientAddress = _a.recipientAddress, invitation = _a.invitation, delegation = _a.delegation, key = _a.key;\n    var verifyingContract = contractInfo.verifyingContract;\n    var signedDelegations = invitation.signedDelegations;\n    var delegatorKey = key || invitation.key;\n    var signedDelegation = signedDelegations[signedDelegations.length - 1];\n    var delegationHash = exports.createSignedDelegationHash(signedDelegation);\n    var hexHash = '0x' + delegationHash.toString('hex');\n    if (delegation && delegation.delegate) {\n        recipientAddress = delegation.delegate;\n    }\n    var delegate;\n    if (!recipientAddress) {\n        delegate = exports.generateAccount();\n    }\n    else {\n        delegate = {\n            address: recipientAddress || delegation.delegate\n        };\n    }\n    if (!delegation) {\n        delegation = {\n            delegate: delegate.address,\n            authority: hexHash,\n            // defer to parent contract as caveat by default:\n            caveats: [{\n                    enforcer: verifyingContract,\n                    terms: '0x0000000000000000000000000000000000000000000000000000000000000000',\n                }]\n        };\n    }\n    if (!delegation.authority) {\n        delegation.authority = hexHash;\n    }\n    var newSignedDelegation = exports.signDelegation({\n        key: delegatorKey,\n        contractInfo: contractInfo,\n        delegation: delegation,\n    });\n    var newInvite = {\n        signedDelegations: __spreadArray(__spreadArray([], __read(signedDelegations), false), [newSignedDelegation], false),\n        key: (delegate === null || delegate === void 0 ? void 0 : delegate.key) || undefined,\n    };\n    return newInvite;\n};\n/* Allows an owner to create a delegation\n  * to another user.\n  * Unlike createDelegatedInvitation, this one does not require an existing invtation,\n  * and can create a first delegation from just a key.\n  */\nexports.createFirstDelegatedInvitation = function createFirstDelegatedInvitation(_a) {\n    var contractInfo = _a.contractInfo, recipientAddress = _a.recipientAddress, key = _a.key, delegation = _a.delegation;\n    var verifyingContract = contractInfo.verifyingContract;\n    var delegate;\n    if (!recipientAddress) {\n        delegate = exports.generateAccount();\n        recipientAddress = delegate.address;\n    }\n    else {\n        delegate = {\n            address: recipientAddress\n        };\n    }\n    if (!delegation) {\n        delegation = {\n            delegate: recipientAddress,\n            authority: '0x0000000000000000000000000000000000000000000000000000000000000000',\n            // defer to parent contract as caveat by default:\n            caveats: [{\n                    enforcer: verifyingContract,\n                    terms: '0x0000000000000000000000000000000000000000000000000000000000000000',\n                }]\n        };\n    }\n    else {\n        if (!delegation.authority) {\n            delegation.authority = '0x0000000000000000000000000000000000000000000000000000000000000000';\n        }\n    }\n    var newSignedDelegation = exports.signDelegation({ delegation: delegation, key: key, contractInfo: contractInfo });\n    var newInvite = {\n        signedDelegations: [newSignedDelegation],\n        key: (delegate === null || delegate === void 0 ? void 0 : delegate.key) || undefined,\n    };\n    return newInvite;\n};\nexports.fromHexString = function fromHexString(hexString) {\n    if (!hexString || typeof hexString !== 'string') {\n        throw new Error('Expected a hex string.');\n    }\n    var matched = hexString.match(/.{1,2}/g);\n    if (!matched) {\n        throw new Error('Expected a hex string.');\n    }\n    var mapped = matched.map(function (byte) { return parseInt(byte, 16); });\n    if (!mapped || mapped.length !== 32) {\n        throw new Error('Expected a hex string.');\n    }\n    return new Uint8Array(mapped);\n};\nexports.toHexString = function toHexString(buffer) {\n    return __spreadArray([], __read(buffer), false).map(function (x) { return x.toString(16).padStart(2, '0'); }).join('');\n};\nexports.generateAccount = function generateAccount() {\n    var privKey = secp.utils.randomPrivateKey();\n    var address = exports.addressForKey(privKey);\n    return {\n        address: address,\n        key: exports.toHexString(privKey),\n    };\n};\nexports.addressForKey = function addressForKey(key) {\n    var addr = Address.fromPrivateKey(key);\n    return addr;\n};\n","const typedMessage = {\n  primaryType: 'Delegation',\n  domain: {\n    name: 'PhisherRegistery',\n    version: '1',\n  },\n\n  entries: {\n    delegate: \"address\",\n    caveat: \"Caveat\",\n    authority: \"SignedDelegation\",\n  },\n\n  types: {\n    EIP712Domain: [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ],\n    Invocation: [\n      { name: 'transaction', type: 'Transaction' },\n      { name: 'authority', type: 'SignedDelegation[]' },\n    ],\n    Invocations: [\n      { name: 'batch', type: 'Invocation[]' },\n      { name: 'replayProtection', type: 'ReplayProtection' },\n    ],\n    SignedInvocation: [\n      { name: 'invocations', type: 'Invocations' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    Transaction: [\n      { name: 'to', type: 'address' },\n      { name: 'gasLimit', type: 'uint256' },\n      { name: 'data', type: 'bytes' },\n    ],\n    ReplayProtection: [\n      { name: 'nonce', type: 'uint' },\n      { name: 'queue', type: 'uint' },\n    ],\n    Delegation: [\n      { name: 'delegate', type: 'address' },\n      { name: 'authority', type: 'bytes32' },\n      { name: 'caveats', type: 'Caveat[]' },\n    ],\n    Caveat: [\n      { name: 'enforcer', type: 'address' },\n      { name: 'terms', type: 'bytes' },\n    ],\n    SignedDelegation: [\n      { name: 'delegation', type: 'Delegation' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    IntentionToRevoke: [\n      { name: 'delegationHash', type: 'bytes32' },\n    ],\n    SignedIntentionToRevoke: [\n      { name: 'signature', type: 'bytes' },\n      { name: 'intentionToRevoke', type: 'IntentionToRevoke' },\n    ]\n  }\n};\n\nmodule.exports = typedMessage;\n\n"],"sourceRoot":""}