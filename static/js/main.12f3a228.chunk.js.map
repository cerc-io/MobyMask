{"version":3,"sources":["createTypedMessage.js","logo.svg","Landing.jsx","createRegistry.js","ReviewAndRevokeInvitations.jsx","reportPhishers.js","PhishingReport.jsx","PhisherCheck.jsx","validateInvitation.js","createInvitation.js","chainList.js","LazyConnect.jsx","Members.jsx","QueryParamsRoute.jsx","App.jsx","index.jsx","types.js"],"names":["types","require","module","exports","yourContract","message","primaryType","CONTRACT_NAME","_chainId","chainId","deployTransaction","console","log","data","domain","name","version","verifyingContract","address","Landing","className","disabled","abi","createRegistry","provider","a","wallet","getSigner","attachRegistry","registry","signer","Registry","ethers","Contract","attach","_registry","deployed","generateUtil","util","props","invitations","invitation","setInvitations","ethersProvider","providers","Web3Provider","useState","setRegistry","useEffect","then","catch","error","length","map","_invitation","index","petName","onClick","signedDelegations","signedDelegation","delegationHash","createSignedDelegationHash","intendedRevocation","signedIntendedRevocation","signRevocation","key","revokeDelegation","newInvites","splice","localStorage","setItem","JSON","stringify","reportPhishers","phishers","Promise","all","phisher","_phisher","indexOf","slice","populateTransaction","claimIfPhisher","toLowerCase","desiredTx","invocation","transaction","to","gasLimit","authority","invocations","queue","Math","floor","random","signedInvocations","signInvocation","batch","replayProtection","nonce","invoke","setPhisher","setPhishers","loaded","setLoaded","rawStorage","getItem","storedPhishers","parse","err","type","placeholder","onChange","event","target","value","push","actionName","SubmitBatchButton","block","clear","setName","output","setOutput","e","checkPhisher","result","recoverDelegationSigner","validateInvitation","Error","authHash","intendedSender","Wallet","canGrant","d","delegationSigner","delegation","delegate","signDelegation","TypedDataUtils","chainIds","LazyConnect","opts","needsAccountConnected","setInjectedProvider","accounts","setAccounts","userChainId","setUserChainId","loading","setLoading","MetaMaskOnboarding","isMetaMaskInstalled","window","ethereum","chainName","chainList","Number","request","method","getAccounts","on","getUserChainId","needsToSwitchChain","needsToConnectAccount","requiresAction","createChecklist","hasWallet","startOnboarding","children","childrenWithProps","React","Children","child","isValidElement","cloneElement","checklistOpts","switchAccountsItem","switchNetworkItem","params","toString","reason","setError","Members","query","search","useLocation","useMemo","URLSearchParams","useQuery","setInvitation","errorMessage","setErrorMessage","history","useHistory","rawLoaded","document","cookie","parsedInvitation","get","checkInvitations","loadedInvitations","inviteView","addInvitation","tier","prompt","newInvitation","createRandom","hexHash","hashStruct","caveats","enforcer","terms","newSignedDelegation","newInvite","privateKey","createInvitation","inviteLink","location","origin","encodeURIComponent","navigator","clipboard","writeText","alert","generateInviteView","PhishingReport","PhisherCheckButton","ReviewAndRevokeInvitations","PhisherCheck","codedName","isPhisher","QueryParamsRouter","exact","path","App","src","logo","alt","href","themes","dark","process","light","prevTheme","subgraphUri","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","getElementById","entries","caveat","EIP712Domain","Invocation","Invocations","SignedInvocation","Transaction","ReplayProtection","Delegation","Caveat","SignedDelegation"],"mappings":"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","file":"static/js/main.12f3a228.chunk.js","sourcesContent":["const { types } = require('./types');\n\nmodule.exports = function createTypedMessage (yourContract, message, primaryType, CONTRACT_NAME, _chainId) {\n  const chainId = yourContract?.deployTransaction?.chainId || _chainId;\n  console.log('creating message for contract', yourContract);\n  return { data: {\n    types,\n    primaryType,\n    domain: {\n      name: CONTRACT_NAME,\n      version: '1',\n      chainId,\n      verifyingContract: yourContract.address,\n    },\n    message,\n  }};\n}\n","export default __webpack_public_path__ + \"static/media/logo.06de1321.svg\";","import React from 'react';\nimport logo from './logo.svg';\n\nfunction Landing() {\n  return (\n    <div className='box'>\n      <p>\n        Get warned about phishers on the web:\n      </p>\n      <button className='installButton' disabled>Install the Web Extension (coming soon!)</button>\n    </div>\n  );\n}\n\nexport default Landing;\n","import { ethers } from \"ethers\";\nconst { abi } = require('./artifacts');\nconst { address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function createRegistry (provider) {\n  console.log('creating registry');\n  console.log('made provider')\n  const wallet = provider.getSigner();\n  console.log('made wallet, attaching registry', wallet);\n  const registry = await attachRegistry(wallet);\n  console.log('there it is', registry);\n  return registry;\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { chainId, address, name } = require('./config.json');\nimport createRegistry from './createRegistry';\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\n\nexport default function (props) {\n  const { provider, invitations, invitation, setInvitations } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return (<details className='box'>\n    <summary>Outstanding Invitations ({invitations.length})</summary>\n    { invitations.map((_invitation, index) => {\n      return (\n        <div key={index}>\n          <span>{ _invitation.petName }</span>\n          <button onClick={async () => {\n            const { signedDelegations } = _invitation.invitation;\n            const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n            const delegationHash = util.createSignedDelegationHash(signedDelegation);\n            const intendedRevocation = {\n              delegationHash,\n            }\n            const signedIntendedRevocation = util.signRevocation(intendedRevocation, invitation.key);\n\n            const block = await registry.revokeDelegation(signedDelegation, signedIntendedRevocation);\n\n            const newInvites = [...invitations];\n            newInvites.splice(index, 1);\n            localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n            setInvitations(newInvites);\n          }}>Revoke</button>\n        </div>\n      )\n    })}\n  </details>);\n\n}","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function reportPhishers (phishers, provider, invitation) {\n  const { key, signedDelegations } = invitation;\n  const util = generateUtil({\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  })\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(phishers.map(async (phisher) => {\n    const _phisher = phisher.indexOf('@') === '0' ? phisher.slice(1) : phisher;\n    const desiredTx = await registry.populateTransaction.claimIfPhisher(`TWT:${_phisher.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n      authority: signedDelegations,\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = util.signInvocation({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  }, key);\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportPhishers from './reportPhishers';\nimport LazyConnect from 'lazyconnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json');\nconst { chainId } = config;\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ phisher, setPhisher ] = useState(null);\n  const [ phishers, setPhishers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingPhishers');\n      let storedPhishers = JSON.parse(rawStorage) || [];\n      setPhishers(storedPhishers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  return (\n    <div className='box'>\n      <h3>Report a phishing attempt</h3>\n      <input type=\"text\" placeholder=\"@phisher_person\" onChange={(event) => {\n        setPhisher(event.target.value);\n      }}/>\n      \n      <button onClick={() => {\n        if (phisher) {\n          console.log(`appending ${phisher} to `, phishers);\n          phishers.push(phisher);\n          localStorage.setItem('pendingPhishers', JSON.stringify(phishers));\n          setPhisher('');\n        } \n      }}>Report twitter phisher</button>\n\n      <div className='phishers'>\n        { phishers && phishers.length > 0 ? \n        <div>\n          <p>Pending phishing reports:</p>\n          <ol>\n            {phishers.map((phisher, index) => {\n              return (<li key={index}>{phisher}</li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit reports directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton phishers={phishers} invitation={invitation} setPhishers={setPhishers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, phishers, invitation, setPhishers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  return (<div>\n    <button onClick={async () => {\n      console.log('submitting batch');\n      const block = await reportPhishers(phishers, ethersProvider, invitation);\n      console.log('batch submitted', block);\n      localStorage.clear();\n      setPhishers([]);\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import React, { useEffect, useState } from 'react';\n\nexport default function (props) {\n  const [name, setName] = useState('');\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Phisher Status</h3>\n      <input type=\"text\" onChange={(e) => setName(e.target.value)} />\n      <button onClick={() => {\n        props.checkPhisher(name)\n        .then((result) => {\n          setOutput(result);\n          setName('');\n        })\n        .catch(console.error);\n      }}>Check</button>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { generateUtil, recoverDelegationSigner } = require('eth-delegatable-utils');\nconst createTypedMessage = require('./createTypedMessage');\nconst sigUtil = require('@metamask/eth-sig-util');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\n\ntypes.domain.chainId = chainId;\ntypes.domain.verifyingContract = address;\n\n/*\ntype SignedDelegation = {\n  delegation: Delegation,\n  signature: string,\n}\n\ntype Delegation = {\n  delegate: string,\n  authority: string,\n  caveats: Caveat[],\n}\n\ntype Caveat = {\n  enforcer: string,\n  terms: string,\n}\n\ntype Invitation = {\n  signedDelegations: SignedDelegation[],\n  key: string,\n}\n*/\nconst ROOT_AUTHORITY = '0xDdb18b319BE3530560eECFF962032dFAD88212d4';\n\nexport function validateInvitation (invitation) {\n  if (!invitation) {\n    throw new Error('Invitation is required');\n  }\n  console.log('invitation', invitation);\n\n  const { signedDelegations, key } = invitation;\n  const wallet = new ethers.Wallet(key);\n\n  // Trying to follow the code from Delegatable.sol as closely as possible here\n  // To ensure readable correctness.\n  let intendedSender = ROOT_AUTHORITY;\n  let canGrant = intendedSender.toLowerCase();\n  let authHash;\n\n  for (let d = 0; d < signedDelegations.length; d++) {\n    console.log(`Evaluating delegation number ${d}`)\n    const signedDelegation = signedDelegations[d];\n    const delegationSigner = recoverDelegationSigner(signedDelegation, {\n      chainId,\n      verifyingContract: address,\n      name: CONTRACT_NAME,\n    }).toLowerCase();\n\n    if (d === 0) {\n      intendedSender = delegationSigner;\n      canGrant = intendedSender.toLowerCase();\n    }\n\n    const delegation = signedDelegation.delegation;\n    if (delegationSigner !== canGrant) {\n      throw new Error(`Delegation signer ${delegationSigner} does not match required signer ${canGrant}`);\n    }\n\n    const delegationHash = util.createSignedDelegationHash(signedDelegation);\n\n    // Skipping caveat evaluation for now\n\n    authHash = delegationHash;\n    console.log(`Delegation ${d} of id ${authHash} signed by ${canGrant} granted to ${delegation.delegate}`);\n    canGrant = delegation.delegate.toLowerCase();\n  }\n\n  return !!invitation;\n}\n","const { signDelegation } = require('eth-delegatable-utils');\nimport { ethers } from \"ethers\";\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst sigUtil = require('eth-sig-util');\nconst { TypedDataUtils } = sigUtil;\nconst types = require('./types');\n\nexport default function createInvitation (invitation) {\n  const { signedDelegations, key } = invitation;\n  const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n  const delegate = ethers.Wallet.createRandom();\n  console.log('types', types);\n  const delegationHash = TypedDataUtils.hashStruct('SignedDelegation', signedDelegation, types.types, true);\n  const hexHash = '0x' + delegationHash.toString('hex');\n\n  const delegation = {\n    delegate: delegate.address,\n    authority: hexHash,\n\n    // Revokable by default:\n    caveats: [{\n      enforcer: address,\n      terms: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    }]\n  }\n\n  const newSignedDelegation = signDelegation(delegation, key, {\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  });\n  const newInvite = {\n    signedDelegations: [...signedDelegations, newSignedDelegation],\n    key: delegate.privateKey,\n  }\n  console.log({ newInvite });\n  return newInvite;\n}\n","const chainIds = {\n  0: \"kardia\",\n  1: \"ethereum\",\n  3: \"ropsten test network\",\n  4: \"rinkeby test network\",\n  5: \"goerli test network\",\n  8: \"ubiq\",\n  10: \"optimism\",\n  19: \"songbird\",\n  20: \"elastos\",\n  25: \"cronos\",\n  30: \"rsk\",\n  40: \"telos\",\n  42: \"kovan test network\",\n  52: \"csc\",\n  55: \"zyx\",\n  56: \"binance\",\n  57: \"syscoin\",\n  60: \"gochain\",\n  61: \"ethclassic\",\n  66: \"okexchain\",\n  70: \"hoo\",\n  82: \"meter\",\n  88: \"tomochain\",\n  100: \"xdai\",\n  106: \"velas\",\n  108: \"thundercore\",\n  122: \"fuse\",\n  128: \"heco\",\n  137: \"polygon\",\n  200: \"xdaiarb\",\n  246: \"energyweb\",\n  250: \"fantom\",\n  269: \"hpb\",\n  288: \"boba\",\n  321: \"kucoin\",\n  336: \"shiden\",\n  361: \"theta\",\n  534: \"candle\",\n  592: \"astar\",\n  820: \"callisto\",\n  888: \"wanchain\",\n  1088: \"metis\",\n  1284: \"moonbeam\",\n  1285: \"moonriver\",\n  2020: \"ronin\",\n  2612: \"ezchain\",\n  4689: \"iotex\",\n  5050: \"xlc\",\n  5551: \"nahmii\",\n  8217: \"klaytn\",\n  10000: \"smartbch\",\n  32659: \"fusion\",\n  42161: \"arbitrum\",\n  42220: \"celo\",\n  42262: \"oasis\",\n  43114: \"avalanche\",\n  71394: \"godwoken\",\n  333999: \"polis\",\n  1313161554: \"aurora\",\n  1666600000: \"harmony\",\n  11297108109: \"palm\",\n  836542336838601: \"curio\",\n};\n\nexport default chainIds;\n","import React, { useEffect, useState } from \"react\";\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport chainList from './chainList';\n\nexport default function LazyConnect (props) {\n  const { actionName, chainId, opts = {} } = props;\n  const { needsAccountConnected = true } = opts;\n  const [provider, setInjectedProvider] = useState();\n  const [accounts, setAccounts] = useState([]);\n  const [error, setError] = useState(null);\n  const [userChainId, setUserChainId] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  if (!provider && MetaMaskOnboarding.isMetaMaskInstalled()) { \n    setInjectedProvider(window.ethereum);\n  }\n\n  const chainName = chainId ? chainList[Number(chainId)] : null;\n\n  // Get accounts;\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    getAccounts()\n    .then(setAccounts)\n    .catch(console.error);\n\n    async function getAccounts() {\n      const accounts = await provider.request({ method: 'eth_accounts' });\n      return accounts;\n    }\n\n    provider.on(\"accountsChanged\", setAccounts);\n  }, []);\n\n  // Get current selected network:\n  useEffect(() => {\n    if (!provider || userChainId) {\n      return;\n    }\n    getUserChainId()\n    .then(setUserChainId)\n    .catch(console.error);\n\n    async function getUserChainId() {\n      const chainId = await provider.request({ method: 'eth_chainId' });\n      return chainId;\n    }\n\n    provider.on('chainChanged', (_chainId) => {\n      setUserChainId(_chainId);\n    });\n  }, []);\n\n  const needsToSwitchChain = Number(userChainId) !== chainId;\n  const needsToConnectAccount = needsAccountConnected && accounts && accounts.length === 0;\n  const requiresAction = needsToSwitchChain || needsToConnectAccount;\n\n  if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\n    return (<div className=\"lazyConnect\">\n      { createChecklist({\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        provider,\n        needsToConnectAccount,\n        setLoading,\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n      <button onClick={() => {\n        const onboarding = new MetaMaskOnboarding();\n        onboarding.startOnboarding();\n        }}>Get MetaMask</button>\n    </div>);\n  }\n  \n  if (requiresAction) {\n    return <div className=\"lazyConnect\">\n      { createChecklist({\n        setLoading,\n        provider,\n        needsToConnectAccount,\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n    </div>\n  }\n\n  if (loading) {\n    return (<div className=\"lazyConnect\">Loading...</div>)\n  }\n\n  const { children } = props;\n\n  const childrenWithProps = React.Children.map(children, child => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { provider });\n    }\n    return child;\n  });  \n\n  return (<div className=\"lazyConnected\">{childrenWithProps}</div>)\n}\n\nfunction createChecklist (checklistOpts) {\n  const { chainId, userChainId, chainName, setAccounts, provider, setLoading,\n    needsToConnectAccount,\n    needsAccountConnected, actionName, hasWallet, accounts } = checklistOpts;\n  return (<div>\n    <p>You need a few things to {actionName}.</p>\n    <ol>\n      { hasWallet ?\n        <li>✅ Get a web3 compatible Wallet (like MetaMask)</li> :\n        <li>☐ Get a web3 compatible Wallet (like MetaMask)</li> }\n      { switchAccountsItem({ needsAccountConnected, needsToConnectAccount, setAccounts, provider, setLoading, accounts, hasWallet }) }\n      { switchNetworkItem({ chainId, userChainId, chainName, setAccounts, provider, setLoading, hasWallet })} \n    </ol>\n   </div>);\n}\n\nfunction switchAccountsItem (opts) {\n  const { needsAccountConnected, needsToConnectAccount, setAccounts, provider, setLoading, hasWallet } = opts;\n\n  if (!needsToConnectAccount) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>☐ Connect an account</li>;\n  }\n\n  return <li>☐ <button onClick={async () => {\n      const accounts = await provider.request({ method: 'wallet_requestAccounts' });\n      setAccounts(accounts);\n    }}>Connect an account</button>\n  </li>\n}\n\nfunction switchNetworkItem (opts) {\n  const { chainId, userChainId, chainName, provider, setLoading, hasWallet } = opts;\n  const needsToSwitchChain =  !!chainId && (Number(userChainId) !== chainId);\n  console.log('switchNetworkItem', opts);\n\n  if (!needsToSwitchChain) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>Switch to the {chainName} network</li>;\n  }\n\n  return <li>\n    <button onClick={async () => {\n      provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x' + chainId.toString(16) }],\n      })\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((reason) => {\n        setLoading(false);\n        setError(reason);\n      });\n      setLoading(true);\n    }}>Switch to the { chainName } network</button>\n  </li>\n}\n","import React, { useEffect, useState } from 'react';\nimport Landing from \"./Landing\"\nimport ReviewAndRevokeInvitations from './ReviewAndRevokeInvitations';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nimport { ethers } from \"ethers\";\nconst types = require('./types')\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nimport createRegistry from './createRegistry';\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\n\nimport PhishingReport from './PhishingReport';\nimport PhisherCheck from './PhisherCheck';\nimport { validateInvitation } from './validateInvitation';\nimport createInvitation from './createInvitation';\nimport LazyConnect from './LazyConnect';\n\nexport default function Members (props) {\n  const query = useQuery();\n  const [ invitation, setInvitation ] = useState(null);\n  const [ errorMessage, setErrorMessage ] = useState(null);\n  const [ loading, setLoading ] = useState(false);\n  const [ invitations, setInvitations ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false); // For loading invitations\n  const history = useHistory();\n\n  \n  // Load user's own invitation from disk or query string:\n  useEffect(() => {\n    async function checkInvitations () {\n      if (!loading) {\n        setLoading(true);\n\n        if (!invitation) {\n          try {\n            let parsedInvitation;\n            let rawLoaded = document.cookie;\n            if (rawLoaded) {\n              parsedInvitation = JSON.parse(rawLoaded);\n            }\n            if (!parsedInvitation || parsedInvitation === 'null') {\n              parsedInvitation = JSON.parse(query.get(\"invitation\"));\n              validateInvitation(parsedInvitation);\n              document.cookie = query.get(\"invitation\");\n            }\n\n            history.push('/members');\n            validateInvitation(parsedInvitation);\n            if (parsedInvitation) {\n              setInvitation(parsedInvitation);\n            }\n            setLoading(false);\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(err.message);\n          }\n        }\n      }\n    }\n\n    checkInvitations().catch(console.error);\n  });\n\n  // Load user's outstanding invitations from disk:\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('outstandingInvitations');\n      let loadedInvitations = JSON.parse(rawStorage) || [];\n      setInvitations(loadedInvitations);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  if (!invitation) {\n    if (errorMessage) {\n      return (<div>\n        <h3>Invalid invitation.</h3>\n        <p>Sorry, we were unable to process your invitation.</p>\n        <p className='error'>{ errorMessage } </p>\n      </div>)   \n    } else {\n      return (<div>\n        <h3>Processing invitation...</h3> \n      </div>)\n    }\n  }\n\n  const inviteView = generateInviteView(invitation, (invitation) => {\n    if (invitation) {\n      console.log(`appending ${invitation.petName} to outstanding invites`);\n      const newInvites = [...invitations, invitation];\n      localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n      setInvitations(newInvites);\n    } \n  });\n\n  return (\n    <div>\n      <div className=\"controlBoard\">\n\n        <div className=\"phisherBox\">\n          <div className=\"box\">\n            <PhishingReport invitation={invitation}/>\n          </div>\n\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is a phisher\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <PhisherCheckButton/>\n            </LazyConnect>\n          </div>\n        </div>\n\n        <div className=\"inviteBox\">\n          { inviteView }\n\n          <LazyConnect actionName=\"revoke outstanding invitations\" chainId={chainId}>\n            <ReviewAndRevokeInvitations\n              invitations={invitations}\n              invitation={invitation}\n              setInvitations={setInvitations}/>\n          </LazyConnect>\n\n          <div className='box'>\n            <h3>Review your invites and their reports. (Coming soon!)</h3>\n          </div>\n\n        </div>\n\n        <div className='box'>\n          <h3>Endorse a benevolent entity (coming soon)</h3>\n        </div>\n\n        <Landing />\n      </div>\n\n    </div>\n  )\n}\n\nfunction generateInviteView(invitation, addInvitation) {\n  const tier = invitation.signedDelegations.length;\n\n  if (tier < 4) {\n    return (\n      <div className='box'>\n        <p>You are a tier {invitation.signedDelegations.length} invitee. This means you can invite up to {4-tier} additional tiers of members.</p>\n        <p>Invite people who you think will respect the system, and only report definite impostors and frauds, and only endorse people who are neither.</p>\n        <p>If you invite an abusive person and don't revoke their activity quickly, you may have your membership revoked.</p>\n        <button onClick={() => {\n          const petName = prompt('Who is this invitation for (for your personal use only, so you can view their reports and revoke the invitation)?');\n          const newInvitation = createInvitation(invitation);\n          const inviteLink = window.location.origin + '/#/members?invitation=' + encodeURIComponent(JSON.stringify(newInvitation));\n          navigator.clipboard.writeText(inviteLink).then(function() {\n            alert('Copied to clipboard. Paste it somewhere only the intended recipients can see or you can lose your membership.');\n            if (addInvitation) {\n              addInvitation({\n                petName,\n                invitation: newInvitation,\n              });\n            }\n          });\n        }}>Copy new invite link</button>\n      </div> \n    );\n  } else if (tier === 4) {\n    <div>\n      <p>You are a tier 4 member. That means you can't currently invite new members through this interface, but if this site becomes popular, we can add support for this later.</p>\n    </div> \n  }\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nfunction PhisherCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider)\n    .then((_registry) => {\n      console.log('registry got, setting');\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  console.log('we got a registry, rendering phisher check');\n  return <PhisherCheck checkPhisher={async (name) => {\n    console.log('checking if phisher', name);\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isPhisher(codedName);\n      console.log('result is ', result);\n      if (result) {\n        return `${name} is an accused phisher.`;\n      } else {\n        return `${name} is not a registered phisher.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\nimport Members from './Members';\n\n// Routes\nimport Landing from './Landing';\n\nexport default function QueryParamsRouter(props) {\n  const { provider } = props;\n  let query = useQuery();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Landing/>\n      </Route>\n      <Route path=\"/members/\">\n        <Members/>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import logo from './logo.svg';\nimport QueryParamsRoute from './QueryParamsRoute';\nimport \"antd/dist/antd.css\";\nimport { HashRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <h1>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          MobyMask</h1>\n        <p>\n          An alliance of good-hearted phish, aiming to eliminate phishers. \n        </p>\n      </header>\n\n      <Router>\n        <QueryParamsRoute/>\n      </Router>\n\n      <div className='footer'>\n        <p>Reporters are added on an invite-only basis.</p>\n        <p>Learn more about how our invite system works at <a href=\"https://github.com/danfinlay/delegatable-eth\">delegatable-eth</a>.</p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","const typedMessage = {\n  primaryType: 'Delegation',\n  domain: {\n    name: 'MobyMask',\n    version: '1',\n  },\n\n  entries: {\n    delegate: \"address\",\n    caveat: \"Caveat\",\n    authority: \"SignedDelegation\",\n  },\n\n  types: {\n    EIP712Domain: [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ],\n    Invocation: [\n      { name: 'transaction', type: 'Transaction' },\n      { name: 'authority', type: 'SignedDelegation[]' },\n    ],\n    Invocations: [\n      { name: 'batch', type: 'Invocation[]' },\n      { name: 'replayProtection', type: 'ReplayProtection' },\n    ],\n    SignedInvocation: [\n      { name: 'invocations', type: 'Invocations' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    Transaction: [\n      { name: 'to', type: 'address' },\n      { name: 'gasLimit', type: 'uint256' },\n      { name: 'data', type: 'bytes' },\n    ],\n    ReplayProtection: [\n      { name: 'nonce', type: 'uint' },\n      { name: 'queue', type: 'uint' },\n    ],\n    Delegation: [\n      { name: 'delegate', type: 'address' },\n      { name: 'authority', type: 'bytes32' },\n      { name: 'caveats', type: 'Caveat[]' },\n    ],\n    Caveat: [\n      { name: 'enforcer', type: 'address' },\n      { name: 'terms', type: 'bytes' },\n    ],\n    SignedDelegation: [\n      { name: 'delegation', type: 'Delegation' },\n      { name: 'signature', type: 'bytes' },\n    ],\n  }\n};\n\nmodule.exports = typedMessage;\n"],"sourceRoot":""}