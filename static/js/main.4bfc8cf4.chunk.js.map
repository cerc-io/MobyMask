{"version":3,"sources":["../../../../delegate-eth/packages/js-eth-delegatable-utils/types.js","types.js","../../../../delegate-eth/packages/js-eth-delegatable-utils/createTypedMessage.js","logo.svg","chainList.js","LazyConnect.jsx","createRegistry.js","TextInput.jsx","PhisherCheck.jsx","InstallExtension.jsx","copyInvitationLink.js","ReviewAndRevokeInvitations.jsx","contractInfo.js","reportPhishers.js","PhishingReport.jsx","reportMembers.js","MemberReport.jsx","MemberCheck.jsx","createInvitation.js","Members.jsx","QueryParamsRoute.jsx","App.jsx","index.jsx","../../../../delegate-eth/packages/js-eth-delegatable-utils/index.js"],"names":["module","exports","primaryType","domain","name","version","entries","delegate","caveat","authority","types","EIP712Domain","type","Invocation","Invocations","SignedInvocation","Transaction","ReplayProtection","Delegation","Caveat","SignedDelegation","IntentionToRevoke","SignedIntentionToRevoke","require","verifyingContract","message","contractName","chainId","console","log","arguments","data","chainIds","LazyConnect","props","actionName","opts","needsAccountConnected","useState","provider","setInjectedProvider","accounts","setAccounts","userChainId","setUserChainId","loading","setLoading","MetaMaskOnboarding","isMetaMaskInstalled","window","ethereum","chainName","chainList","Number","useEffect","getAccounts","then","catch","error","on","removeListener","a","request","method","_accounts","length","getUserChainId","needsToSwitchChain","needsToConnectAccount","requiresAction","className","createChecklist","hasWallet","onClick","startOnboarding","children","childrenWithProps","React","Children","map","child","isValidElement","cloneElement","checklistOpts","switchAccountsItem","switchNetworkItem","params","toString","reason","setError","abi","address","createRegistry","readOnly","wallet","getSigner","toUse","attachRegistry","registry","signer","Registry","ethers","Contract","attach","_registry","deployed","TextInput","onComplete","placeholder","buttonLabel","value","setValue","onKeyPress","event","key","onChange","target","PhisherCheck","output","setOutput","checkPhisher","result","PhisherCheckButton","ethersProvider","providers","Web3Provider","setRegistry","codedName","toLowerCase","isPhisher","InstallExtension","disabled","copyInvitationLink","invitation","petName","Promise","resolve","reject","inviteLink","location","origin","encodeURIComponent","JSON","stringify","navigator","clipboard","writeText","alert","err","generateUtil","util","invitations","setInvitations","_invitation","index","signedDelegations","signedDelegation","delegationHash","createSignedDelegationHash","intendedRevocation","signedIntendedRevocation","signRevocation","revokeDelegation","newInvites","splice","localStorage","setItem","createMembership","reportPhishers","phishers","membership","contractInfo","all","phisher","_phisher","indexOf","slice","populateTransaction","claimIfPhisher","desiredTx","invocation","transaction","to","gasLimit","invocations","queue","Math","floor","random","signedInvocations","signInvocations","batch","replayProtection","nonce","invoke","setPhisher","setPhishers","loaded","setLoaded","rawStorage","getItem","storedPhishers","parse","includes","newPhishers","push","filter","p","SubmitBatchButton","clear","reportMembers","members","member","_member","claimIfMember","setMembers","storedMembers","newMembers","MemberCheck","checkMember","MemberCheckButton","isMember","signDelegation","CONTRACT_NAME","TypedDataUtils","validateInvitation","Members","query","search","useLocation","useMemo","URLSearchParams","useQuery","loadingFromDisk","setLoadingFromDisk","errorMessage","setErrorMessage","setInvitation","history","useHistory","rawLoaded","document","cookie","parsedInvitation","get","checkInvitations","loadedInvitations","inviteView","addInvitation","tier","prompt","newInvitation","Wallet","createRandom","hexHash","hashStruct","delegation","caveats","enforcer","terms","newSignedDelegation","newInvite","privateKey","createInvitation","generateInviteView","PhishingReport","MemberReport","ReviewAndRevokeInvitations","QueryParamsRouter","exact","path","App","src","logo","alt","href","themes","dark","process","light","prevTheme","subgraphUri","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","getElementById","__read","this","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","__spreadArray","from","pack","l","Array","prototype","concat","createTypedMessage","sigUtil","secp","keccak_256","Error","_a","recipientAddress","lastSignedDelegation","createDelegatedInvitation","createFirstDelegatedInvitation","createMembershipFromDelegation","signedDelegations_1","firstInvitation","forEach","signRevocationMessage","lastDelegation","intentionToRevoke","recoverSigner","recoverDelegationSigner","signInvocation","recoverInvocationSigner","signedInvocation","revocation","recoverRevocationSignature","signedRevocation","typedMessage","recoverTypedSignature","signature","signTypedData","fromHexString","substring","intendedSender","canGrant","d","delegationSigner","generateAccount","toHexString","delegatorKey","hexString","matched","match","mapped","byte","parseInt","Uint8Array","buffer","x","padStart","join","privKey","utils","randomPrivateKey","pubKey","getPublicKey","pubKeyHash","subarray"],"mappings":"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","file":"static/js/main.4bfc8cf4.chunk.js","sourcesContent":["const typedMessage = {\n  primaryType: 'Delegation',\n  domain: {\n    name: 'PhisherRegistery',\n    version: '1',\n  },\n\n  entries: {\n    delegate: \"address\",\n    caveat: \"Caveat\",\n    authority: \"SignedDelegation\",\n  },\n\n  types: {\n    EIP712Domain: [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ],\n    Invocation: [\n      { name: 'transaction', type: 'Transaction' },\n      { name: 'authority', type: 'SignedDelegation[]' },\n    ],\n    Invocations: [\n      { name: 'batch', type: 'Invocation[]' },\n      { name: 'replayProtection', type: 'ReplayProtection' },\n    ],\n    SignedInvocation: [\n      { name: 'invocations', type: 'Invocations' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    Transaction: [\n      { name: 'to', type: 'address' },\n      { name: 'gasLimit', type: 'uint256' },\n      { name: 'data', type: 'bytes' },\n    ],\n    ReplayProtection: [\n      { name: 'nonce', type: 'uint' },\n      { name: 'queue', type: 'uint' },\n    ],\n    Delegation: [\n      { name: 'delegate', type: 'address' },\n      { name: 'authority', type: 'bytes32' },\n      { name: 'caveats', type: 'Caveat[]' },\n    ],\n    Caveat: [\n      { name: 'enforcer', type: 'address' },\n      { name: 'terms', type: 'bytes' },\n    ],\n    SignedDelegation: [\n      { name: 'delegation', type: 'Delegation' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    IntentionToRevoke: [\n      { name: 'delegationHash', type: 'bytes32' },\n    ],\n    SignedIntentionToRevoke: [\n      { name: 'signature', type: 'bytes' },\n      { name: 'intentionToRevoke', type: 'IntentionToRevoke' },\n    ]\n  }\n};\n\nmodule.exports = typedMessage;\n\n","const typedMessage = {\n  primaryType: 'Delegation',\n  domain: {\n    name: 'MobyMask',\n    version: '1',\n  },\n\n  entries: {\n    delegate: \"address\",\n    caveat: \"Caveat\",\n    authority: \"SignedDelegation\",\n  },\n\n  types: {\n    EIP712Domain: [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ],\n    Invocation: [\n      { name: 'transaction', type: 'Transaction' },\n      { name: 'authority', type: 'SignedDelegation[]' },\n    ],\n    Invocations: [\n      { name: 'batch', type: 'Invocation[]' },\n      { name: 'replayProtection', type: 'ReplayProtection' },\n    ],\n    SignedInvocation: [\n      { name: 'invocations', type: 'Invocations' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    Transaction: [\n      { name: 'to', type: 'address' },\n      { name: 'gasLimit', type: 'uint256' },\n      { name: 'data', type: 'bytes' },\n    ],\n    ReplayProtection: [\n      { name: 'nonce', type: 'uint' },\n      { name: 'queue', type: 'uint' },\n    ],\n    Delegation: [\n      { name: 'delegate', type: 'address' },\n      { name: 'authority', type: 'bytes32' },\n      { name: 'caveats', type: 'Caveat[]' },\n    ],\n    Caveat: [\n      { name: 'enforcer', type: 'address' },\n      { name: 'terms', type: 'bytes' },\n    ],\n    SignedDelegation: [\n      { name: 'delegation', type: 'Delegation' },\n      { name: 'signature', type: 'bytes' },\n    ],\n  }\n};\n\nmodule.exports = typedMessage;\n","const { types } = require('./types');\n\nmodule.exports = function createTypedMessage (verifyingContract, message, primaryType, contractName, chainId) {\n  console.log('creating typed message with', [...arguments])\n  return { data: {\n    types,\n    primaryType,\n    domain: {\n      name: contractName,\n      version: '1',\n      chainId,\n      verifyingContract,\n    },\n    message,\n  }};\n}\n\n","export default __webpack_public_path__ + \"static/media/logo.06de1321.svg\";","const chainIds = {\n  0: \"kardia\",\n  1: \"ethereum\",\n  3: \"ropsten test\",\n  4: \"rinkeby test\",\n  5: \"goerli test\",\n  8: \"ubiq\",\n  10: \"optimism\",\n  19: \"songbird\",\n  20: \"elastos\",\n  25: \"cronos\",\n  30: \"rsk\",\n  40: \"telos\",\n  42: \"kovan test\",\n  52: \"csc\",\n  55: \"zyx\",\n  56: \"binance\",\n  57: \"syscoin\",\n  60: \"gochain\",\n  61: \"ethclassic\",\n  66: \"okexchain\",\n  70: \"hoo\",\n  82: \"meter\",\n  88: \"tomochain\",\n  100: \"xdai\",\n  106: \"velas\",\n  108: \"thundercore\",\n  122: \"fuse\",\n  128: \"heco\",\n  137: \"polygon\",\n  200: \"xdaiarb\",\n  246: \"energyweb\",\n  250: \"fantom\",\n  269: \"hpb\",\n  288: \"boba\",\n  321: \"kucoin\",\n  336: \"shiden\",\n  361: \"theta\",\n  534: \"candle\",\n  592: \"astar\",\n  820: \"callisto\",\n  888: \"wanchain\",\n  1088: \"metis\",\n  1284: \"moonbeam\",\n  1285: \"moonriver\",\n  2020: \"ronin\",\n  2612: \"ezchain\",\n  4689: \"iotex\",\n  5050: \"xlc\",\n  5551: \"nahmii\",\n  8217: \"klaytn\",\n  10000: \"smartbch\",\n  32659: \"fusion\",\n  42161: \"arbitrum\",\n  42220: \"celo\",\n  42262: \"oasis\",\n  43114: \"avalanche\",\n  71394: \"godwoken\",\n  333999: \"polis\",\n  1313161554: \"aurora\",\n  1666600000: \"harmony\",\n  11297108109: \"palm\",\n  836542336838601: \"curio\",\n};\n\nexport default chainIds;\n","import React, { useEffect, useState } from \"react\";\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport chainList from './chainList';\n\nexport default function LazyConnect (props) {\n  const { actionName, chainId } = props;\n  let { opts = {} } = props;\n  const { needsAccountConnected = true } = opts;\n  const [provider, setInjectedProvider] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [userChainId, setUserChainId] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  if (!provider && MetaMaskOnboarding.isMetaMaskInstalled()) { \n    setInjectedProvider(window.ethereum);\n  }\n\n  const chainName = chainId ? chainList[Number(chainId)] : null;\n\n  // Get accounts;\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    getAccounts()\n    .then(setAccounts)\n    .catch(console.error);\n\n    async function getAccounts() {\n      try {\n        const _accounts = await provider.request({ method: 'eth_accounts' });\n        if (_accounts.length > 0) {\n          setAccounts(_accounts);\n        }\n      } catch (err) {\n        console.log('Getting accounts failed!', err);\n      }\n    }\n\n    provider.on(\"accountsChanged\", setAccounts);\n\n    return () => {\n      provider.removeListener('accountsChanged', setAccounts);\n    }\n  }, []);\n\n  // Get current selected network:\n  useEffect(() => {\n    if (!provider || userChainId) {\n      return;\n    }\n    getUserChainId()\n    .then(setUserChainId)\n    .catch(console.error);\n\n    async function getUserChainId() {\n      const chainId = await provider.request({ method: 'eth_chainId' });\n      return chainId;\n    }\n\n    provider.on('chainChanged', setUserChainId);\n\n    return () => {\n      provider.removeListener('chainChanged', setUserChainId);\n    }\n  }, []);\n\n  const needsToSwitchChain = Number(userChainId) !== chainId;\n  const needsToConnectAccount = needsAccountConnected && (!accounts || accounts.length === 0);\n  const requiresAction = needsToSwitchChain || needsToConnectAccount;\n\n  if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\n    return (<div className=\"lazyConnect\">\n      { createChecklist({\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        provider,\n        needsToConnectAccount,\n        setLoading,\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n      <button onClick={() => {\n        const onboarding = new MetaMaskOnboarding();\n        onboarding.startOnboarding();\n        }}>Get MetaMask</button>\n    </div>);\n  }\n  \n  if (requiresAction) {\n    return <div className=\"lazyConnect\">\n      { createChecklist({\n        setLoading,\n        provider,\n        needsToConnectAccount,\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n    </div>\n  }\n\n  if (loading) {\n    return (<div className=\"lazyConnect\">Loading...</div>)\n  }\n\n  const { children } = props;\n\n  const childrenWithProps = React.Children.map(children, child => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { provider });\n    }\n    return child;\n  });  \n\n  return (<div className=\"lazyConnected\">{childrenWithProps}</div>)\n}\n\nfunction createChecklist (checklistOpts) {\n  const { chainId, userChainId, chainName, setAccounts, provider, setLoading,\n    needsToConnectAccount,\n    needsAccountConnected, actionName, hasWallet, accounts } = checklistOpts;\n  return (<div>\n    <p>You need a few things to {actionName}.</p>\n    <ol>\n      { hasWallet ?\n        <li>✅ Get a web3 compatible Wallet (like MetaMask)</li> :\n        <li>☐ Get a web3 compatible Wallet (like MetaMask)</li> }\n      { switchAccountsItem({ needsAccountConnected, needsToConnectAccount, setAccounts, provider, setLoading, accounts, hasWallet }) }\n      { switchNetworkItem({ chainId, userChainId, chainName, setAccounts, provider, setLoading, hasWallet })} \n    </ol>\n   </div>);\n}\n\nfunction switchAccountsItem (opts) {\n  const { needsToConnectAccount, setAccounts, accounts, provider, hasWallet } = opts;\n\n  if (!needsToConnectAccount) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>☐ Connect an account</li>;\n  }\n\n  if (typeof accounts !== 'undefined' && accounts.length > 0) {\n    return null;\n  }\n\n  return <li>☐ <button onClick={async () => {\n      const _accounts = await provider.request({ method: 'eth_requestAccounts' });\n      setAccounts(_accounts);\n    }}>Connect an account</button>\n  </li>\n}\n\nfunction switchNetworkItem (opts) {\n  const { chainId, userChainId, chainName, provider, setLoading, hasWallet } = opts;\n  const needsToSwitchChain =  !!chainId && (Number(userChainId) !== chainId);\n\n  if (!needsToSwitchChain) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>Switch to the {chainName} network</li>;\n  }\n\n  return <li>\n    <button onClick={async () => {\n      provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x' + chainId.toString(16) }],\n      })\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((reason) => {\n        setLoading(false);\n        setError(reason);\n      });\n      setLoading(true);\n    }}>Switch to the { chainName } network</button>\n  </li>\n}\n","import { ethers } from \"ethers\";\nconst { abi } = require('./artifacts');\nconst { address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function createRegistry (provider, readOnly = false) {\n  const wallet = !readOnly && provider.getSigner();\n  const toUse = readOnly ? provider : wallet;\n  const registry = await attachRegistry(toUse);\n  return registry;\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\n\nexport default function TextInput (props) {\n  const { onComplete, placeholder, buttonLabel } = props;\n  const [ value, setValue ] = useState('');\n      \n  return <div>\n    <input type=\"text\" value={value} placeholder={placeholder} onKeyPress={(event) => {\n      if (event.key === 'Enter') {\n        onComplete(value);\n        setValue('');\n      }\n    }} onChange={(event) => {\n      setValue(event.target.value);\n    }}/>\n    \n    <button onClick={() => { onComplete(value) }}>{ buttonLabel }</button>\n  </div>\n} \n","import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport createRegistry from './createRegistry';\nimport TextInput from './TextInput';\n\nexport default function PhisherCheck (props) {\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Phisher Status</h3>\n      <TextInput placeholder=\"Enter a Twitter name\" buttonLabel=\"Check\"\n      onComplete={(name) => {\n        props.checkPhisher(name)\n        .then((result) => {\n          setOutput(result);\n        })\n        .catch(console.error);\n      }}/>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}\n\nexport function PhisherCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider, true)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return <PhisherCheck checkPhisher={async (name) => {\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isPhisher(codedName);\n      if (result) {\n        return `${name} is an accused phisher.`;\n      } else {\n        return `${name} is not a registered phisher.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}","import React from 'react';\n\nfunction InstallExtension() {\n  return (\n    <div className='box'>\n      <p>\n        Get warned about phishers on the web:\n      </p>\n      <button className='installButton' disabled>Install the Web Extension (coming soon!)</button>\n    </div>\n  );\n}\n\nexport default InstallExtension;\n","export default function copyInvitationLink (invitation, petName) {\n  return new Promise((resolve, reject) => {\n    const inviteLink = window.location.origin + '/#/members?invitation=' + encodeURIComponent(JSON.stringify(invitation));\n    navigator.clipboard.writeText(inviteLink).then(function() {\n      alert('Your invite link has been copied to your clipboard. Paste it somewhere only the intended recipients can see or you can lose your membership: \\n\\n' + inviteLink);\n      resolve();\n    })\n    .catch(function(err) {\n      alert('Had trouble writing to your clipboard. Here is your invite link (it may be copied). Paste it somewhere only the intended recipients can see or you can lose your membership: \\n\\n' + inviteLink);\n    });\n  });\n}\n","import { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { chainId, address, name } = require('./config.json');\nimport createRegistry from './createRegistry';\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\nimport copyInvitationLink from './copyInvitationLink';\n\nexport default function (props) {\n  const { provider, invitations, invitation, setInvitations } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return (<details className='box'>\n    <summary>Outstanding Invitations ({invitations.length})</summary>\n    { invitations.map((_invitation, index) => {\n      return (\n        <div key={index}>\n          <span>{ _invitation.petName }</span>\n          <button onClick={() => {\n            copyInvitationLink(_invitation.invitation, _invitation.petName)\n            .catch((err) => alert(err.message));\n          }}>Re-Copy</button>\n          <button onClick={async () => {\n            const { signedDelegations } = _invitation.invitation;\n            const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n            const delegationHash = util.createSignedDelegationHash(signedDelegation);\n            const intendedRevocation = {\n              delegationHash,\n            }\n            const signedIntendedRevocation = util.signRevocation(intendedRevocation, invitation.key);\n\n            const block = await registry.revokeDelegation(signedDelegation, signedIntendedRevocation);\n\n            const newInvites = [...invitations];\n            newInvites.splice(index, 1);\n            localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n            setInvitations(newInvites);\n          }}>Revoke</button>\n        </div>\n      )\n    })}\n  </details>);\n\n}","const { chainId, address, name } = require('./config.json');\n\nexport default {\n  chainId,\n  name,\n  verifyingContract: address,\n}\n","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { createMembership } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nimport contractInfo from \"./contractInfo\";\nconst CONTRACT_NAME = name;\n\nexport default async function reportPhishers (phishers, provider, invitation) {\n  const { key, signedDelegations } = invitation;\n  const membership = createMembership({\n    contractInfo,\n    invitation,\n  });\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(phishers.map(async (phisher) => {\n    const _phisher = phisher.indexOf('@') === '0' ? phisher.slice(1) : phisher;\n    const desiredTx = await registry.populateTransaction.claimIfPhisher(`TWT:${_phisher.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n      authority: signedDelegations,\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = membership.signInvocations({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  });\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportPhishers from './reportPhishers';\nimport LazyConnect from './LazyConnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json')\nconst { chainId } = config;\nimport TextInput from './TextInput';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ phisher, setPhisher ] = useState();\n  const [ phishers, setPhishers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingPhishers');\n      let storedPhishers = JSON.parse(rawStorage) || [];\n      setPhishers(storedPhishers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  return (\n    <div className='box'>\n      <h3>Report a phishing attempt</h3>\n      <TextInput placeholder=\"@phisher_person\" buttonLabel=\"Report\"\n        onComplete={(phisher) => {\n        const _phisher = phisher.indexOf('@') === 0 ? phisher.slice(1) : phisher;\n        if (phishers.includes(_phisher)) return;\n        const newPhishers = [...phishers, _phisher];\n        console.log('new phishers is ', newPhishers);\n        localStorage.setItem('pendingPhishers', JSON.stringify(newPhishers));\n        setPhishers(newPhishers);\n      }}/>\n\n      <button onClick={() => {\n        if (phisher) {\n          phishers.push(phisher);\n          localStorage.setItem('pendingPhishers', JSON.stringify(phishers));\n          setPhisher('');\n        } \n      }}>Report twitter phisher</button>\n\n      <div className='phishers'>\n        { phishers && phishers.length > 0 ? \n        <div>\n          <p>Pending phishing reports:</p>\n          <ol>\n            {phishers.map((phisher, index) => {\n              return (<li key={index}>{phisher} <button onClick={() => {\n                const newPhishers = phishers.filter((p) => p !== phisher);\n                localStorage.setItem('pendingPhishers', JSON.stringify(newPhishers));\n                setPhishers(newPhishers);\n              }}>Remove</button></li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit reports directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton phishers={phishers} invitation={invitation} setPhishers={setPhishers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, phishers, invitation, setPhishers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  console.log('trying to submit batch with', ethersProvider);\n  return (<div>\n    <button onClick={async () => {\n      try {\n        const block = await reportPhishers(phishers, ethersProvider, invitation);\n        localStorage.clear();\n        setPhishers([]);\n      } catch (err) {\n        alert(`Error: ${err}`);\n      }\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import { ethers } from \"ethers\";\nimport contractInfo from \"./contractInfo\";\nconst types = require('./types')\nconst { createMembership } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function reportMembers (members, provider, invitation) {\n  const membership = createMembership({\n    contractInfo,\n    invitation,\n  });\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(members.map(async (member) => {\n    const _member = member.indexOf('@') === '0' ? member.slice(1) : member;\n    const desiredTx = await registry.populateTransaction.claimIfMember(`TWT:${_member.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = membership.signInvocations({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  });\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportMembers from './reportMembers';\nimport LazyConnect from './LazyConnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json')\nconst { chainId } = config;\nimport TextInput from './TextInput';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ members, setMembers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(function loadMembersFromDisk () {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingMembers');\n      let storedMembers = JSON.parse(rawStorage) || [];\n      setMembers(storedMembers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  return (\n    <div className='box'>\n      <h3>Endorse a member</h3>\n      <TextInput placeholder=\"@member_person\" buttonLabel=\"Endorse\"\n        onComplete={(member) => {\n          const _member = member.indexOf('@') === 0 ? member.slice(1) : member;\n          if (members.includes(_member)) return;\n          const newMembers = [...members, _member];\n          setMembers(newMembers);\n          localStorage.setItem('pendingMembers', JSON.stringify(newMembers));\n      }}/>\n\n      <div className='members'>\n        { members && members.length > 0 ? \n        <div>\n          <p>Pending member nominations:</p>\n          <ol>\n            {members.map((member, index) => {\n              return (<li key={index}>{member} <button onClick={() => {\n                const newMembers = members.filter((p) => p !== member);\n                localStorage.setItem('pendingMembers', JSON.stringify(newMembers));\n                setMembers(newMembers);\n              }}>Remove</button></li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit endorsements directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton members={members} invitation={invitation} setMembers={setMembers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, members, invitation, setMembers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  return (<div>\n    <button onClick={async () => {\n      try {\n        const block = await reportMembers(members, ethersProvider, invitation);\n        localStorage.clear();\n        setMembers([]);\n     } catch (err) {\n        console.error(err);\n        alert(`Error: ${err}`);\n      }\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport createRegistry from './createRegistry';\nimport TextInput from './TextInput';\n\nexport default function MemberCheck (props) {\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Member Status</h3>\n      <TextInput placeholder=\"Enter a Twitter name\" buttonLabel=\"Check\"\n      onComplete={(name) => {\n        props.checkMember(name)\n        .then((result) => {\n          setOutput(result);\n        })\n        .catch(console.error);\n      }}/>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}\n\nexport function MemberCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider, true)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return <MemberCheck checkMember={async (name) => {\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isMember(codedName);\n      if (result) {\n        return `${name} is an endorsed moby.`;\n      } else {\n        return `${name} has not been endorsed.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}","const { signDelegation } = require('eth-delegatable-utils');\nimport { ethers } from \"ethers\";\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst sigUtil = require('eth-sig-util');\nconst { TypedDataUtils } = sigUtil;\nconst types = require('./types');\n\nexport default function createInvitation (invitation) {\n  const { signedDelegations, key } = invitation;\n  const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n  const delegate = ethers.Wallet.createRandom();\n  console.log('types', types);\n  const delegationHash = TypedDataUtils.hashStruct('SignedDelegation', signedDelegation, types.types, true);\n  const hexHash = '0x' + delegationHash.toString('hex');\n\n  const delegation = {\n    delegate: delegate.address,\n    authority: hexHash,\n\n    // Revokable by default:\n    caveats: [{\n      enforcer: address,\n      terms: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    }]\n  }\n\n  const newSignedDelegation = signDelegation(delegation, key, {\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  });\n  const newInvite = {\n    signedDelegations: [...signedDelegations, newSignedDelegation],\n    key: delegate.privateKey,\n  }\n  console.log({ newInvite });\n  return newInvite;\n}\n","import React, { useEffect, useState } from 'react';\nimport InstallExtension from \"./InstallExtension\"\nimport ReviewAndRevokeInvitations from './ReviewAndRevokeInvitations';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nconst { validateInvitation } = require('eth-delegatable-utils');\nimport contractInfo from './contractInfo';\nconst { chainId } = contractInfo;\n\nimport PhishingReport from './PhishingReport';\nimport MemberReport from './MemberReport';\nimport { PhisherCheckButton } from './PhisherCheck';\nimport { MemberCheckButton } from './MemberCheck';\nimport createInvitation from './createInvitation';\nimport LazyConnect from './LazyConnect';\nimport copyInvitationLink from './copyInvitationLink';\n\nexport default function Members (props) {\n  const query = useQuery();\n\n  const [ loaded, setLoaded ] = useState(false); // For loading invitations\n  const [ loadingFromDisk, setLoadingFromDisk ] = useState(false);\n  const [ errorMessage, setErrorMessage ] = useState(null);\n\n  const [ invitation, setInvitation ] = useState(null); // Own invitation\n  const [ invitations, setInvitations ] = useState([]); // Outbound invitations\n  const history = useHistory();\n\n  \n  // Load user's own invitation from disk or query string:\n  useEffect(() => {\n    async function checkInvitations () {\n      if (!loadingFromDisk) {\n        setLoadingFromDisk(true);\n\n        if (!invitation) {\n          try {\n            let parsedInvitation;\n            let rawLoaded = document.cookie;\n            if (rawLoaded) {\n              parsedInvitation = JSON.parse(rawLoaded);\n            }\n            if (!parsedInvitation || parsedInvitation === 'null') {\n              parsedInvitation = JSON.parse(query.get(\"invitation\"));\n              validateInvitation({\n                contractInfo,\n                invitation: parsedInvitation,\n              });\n              document.cookie = query.get(\"invitation\");\n            }\n\n            history.push('/members');\n            validateInvitation({\n              contractInfo,\n              invitation: parsedInvitation,\n            });\n            if (parsedInvitation) {\n              setInvitation(parsedInvitation);\n            }\n            setLoadingFromDisk(false);\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(err.message);\n          }\n        }\n      }\n    }\n\n    checkInvitations().catch(console.error);\n  });\n\n  // Load user's outstanding invitations from disk:\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('outstandingInvitations');\n      let loadedInvitations = JSON.parse(rawStorage) || [];\n      setInvitations(loadedInvitations);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  if (!invitation) {\n    if (errorMessage) {\n      return (<div>\n        <h3>Invalid invitation.</h3>\n        <p>Sorry, we were unable to process your invitation.</p>\n        <p className='error'>{ errorMessage } </p>\n      </div>)   \n    } else {\n      return (<div>\n        <h3>Processing invitation...</h3> \n      </div>)\n    }\n  }\n\n  const inviteView = generateInviteView(invitation, (invitation) => {\n    if (invitation) {\n      const newInvites = [...invitations, invitation];\n      localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n      setInvitations(newInvites);\n    } \n  });\n\n  return (\n    <div>\n      <div className=\"controlBoard\">\n\n        <div className=\"phisherBox\">\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is a phisher\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <PhisherCheckButton/>\n            </LazyConnect>\n          </div>\n\n          <div className=\"box\">\n            <PhishingReport invitation={invitation}/>\n          </div>\n        </div>\n\n        <div className=\"memberBox\">\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is endorsed\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <MemberCheckButton/>\n            </LazyConnect>\n          </div>\n\n          <div className=\"box\">\n            <MemberReport invitation={invitation}/>\n          </div>\n        </div>\n\n        <div className=\"inviteBox\">\n          { inviteView }\n\n          <LazyConnect actionName=\"revoke outstanding invitations\" chainId={chainId}>\n            <ReviewAndRevokeInvitations\n              invitations={invitations}\n              invitation={invitation}\n              setInvitations={setInvitations}/>\n          </LazyConnect>\n\n          <div className='box'>\n            <h3>Review your invites and their reports. (Coming soon!)</h3>\n          </div>\n\n        </div>\n\n        <InstallExtension />\n      </div>\n\n    </div>\n  )\n}\n\nfunction generateInviteView(invitation, addInvitation) {\n  const tier = invitation.signedDelegations.length;\n\n  if (tier < 4) {\n    return (\n      <div className='box'>\n        <p>You are a tier {invitation.signedDelegations.length} invitee. This means you can invite up to {4-tier} additional tiers of members.</p>\n        <p>Invite people who you think will respect the system, and only report definite impostors and frauds, and only endorse people who are neither.</p>\n        <p>If you invite an abusive person and don't revoke their activity quickly, you may have your membership revoked.</p>\n        <button onClick={() => {\n          const petName = prompt('Who is this invitation for (for your personal use only, so you can view their reports and revoke the invitation)?');\n          const newInvitation = createInvitation(invitation);\n          copyInvitationLink(newInvitation, petName)\n          .then(() => {\n            if (addInvitation) {\n              addInvitation({\n                petName,\n                invitation: newInvitation,\n              });\n            }\n          })\n        }}>Copy new invite link</button>\n      </div> \n    );\n  } else if (tier === 4) {\n    <div>\n      <p>You are a tier 4 member. That means you can't currently invite new members through this interface, but if this site becomes popular, we can add support for this later.</p>\n    </div> \n  }\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\nimport LazyConnect from './LazyConnect';\nimport { PhisherCheckButton } from './PhisherCheck';\nconst { chainId } = require('./config.json');\n\n// Routes\nimport InstallExtension from './InstallExtension';\nimport Members from './Members';\nimport { MemberCheckButton } from './MemberCheck';\n\nexport default function QueryParamsRouter(props) {\n  const { provider } = props;\n  let query = useQuery();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div className='box'>\n          <LazyConnect actionName=\"check if a user is a phisher or member\" chainId={chainId}\n            opts={{ needsAccountConnected: false }}>\n            <PhisherCheckButton/>\n            <MemberCheckButton/>\n          </LazyConnect>\n        </div>\n\n        <InstallExtension/>\n      </Route>\n      <Route path=\"/members/\">\n        <Members/>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import logo from './logo.svg';\nimport QueryParamsRoute from './QueryParamsRoute';\nimport \"antd/dist/antd.css\";\nimport { HashRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <h1>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          MobyMask</h1>\n        <p>\n          An alliance of good-hearted phish, aiming to eliminate phishers. \n        </p>\n      </header>\n\n      <Router>\n        <QueryParamsRoute/>\n      </Router>\n\n      <div className='footer'>\n        <p>Reporters are added on an invite-only basis.</p>\n        <p>Learn more about how our invite system works at <a href=\"https://github.com/danfinlay/delegatable-eth\">delegatable-eth</a>.</p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar types = require('./types');\nvar createTypedMessage = require('./createTypedMessage');\nvar sigUtil = require('@metamask/eth-sig-util');\nvar TypedDataUtils = sigUtil.TypedDataUtils;\nvar abi = require('./artifacts').abi;\nvar typedMessage = require('./types');\nvar CONTRACT_NAME = 'PhisherRegistry';\nvar secp = require('@noble/secp256k1');\nvar keccak_256 = require('@noble/hashes/sha3').keccak_256;\n/* This is designed to be a particularly convenient method for interacting with delegations.\n * It creates an object that can be used to sign a delegation, or revoke a delegation.\n * It can also be used to create invitation objects, and can be instantiated with those invitation objects.\n */\nexports.createMembership = function createMembership(opts) {\n    if (opts === void 0) { opts = {}; }\n    var invitation = opts.invitation, key = opts.key, contractInfo = opts.contractInfo;\n    if (!invitation && !key) {\n        throw new Error('Either an invitation or a key is required to initialize membership.');\n    }\n    if (!key) {\n        key = invitation.key;\n        if (!contractInfo && invitation.contractInfo) {\n            contractInfo = invitation.contractInfo;\n        }\n    }\n    if (!contractInfo || !contractInfo.verifyingContract) {\n        throw new Error('Contract info must be provided to initialize membership.');\n    }\n    return {\n        createInvitation: function (_a) {\n            var recipientAddress = _a.recipientAddress, delegation = _a.delegation;\n            if (invitation) {\n                if (!('authority' in delegation)) {\n                    var signedDelegations = invitation.signedDelegations;\n                    var lastSignedDelegation = signedDelegations[signedDelegations.length - 1];\n                    var delegationHash = exports.createSignedDelegationHash(lastSignedDelegation);\n                    var hexHash = '0x' + delegationHash.toString('hex');\n                    delegation.authority = hexHash;\n                }\n                var newInvitation = exports.createDelegatedInvitation({\n                    contractInfo: contractInfo,\n                    recipientAddress: recipientAddress || delegation.delegate,\n                    invitation: invitation,\n                    delegation: delegation,\n                    key: key\n                });\n                return newInvitation;\n            }\n            if (!('authority' in delegation)) {\n                delegation.authority = '0x0000000000000000000000000000000000000000';\n            }\n            return exports.createFirstDelegatedInvitation({ contractInfo: contractInfo, recipientAddress: recipientAddress, delegation: delegation, key: key });\n        },\n        createMembershipFromDelegation: function (delegation) {\n            if (invitation) {\n                var signedDelegations = invitation.signedDelegations;\n                if (invitation) {\n                    var signedDelegations_1 = invitation.signedDelegations;\n                    var lastSignedDelegation = signedDelegations_1[signedDelegations_1.length - 1];\n                    var delegationHash = exports.createSignedDelegationHash(lastSignedDelegation);\n                    var hexHash = '0x' + delegationHash.toString('hex');\n                    delegation.authority = hexHash;\n                }\n                else {\n                    delegation.authority = '0x0000000000000000000000000000000000000000000000000000000000000000';\n                }\n                var newInvitation = exports.createDelegatedInvitation({\n                    contractInfo: contractInfo,\n                    recipientAddress: delegation.delegate,\n                    invitation: invitation,\n                    delegation: delegation\n                });\n                if (!newInvitation.key) {\n                    // We can allow instantiating with a local delegate key later,\n                    // but for now it seems like a less common use case so I'm not prioritizing it.\n                    throw new Error('Cannot create a membership object without a signing key.');\n                }\n                return exports.createMembership({\n                    invitation: newInvitation,\n                    contractInfo: contractInfo\n                });\n            }\n            delegation.authority = '0x0000000000000000000000000000000000000000000000000000000000000000';\n            var firstInvitation = exports.createFirstDelegatedInvitation({\n                contractInfo: contractInfo,\n                recipientAddress: delegation.delegate,\n                delegation: delegation,\n                key: key\n            });\n            return exports.createMembership({\n                invitation: firstInvitation,\n                contractInfo: contractInfo\n            });\n        },\n        signDelegation: function (delegation) {\n            if (invitation) {\n                var signedDelegations = invitation.signedDelegations;\n                var lastSignedDelegation = signedDelegations[signedDelegations.length - 1];\n                var delegationHash = exports.createSignedDelegationHash(lastSignedDelegation);\n                var hexHash = '0x' + delegationHash.toString('hex');\n                delegation.authority = hexHash;\n            }\n            else {\n                delegation.authority = '0x0000000000000000000000000000000000000000000000000000000000000000';\n            }\n            // function signDelegation ({ delegation, key, contractInfo }):\n            return exports.signDelegation({ contractInfo: contractInfo, delegation: delegation, key: key });\n        },\n        signInvocations: function (invocations) {\n            invocations.batch.forEach(function (invocation) {\n                if (invitation) {\n                    invocation.authority = invitation.signedDelegations;\n                }\n                else {\n                    invocation.authority = [];\n                }\n            });\n            return exports.signInvocations({ invocations: invocations, privateKey: key, contractInfo: contractInfo });\n        },\n        signRevocationMessage: function (invitation) {\n            var signedDelegations = invitation.signedDelegations;\n            var lastDelegation = signedDelegations[signedDelegations.length - 1];\n            // Owner revokes outstanding delegation\n            var intentionToRevoke = {\n                delegationHash: TypedDataUtils.hashStruct('SignedDelegation', lastDelegation, types, true)\n            };\n            return exports.signRevocation(intentionToRevoke, key);\n        }\n    };\n};\n// Util curries contract info into a reusable utility\nexports.generateUtil = function generateUtil(contractInfo) {\n    return {\n        recoverSigner: function (signedDelegation) { return exports.recoverSigner(signedDelegation, contractInfo); },\n        signDelegation: function (delegation, key) { return exports.signDelegation({ delegation: delegation, key: key, contractInfo: contractInfo }); },\n        createInvitation: function (delegation, privateKey) { return exports.createInvitation({ delegation: delegation, privateKey: privateKey, contractInfo: contractInfo }); },\n        recoverDelegationSigner: function (signedDelegation) { return exports.recoverDelegationSigner(signedDelegation, contractInfo); },\n        signInvocation: function (invocation, privateKey) { return exports.signInvocation({ invocation: invocation, privateKey: privateKey, contractInfo: contractInfo }); },\n        recoverInvocationSigner: function (signedInvocation) { return exports.recoverInvocationSigner({ signedInvocation: signedInvocation, contractInfo: contractInfo }); },\n        signRevocation: function (revocation, privateKey) { return exports.signRevocation(revocation, privateKey, contractInfo); },\n        recoverRevocationSignature: function (signedRevocation) { return exports.recoverRevocationSignature(signedRevocation, contractInfo); }\n    };\n};\nexports.createSignedDelegationHash = function createDelegationHash(signedDelegation) {\n    var hash = TypedDataUtils.hashStruct('SignedDelegation', signedDelegation, types.types, 'V4');\n    return hash;\n};\nexports.recoverDelegationSigner = function recoverDelegationSigner(signedDelegation, contractInfo) {\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    types.domain.chainId = chainId;\n    types.domain.name = name;\n    types.domain.verifyingContract = verifyingContract;\n    var typedMessage = createTypedMessage(verifyingContract, signedDelegation.delegation, 'Delegation', name, chainId);\n    var signer = sigUtil.recoverTypedSignature({\n        data: typedMessage.data,\n        signature: signedDelegation.signature,\n        version: 'V4'\n    });\n    return signer;\n};\nexports.recoverSigner = exports.recoverDelegationSigner;\nexports.recoverInvocationSigner = function recoverInvocationSigner(_a) {\n    var signedInvocation = _a.signedInvocation, contractInfo = _a.contractInfo;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    types.domain.chainId = chainId;\n    types.domain.name = name;\n    types.domain.verifyingContract = verifyingContract;\n    var typedMessage = createTypedMessage(verifyingContract, signedInvocation.invocations, 'Invocations', name, chainId);\n    var signer = sigUtil.recoverTypedSignature({\n        data: typedMessage.data,\n        signature: signedInvocation.signature,\n        version: 'V4'\n    });\n    return signer;\n};\nexports.signInvocations = function signInvocations(_a) {\n    var invocations = _a.invocations, privateKey = _a.privateKey, contractInfo = _a.contractInfo;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    var typedMessage = createTypedMessage(verifyingContract, invocations, 'Invocations', name, chainId);\n    var signature = sigUtil.signTypedData({\n        privateKey: exports.fromHexString(privateKey.indexOf('0x') === 0 ? privateKey.substring(2) : privateKey),\n        data: typedMessage.data,\n        version: 'V4'\n    });\n    var signedInvocations = {\n        signature: signature,\n        invocations: invocations\n    };\n    return signedInvocations;\n};\nexports.signDelegation = function signDelegation(_a) {\n    var delegation = _a.delegation, key = _a.key, contractInfo = _a.contractInfo;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    var typedMessage = createTypedMessage(verifyingContract, delegation, 'Delegation', name, chainId);\n    var signature = sigUtil.signTypedData({\n        privateKey: exports.fromHexString(key.indexOf('0x') === 0 ? key.substring(2) : key),\n        data: typedMessage.data,\n        version: 'V4'\n    });\n    var signedDelegation = {\n        signature: signature,\n        delegation: delegation\n    };\n    return signedDelegation;\n};\nexports.signRevocation = function signRevocation(revocation, privateKey, contractInfo) {\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    var typedMessage = createTypedMessage(verifyingContract, revocation, 'IntentionToRevoke', name, chainId);\n    var signature = sigUtil.signTypedData({\n        privateKey: exports.fromHexString(privateKey.indexOf('0x') === 0 ? privateKey.substring(2) : privateKey),\n        data: typedMessage.data,\n        version: 'V4'\n    });\n    var signedRevocation = {\n        signature: signature,\n        intentionToRevoke: revocation\n    };\n    return signedRevocation;\n};\nexports.recoverRevocationSignature = function recoverRevocationSignature(signedRevocation, contractInfo) {\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    types.domain.chainId = chainId;\n    types.domain.name = name;\n    types.domain.verifyingContract = verifyingContract;\n    var typedMessage = createTypedMessage(verifyingContract, signedRevocation.revocation, 'IntentionToRevoke', name, chainId);\n    var signer = sigUtil.recoverTypedSignature({\n        data: typedMessage.data,\n        signature: signedRevocation.signature,\n        version: 'V4'\n    });\n    return signer;\n};\nexports.validateInvitation = function validateInvitation(_a) {\n    var contractInfo = _a.contractInfo, invitation = _a.invitation;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    if (!invitation) {\n        throw new Error('Invitation is required');\n    }\n    var signedDelegations = invitation.signedDelegations, key = invitation.key;\n    if (signedDelegations.length === 0 && key && typeof key === 'string') {\n        // we have to assume this is a root invitation, and cannot really validate it without trying things on chain.\n        return true;\n    }\n    // Trying to follow the code from Delegatable.sol as closely as possible here\n    // To ensure readable correctness.\n    var intendedSender = exports.recoverDelegationSigner(signedDelegations[0], {\n        chainId: chainId,\n        verifyingContract: verifyingContract,\n        name: CONTRACT_NAME\n    }).toLowerCase();\n    var canGrant = intendedSender.toLowerCase();\n    var authHash;\n    for (var d = 0; d < signedDelegations.length; d++) {\n        var signedDelegation = signedDelegations[d];\n        var delegationSigner = exports.recoverDelegationSigner(signedDelegation, {\n            chainId: chainId,\n            verifyingContract: verifyingContract,\n            name: CONTRACT_NAME\n        }).toLowerCase();\n        if (d === 0) {\n            intendedSender = delegationSigner;\n            canGrant = intendedSender.toLowerCase();\n        }\n        var delegation = signedDelegation.delegation;\n        if (delegationSigner !== canGrant) {\n            throw new Error(\"Delegation signer \".concat(delegationSigner, \" does not match required signer \").concat(canGrant));\n        }\n        var delegationHash = exports.createSignedDelegationHash(signedDelegation);\n        // Skipping caveat evaluation for now\n        authHash = delegationHash;\n        canGrant = delegation.delegate.toLowerCase();\n    }\n    // TODO: Also verify the final canGrant equals the key address.\n    // Not adding yet b/c I want it well tested when I add it.\n    return !!invitation;\n};\n/* Allows a user to create a new invitation, which can be used to grant\n * that user's own permissions to the recipient.\n */\nexports.createInvitation = function createInvitation(opts) {\n    var contractInfo = opts.contractInfo, privateKey = opts.privateKey, recipientAddress = opts.recipientAddress;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    if (recipientAddress) {\n        return exports.createDelegatedInvitation(opts);\n    }\n    var delegate = exports.generateAccount();\n    // Prepare the delegation message.\n    // This contract is also a revocation enforcer, so it can be used for caveats:\n    var delegation = {\n        delegate: exports.toHexString(delegate.address),\n        authority: '0x0000000000000000000000000000000000000000000000000000000000000000',\n        caveats: [{\n                enforcer: verifyingContract,\n                terms: '0x0000000000000000000000000000000000000000000000000000000000000000'\n            }]\n    };\n    var typedMessage = createTypedMessage(verifyingContract, delegation, 'Delegation', name, chainId);\n    var signature = sigUtil.signTypedData({\n        privateKey: exports.fromHexString(privateKey.indexOf('0x') === 0 ? privateKey.substring(2) : privateKey),\n        data: typedMessage.data,\n        version: 'V4'\n    });\n    var signedDelegation = {\n        signature: signature,\n        delegation: delegation\n    };\n    var invitation = {\n        signedDelegations: [signedDelegation],\n        key: delegate.key\n    };\n    return invitation;\n};\n/* Allows a user to create a new invitation, which creates a\n * delegated delegation to another user.\n */\nexports.createDelegatedInvitation = function createDelegatedInvitation(_a) {\n    var contractInfo = _a.contractInfo, recipientAddress = _a.recipientAddress, invitation = _a.invitation, delegation = _a.delegation, key = _a.key;\n    var chainId = contractInfo.chainId, verifyingContract = contractInfo.verifyingContract, name = contractInfo.name;\n    var signedDelegations = invitation.signedDelegations;\n    var delegatorKey = key || invitation.key;\n    var signedDelegation = signedDelegations[signedDelegations.length - 1];\n    var delegationHash = exports.createSignedDelegationHash(signedDelegation);\n    var hexHash = '0x' + delegationHash.toString('hex');\n    var delegate;\n    if (!recipientAddress) {\n        var delegate_1 = exports.generateAccount();\n    }\n    else {\n        delegate = {\n            address: recipientAddress\n        };\n    }\n    if (!delegation) {\n        delegation = {\n            delegate: delegate.address,\n            authority: hexHash,\n            // defer to parent contract as caveat by default:\n            caveats: [{\n                    enforcer: verifyingContract,\n                    terms: '0x0000000000000000000000000000000000000000000000000000000000000000'\n                }]\n        };\n    }\n    var newSignedDelegation = exports.signDelegation({\n        key: delegatorKey,\n        contractInfo: contractInfo,\n        delegation: delegation\n    });\n    var newInvite = {\n        signedDelegations: __spreadArray(__spreadArray([], __read(signedDelegations), false), [newSignedDelegation], false)\n    };\n    // If a recipient was specified, we just attach the intended address.\n    // If no recipient was specified, we include the delegate key.\n    if (delegate.key) {\n        newInvite.key = delegate.key;\n    }\n    return newInvite;\n};\n/* Allows an owner to create a delegation\n  * to another user.\n  * Unlike createDelegatedInvitation, this one does not require an existing invtation,\n  * and can create a first delegation from just a key.\n  */\nexports.createFirstDelegatedInvitation = function createFirstDelegatedInvitation(_a) {\n    var contractInfo = _a.contractInfo, recipientAddress = _a.recipientAddress, key = _a.key, delegation = _a.delegation;\n    var verifyingContract = contractInfo.verifyingContract;\n    var delegate;\n    if (!recipientAddress) {\n        delegate = exports.generateAccount();\n    }\n    else {\n        delegate = {\n            address: recipientAddress\n        };\n    }\n    if (!delegation) {\n        delegation = {\n            delegate: recipientAddress,\n            authority: '0x0000000000000000000000000000000000000000000000000000000000000000',\n            // defer to parent contract as caveat by default:\n            caveats: [{\n                    enforcer: verifyingContract,\n                    terms: '0x0000000000000000000000000000000000000000000000000000000000000000'\n                }]\n        };\n    }\n    var newSignedDelegation = exports.signDelegation({ delegation: delegation, key: key, contractInfo: contractInfo });\n    var newInvite = {\n        signedDelegations: [newSignedDelegation]\n    };\n    // If a recipient was specified, we let them be implicit in the delegation. \n    // If no recipient was specified, we include the delegate key.\n    if (!recipientAddress && (delegate === null || delegate === void 0 ? void 0 : delegate.key)) {\n        newInvite.key = delegate.key;\n    }\n    return newInvite;\n};\nexports.fromHexString = function fromHexString(hexString) {\n    if (!hexString || typeof hexString !== 'string') {\n        throw new Error('Expected a hex string.');\n    }\n    var matched = hexString.match(/.{1,2}/g);\n    if (!matched) {\n        throw new Error('Expected a hex string.');\n    }\n    var mapped = matched.map(function (byte) { return parseInt(byte, 16); });\n    if (!mapped || mapped.length !== 32) {\n        throw new Error('Expected a hex string.');\n    }\n    return new Uint8Array(mapped);\n};\nexports.toHexString = function toHexString(buffer) {\n    return __spreadArray([], __read(buffer), false).map(function (x) { return x.toString(16).padStart(2, '0'); }).join('');\n};\nexports.generateAccount = function generateAccount() {\n    var privKey = secp.utils.randomPrivateKey();\n    var pubKey = secp.getPublicKey(privKey);\n    var pubKeyHash = keccak_256(pubKey, 32);\n    var privKeyAddress = exports.toHexString(pubKeyHash.subarray(24));\n    return {\n        address: privKeyAddress,\n        key: privKey\n    };\n};\n"],"sourceRoot":""}