{"version":3,"sources":["createTypedMessage.js","logo.svg","Landing.jsx","createRegistry.js","reportPhishers.js","LazyConnect.jsx","PhishingReport.jsx","PhisherCheck.jsx","validateInvitation.js","createInvitation.js","Members.jsx","QueryParamsRoute.jsx","App.jsx","index.jsx","types.js"],"names":["types","require","module","exports","yourContract","message","primaryType","CONTRACT_NAME","_chainId","chainId","deployTransaction","console","log","data","domain","name","version","verifyingContract","address","Landing","className","disabled","abi","provider","a","wallet","getSigner","attachRegistry","registry","signer","Registry","ethers","Contract","attach","_registry","deployed","generateUtil","reportPhishers","phishers","invitation","key","signedDelegations","util","Promise","all","map","phisher","_phisher","indexOf","slice","populateTransaction","claimIfPhisher","toLowerCase","desiredTx","invocation","transaction","to","gasLimit","authority","invocations","queue","Math","floor","random","signedInvocations","signInvocation","batch","replayProtection","nonce","invoke","config","LazyConnect","props","actionName","useState","setInjectedProvider","accounts","setAccounts","setError","userChainId","setUserChainId","loading","setLoading","MetaMaskOnboarding","isMetaMaskInstalled","providers","Web3Provider","window","ethereum","useEffect","request","method","getAccounts","then","catch","error","on","getUserChainId","onClick","startOnboarding","Number","params","toString","reason","length","children","childrenWithProps","React","Children","child","isValidElement","cloneElement","setPhisher","setPhishers","loaded","setLoaded","rawStorage","localStorage","getItem","storedPhishers","JSON","parse","err","type","placeholder","onChange","event","target","value","push","setItem","stringify","index","SubmitBatchButton","block","clear","setName","output","setOutput","e","checkPhisher","result","recoverDelegationSigner","validateInvitation","Error","authHash","intendedSender","Wallet","canGrant","d","signedDelegation","delegationSigner","delegation","createSignedDelegationHash","delegate","signDelegation","TypedDataUtils","Members","query","search","useLocation","useMemo","URLSearchParams","useQuery","setInvitation","errorMessage","setErrorMessage","invitations","setInvitations","history","useHistory","rawLoaded","document","cookie","parsedInvitation","get","checkInvitations","loadedInvitations","inviteView","addInvitation","tier","petName","prompt","newInvitation","createRandom","hexHash","hashStruct","caveats","enforcer","terms","newSignedDelegation","newInvite","privateKey","createInvitation","inviteLink","location","origin","encodeURIComponent","navigator","clipboard","writeText","alert","generateInviteView","newInvites","PhishingReport","PhisherCheckButton","_invitation","delegationHash","intendedRevocation","signedIntendedRevocation","signRevocation","revokeDelegation","splice","setRegistry","createRegistry","PhisherCheck","codedName","isPhisher","QueryParamsRouter","exact","path","App","src","logo","alt","href","themes","dark","process","light","prevTheme","subgraphUri","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","getElementById","entries","caveat","EIP712Domain","Invocation","Invocations","SignedInvocation","Transaction","ReplayProtection","Delegation","Caveat","SignedDelegation"],"mappings":"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","file":"static/js/main.1c5953e1.chunk.js","sourcesContent":["const { types } = require('./types');\n\nmodule.exports = function createTypedMessage (yourContract, message, primaryType, CONTRACT_NAME, _chainId) {\n  const chainId = yourContract?.deployTransaction?.chainId || _chainId;\n  console.log('creating message for contract', yourContract);\n  return { data: {\n    types,\n    primaryType,\n    domain: {\n      name: CONTRACT_NAME,\n      version: '1',\n      chainId,\n      verifyingContract: yourContract.address,\n    },\n    message,\n  }};\n}\n","export default __webpack_public_path__ + \"static/media/logo.06de1321.svg\";","import React from 'react';\nimport logo from './logo.svg';\n\nfunction Landing() {\n  return (\n    <div className='box'>\n      <p>\n        Get warned about phishers on the web:\n      </p>\n      <button className='installButton' disabled>Install the Web Extension (coming soon!)</button>\n    </div>\n  );\n}\n\nexport default Landing;\n","import { ethers } from \"ethers\";\nconst { abi } = require('./artifacts');\nconst { address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function createRegistry (provider) {\n  console.log('creating registry');\n  console.log('made provider')\n  const wallet = provider.getSigner();\n  console.log('made wallet, attaching registry', wallet);\n  const registry = await attachRegistry(wallet);\n  console.log('there it is', registry);\n  return registry;\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function reportPhishers (phishers, provider, invitation) {\n  const { key, signedDelegations } = invitation;\n  const util = generateUtil({\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  })\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(phishers.map(async (phisher) => {\n    const _phisher = phisher.indexOf('@') === '0' ? phisher.slice(1) : phisher;\n    const desiredTx = await registry.populateTransaction.claimIfPhisher(`TWT:${_phisher.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n      authority: signedDelegations,\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = util.signInvocation({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  }, key);\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nconst { ethers } = require(\"ethers\");\nimport MetaMaskOnboarding from '@metamask/onboarding'\nconst config = require('./config.json');\nconst { chainId } = config;\n\nexport default function LazyConnect (props) {\n  const { actionName } = props;\n  const [provider, setInjectedProvider] = useState();\n  const [accounts, setAccounts] = useState([]);\n  const [error, setError] = useState(null);\n  const [userChainId, setUserChainId] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  if (!provider && MetaMaskOnboarding.isMetaMaskInstalled()) { \n    const ethersProvider = new ethers.providers.Web3Provider(window.ethereum, 'any');\n    setInjectedProvider(ethersProvider);\n  }\n\n  // Get accounts;\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    getAccounts()\n    .then(setAccounts)\n    .catch(console.error);\n\n    async function getAccounts() {\n      const accounts = await ethereum.request({ method: 'eth_accounts' });\n      return accounts;\n    }\n\n    provider.on(\"accountsChanged\", setAccounts);\n  }, []);\n\n  // Get current selected network:\n  useEffect(() => {\n    if (!provider || userChainId) {\n      return;\n    }\n    getUserChainId()\n    .then(setUserChainId)\n    .catch(console.error);\n\n    async function getUserChainId() {\n      const chainId = await ethereum.request({ method: 'eth_chainId' });\n      return chainId;\n    }\n\n    provider.provider.on('chainChanged', (_chainId) => {\n      setUserChainId(_chainId);\n    });\n  }, []);\n\n  if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\n    return (<div className=\"lazyConnect\">\n      <p>You need a wallet to {actionName}.</p>\n      <button onClick={() => {\n        const onboarding = new MetaMaskOnboarding();\n        onboarding.startOnboarding();\n        }}>Install MetaMask</button>\n    </div>);\n  }\n\n  if (Number(userChainId) !== config.chainId) {\n    return <div className=\"lazyConnect\">\n      <p>This app requires the Goerli test network to be selected in your wallet, since this is just a test for now.</p>\n      <button onClick={async () => {\n        ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: '0x' + config.chainId.toString(16) }],\n        })\n        .then(() => {\n          setLoading(false);\n        })\n        .catch((reason) => {\n          setLoading(false);\n          setError(reason);\n        });\n        setLoading(true);\n      }}>Switch to Goerli</button>\n    </div>\n  }\n\n  if (accounts && accounts.length === 0) {\n    return <div className=\"lazyConnect\">\n      <p>You need to connect an account to {actionName}.</p>\n      <button onClick={async () => {\n        const accounts = await ethereum.request({ method: 'wallet_requestAccounts' });\n        setAccounts(accounts);\n      }}>Connect an account</button>\n    </div>\n  }\n\n  if (loading) {\n    return (<div className=\"lazyConnect\">Loading...</div>)\n  }\n\n  const { children } = props;\n\n  const childrenWithProps = React.Children.map(children, child => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { provider });\n    }\n    return child;\n  });  \n\n  return (<div>{childrenWithProps}</div>)\n}","import React, { useEffect, useState } from 'react';\nimport reportPhishers from './reportPhishers';\nimport LazyConnect from './LazyConnect';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ phisher, setPhisher ] = useState(null);\n  const [ phishers, setPhishers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingPhishers');\n      let storedPhishers = JSON.parse(rawStorage) || [];\n      setPhishers(storedPhishers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  return (\n    <div className='box'>\n      <h3>Report a phishing attempt</h3>\n      <input type=\"text\" placeholder=\"@phisher_person\" onChange={(event) => {\n        setPhisher(event.target.value);\n      }}/>\n      \n      <button onClick={() => {\n        if (phisher) {\n          console.log(`appending ${phisher} to `, phishers);\n          phishers.push(phisher);\n          localStorage.setItem('pendingPhishers', JSON.stringify(phishers));\n          setPhisher('');\n        } \n      }}>Report twitter phisher</button>\n\n      <div className='phishers'>\n        { phishers && phishers.length > 0 ? \n        <div>\n          <p>Pending phishing reports:</p>\n          <ol>\n            {phishers.map((phisher, index) => {\n              return (<li key={index}>{phisher}</li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit reports directly to the blockchain\">\n            <SubmitBatchButton phishers={phishers} invitation={invitation} setPhishers={setPhishers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, phishers, invitation, setPhishers } = props;\n  return (<div>\n    <button onClick={async () => {\n      console.log('submitting batch');\n      const block = await reportPhishers(phishers, provider, invitation);\n      console.log('batch submitted', block);\n      localStorage.clear();\n      setPhishers([]);\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import React, { useEffect, useState } from 'react';\n\nexport default function (props) {\n  const [name, setName] = useState('');\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Phisher Status</h3>\n      <input type=\"text\" onChange={(e) => setName(e.target.value)} />\n      <button onClick={() => {\n        props.checkPhisher(name)\n        .then((result) => {\n          setOutput(result);\n          setName('');\n        })\n        .catch(console.error);\n      }}>Check</button>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { generateUtil, recoverDelegationSigner } = require('eth-delegatable-utils');\nconst createTypedMessage = require('./createTypedMessage');\nconst sigUtil = require('@metamask/eth-sig-util');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\n\ntypes.domain.chainId = chainId;\ntypes.domain.verifyingContract = address;\n\n/*\ntype SignedDelegation = {\n  delegation: Delegation,\n  signature: string,\n}\n\ntype Delegation = {\n  delegate: string,\n  authority: string,\n  caveats: Caveat[],\n}\n\ntype Caveat = {\n  enforcer: string,\n  terms: string,\n}\n\ntype Invitation = {\n  signedDelegations: SignedDelegation[],\n  key: string,\n}\n*/\nconst ROOT_AUTHORITY = '0xDdb18b319BE3530560eECFF962032dFAD88212d4';\n\nexport function validateInvitation (invitation) {\n  if (!invitation) {\n    throw new Error('Invitation is required');\n  }\n  console.log('invitation', invitation);\n\n  const { signedDelegations, key } = invitation;\n  const wallet = new ethers.Wallet(key);\n\n  // Trying to follow the code from Delegatable.sol as closely as possible here\n  // To ensure readable correctness.\n  let intendedSender = ROOT_AUTHORITY;\n  let canGrant = intendedSender.toLowerCase();\n  let authHash;\n\n  for (let d = 0; d < signedDelegations.length; d++) {\n    console.log(`Evaluating delegation number ${d}`)\n    const signedDelegation = signedDelegations[d];\n    const delegationSigner = recoverDelegationSigner(signedDelegation, {\n      chainId,\n      verifyingContract: address,\n      name: CONTRACT_NAME,\n    }).toLowerCase();\n\n    if (d === 0) {\n      intendedSender = delegationSigner;\n      canGrant = intendedSender.toLowerCase();\n    }\n\n    const delegation = signedDelegation.delegation;\n    if (delegationSigner !== canGrant) {\n      throw new Error(`Delegation signer ${delegationSigner} does not match required signer ${canGrant}`);\n    }\n\n    const delegationHash = util.createSignedDelegationHash(signedDelegation);\n\n    // Skipping caveat evaluation for now\n\n    authHash = delegationHash;\n    console.log(`Delegation ${d} of id ${authHash} signed by ${canGrant} granted to ${delegation.delegate}`);\n    canGrant = delegation.delegate.toLowerCase();\n  }\n\n  return !!invitation;\n}\n","const { signDelegation } = require('eth-delegatable-utils');\nimport { ethers } from \"ethers\";\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst sigUtil = require('eth-sig-util');\nconst { TypedDataUtils } = sigUtil;\nconst types = require('./types');\n\nexport default function createInvitation (invitation) {\n  const { signedDelegations, key } = invitation;\n  const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n  const delegate = ethers.Wallet.createRandom();\n  console.log('types', types);\n  const delegationHash = TypedDataUtils.hashStruct('SignedDelegation', signedDelegation, types.types, true);\n  const hexHash = '0x' + delegationHash.toString('hex');\n\n  const delegation = {\n    delegate: delegate.address,\n    authority: hexHash,\n\n    // Revokable by default:\n    caveats: [{\n      enforcer: address,\n      terms: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    }]\n  }\n\n  const newSignedDelegation = signDelegation(delegation, key, {\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  });\n  const newInvite = {\n    signedDelegations: [...signedDelegations, newSignedDelegation],\n    key: delegate.privateKey,\n  }\n  console.log({ newInvite });\n  return newInvite;\n}\n","import React, { useEffect, useState } from 'react';\nimport Landing from \"./Landing\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nimport { ethers } from \"ethers\";\nconst types = require('./types')\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nimport createRegistry from './createRegistry';\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\n\nimport PhishingReport from './PhishingReport';\nimport PhisherCheck from './PhisherCheck';\nimport { validateInvitation } from './validateInvitation';\nimport createInvitation from './createInvitation';\nimport LazyConnect from './LazyConnect';\n\nexport default function Members (props) {\n  const query = useQuery();\n  const [ invitation, setInvitation ] = useState(null);\n  const [ errorMessage, setErrorMessage ] = useState(null);\n  const [ loading, setLoading ] = useState(false);\n  const [ invitations, setInvitations ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false); // For loading invitations\n  const history = useHistory();\n\n  \n  // Load user's own invitation from disk or query string:\n  useEffect(() => {\n    async function checkInvitations () {\n      if (!loading) {\n        setLoading(true);\n\n        if (!invitation) {\n          try {\n            let parsedInvitation;\n            let rawLoaded = document.cookie;\n            if (rawLoaded) {\n              parsedInvitation = JSON.parse(rawLoaded);\n            }\n            if (!parsedInvitation || parsedInvitation === 'null') {\n              parsedInvitation = JSON.parse(query.get(\"invitation\"));\n              validateInvitation(parsedInvitation);\n              document.cookie = query.get(\"invitation\");\n            }\n\n            history.push('/members');\n            validateInvitation(parsedInvitation);\n            if (parsedInvitation) {\n              setInvitation(parsedInvitation);\n            }\n            setLoading(false);\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(err.message);\n          }\n        }\n      }\n    }\n\n    checkInvitations().catch(console.error);\n  });\n\n  // Load user's outstanding invitations from disk:\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('outstandingInvitations');\n      let loadedInvitations = JSON.parse(rawStorage) || [];\n      setInvitations(loadedInvitations);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  if (!invitation) {\n    if (errorMessage) {\n      return (<div>\n        <h3>Invalid invitation.</h3>\n        <p>Sorry, we were unable to process your invitation.</p>\n        <p className='error'>{ errorMessage } </p>\n      </div>)   \n    } else {\n      return (<div>\n        <h3>Processing invitation...</h3> \n      </div>)\n    }\n  }\n\n  const inviteView = generateInviteView(invitation, (invitation) => {\n    if (invitation) {\n      console.log(`appending ${invitation.petName} to outstanding invites`);\n      const newInvites = [...invitations, invitation];\n      localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n      setInvitations(newInvites);\n    } \n  });\n\n  return (\n    <div>\n      <div className=\"controlBoard\">\n\n        <div className=\"box\">\n          <PhishingReport invitation={invitation}/>\n        </div>\n\n        <div className='box'>\n          <LazyConnect actionName=\"Check if a user is a phisher\">\n             <PhisherCheckButton/>\n          </LazyConnect>\n        </div>\n\n        { inviteView }\n\n        <div className='box'>\n          <h3>Outstanding Invitations</h3>\n          { invitations.map((_invitation, index) => {\n            return (\n              <div key={index}>\n                <span>{ _invitation.petName }</span>\n                <button onClick={async () => {\n                  const { signedDelegations } = _invitation.invitation;\n                  const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n                  const delegationHash = util.createSignedDelegationHash(signedDelegation);\n                  const intendedRevocation = {\n                    delegationHash,\n                  }\n                  const signedIntendedRevocation = util.signRevocation(intendedRevocation, invitation.key);\n\n                  const block = await registry.revokeDelegation(signedDelegation, signedIntendedRevocation);\n\n                  const newInvites = [...invitations];\n                  newInvites.splice(index, 1);\n                  localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n                  setInvitations(newInvites);\n                }}>Revoke</button>\n              </div>\n            )\n          })}\n        </div>\n\n        <div className='box'>\n          <h3>Endorse a benevolent entity (coming soon)</h3>\n        </div>\n\n        <div className='box'>\n          <h3>Review your invites and their reports. (Coming soon!)</h3>\n        </div>\n\n        <Landing />\n      </div>\n\n    </div>\n  )\n}\n\nfunction generateInviteView(invitation, addInvitation) {\n  const tier = invitation.signedDelegations.length;\n\n  if (tier < 4) {\n    return (\n      <div className='box'>\n        <p>You are a tier {invitation.signedDelegations.length} invitee. This means you can invite up to {4-tier} additional tiers of members.</p>\n        <button onClick={() => {\n          const petName = prompt('Who is this invitation for (for your personal use only, so you can view their reports and revoke the invitation)?');\n          const newInvitation = createInvitation(invitation);\n          const inviteLink = window.location.origin + '/#/members?invitation=' + encodeURIComponent(JSON.stringify(newInvitation));\n          navigator.clipboard.writeText(inviteLink).then(function() {\n            alert('Copied to clipboard. Paste it somewhere only the intended recipients can see or you can lose your membership.');\n            if (addInvitation) {\n              addInvitation({\n                petName,\n                invitation: newInvitation,\n              });\n            }\n          });\n        }}>Copy new invite link</button>\n      </div> \n    );\n  } else if (tier === 4) {\n    <div>\n      <p>You are a tier 4 member. That means you can't currently invite new members through this interface, but if this site becomes popular, we can add support for this later.</p>\n    </div> \n  }\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nfunction PhisherCheckButton (props) {\n  const { provider } = props;\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    console.log('phisher check button is creating registry with provider', provider);\n    createRegistry(provider)\n    .then((_registry) => {\n      console.log('registry got, setting');\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  console.log('we got a registry, rendering phisher check');\n  return <PhisherCheck checkPhisher={async (name) => {\n    console.log('checking if phisher', name);\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isPhisher(codedName);\n      console.log('result is ', result);\n      if (result) {\n        return `${name} is an accused phisher.`;\n      } else {\n        return `${name} is not a registered phisher.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\nimport Members from './Members';\n\n// Routes\nimport Landing from './Landing';\n\nexport default function QueryParamsRouter(props) {\n  const { provider } = props;\n  let query = useQuery();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Landing/>\n      </Route>\n      <Route path=\"/members/\">\n        <Members/>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import logo from './logo.svg';\nimport QueryParamsRoute from './QueryParamsRoute';\nimport \"antd/dist/antd.css\";\nimport { HashRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <h1>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          MobyMask</h1>\n        <p>\n          An alliance of good-hearted phish, aiming to eliminate phishers. \n        </p>\n      </header>\n\n      <Router>\n        <QueryParamsRoute/>\n      </Router>\n\n      <div className='footer'>\n        <p>Reporters are added on an invite-only basis.</p>\n        <p>Learn more about how our invite system works at <a href=\"https://github.com/danfinlay/delegatable-eth\">delegatable-eth</a>.</p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","const typedMessage = {\n  primaryType: 'Delegation',\n  domain: {\n    name: 'MobyMask',\n    version: '1',\n  },\n\n  entries: {\n    delegate: \"address\",\n    caveat: \"Caveat\",\n    authority: \"SignedDelegation\",\n  },\n\n  types: {\n    EIP712Domain: [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ],\n    Invocation: [\n      { name: 'transaction', type: 'Transaction' },\n      { name: 'authority', type: 'SignedDelegation[]' },\n    ],\n    Invocations: [\n      { name: 'batch', type: 'Invocation[]' },\n      { name: 'replayProtection', type: 'ReplayProtection' },\n    ],\n    SignedInvocation: [\n      { name: 'invocations', type: 'Invocations' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    Transaction: [\n      { name: 'to', type: 'address' },\n      { name: 'gasLimit', type: 'uint256' },\n      { name: 'data', type: 'bytes' },\n    ],\n    ReplayProtection: [\n      { name: 'nonce', type: 'uint' },\n      { name: 'queue', type: 'uint' },\n    ],\n    Delegation: [\n      { name: 'delegate', type: 'address' },\n      { name: 'authority', type: 'bytes32' },\n      { name: 'caveats', type: 'Caveat[]' },\n    ],\n    Caveat: [\n      { name: 'enforcer', type: 'address' },\n      { name: 'terms', type: 'bytes' },\n    ],\n    SignedDelegation: [\n      { name: 'delegation', type: 'Delegation' },\n      { name: 'signature', type: 'bytes' },\n    ],\n  }\n};\n\nmodule.exports = typedMessage;\n"],"sourceRoot":""}