{"version":3,"sources":["types.js","logo.svg","chainList.js","LazyConnect.jsx","createRegistry.js","TextInput.jsx","PhisherCheck.jsx","InstallExtension.jsx","linkForInvitation.js","copyInvitationLink.js","ReviewAndRevokeInvitations.jsx","contractInfo.js","reportPhishers.js","PhishingReport.jsx","reportMembers.js","MemberReport.jsx","MemberCheck.jsx","createInvitation.js","Members.jsx","QueryParamsRoute.jsx","App.jsx","index.jsx"],"names":["module","exports","primaryType","domain","name","version","entries","delegate","caveat","authority","types","EIP712Domain","type","Invocation","Invocations","SignedInvocation","Transaction","ReplayProtection","Delegation","Caveat","SignedDelegation","chainIds","LazyConnect","props","actionName","chainId","opts","needsAccountConnected","provider","setInjectedProvider","useState","accounts","setAccounts","userChainId","setUserChainId","loading","setLoading","MetaMaskOnboarding","isMetaMaskInstalled","window","ethereum","chainName","chainList","Number","useEffect","async","_accounts","request","method","length","err","console","log","getAccounts","then","catch","error","on","removeListener","getUserChainId","needsToSwitchChain","needsToConnectAccount","requiresAction","className","createChecklist","hasWallet","onClick","startOnboarding","children","childrenWithProps","React","Children","map","child","isValidElement","cloneElement","checklistOpts","switchAccountsItem","switchNetworkItem","params","toString","reason","setError","abi","require","address","createRegistry","readOnly","wallet","getSigner","toUse","registry","attachRegistry","signer","Registry","ethers","Contract","_registry","attach","deployed","TextInput","onComplete","placeholder","buttonLabel","value","setValue","onKeyPress","event","key","onChange","target","PhisherCheck","output","setOutput","checkPhisher","result","PhisherCheckButton","ethersProvider","providers","Web3Provider","setRegistry","codedName","toLowerCase","isPhisher","InstallExtension","disabled","linkForInvitation","invitation","location","origin","encodeURIComponent","JSON","stringify","copyInvitationLink","petName","Promise","resolve","inviteLink","navigator","clipboard","writeText","alert","generateUtil","util","verifyingContract","invitations","setInvitations","_invitation","index","message","signedDelegations","signedDelegation","intendedRevocation","delegationHash","createSignedDelegationHash","signedIntendedRevocation","signRevocation","revokeDelegation","newInvites","splice","localStorage","setItem","createMembership","reportPhishers","phishers","membership","contractInfo","invocations","all","_phisher","phisher","indexOf","slice","desiredTx","populateTransaction","claimIfPhisher","transaction","to","data","gasLimit","queue","Math","floor","random","signedInvocations","signInvocations","batch","replayProtection","nonce","invoke","config","setPhisher","setPhishers","loaded","setLoaded","rawStorage","getItem","storedPhishers","parse","includes","newPhishers","push","filter","p","SubmitBatchButton","clear","reportMembers","members","_member","member","claimIfMember","setMembers","storedMembers","newMembers","MemberCheck","checkMember","MemberCheckButton","isMember","signDelegation","sigUtil","TypedDataUtils","validateInvitation","Members","query","search","useLocation","useMemo","URLSearchParams","useQuery","loadingFromDisk","setLoadingFromDisk","errorMessage","setErrorMessage","setInvitation","history","useHistory","parsedInvitation","rawLoaded","document","cookie","get","checkInvitations","loadedInvitations","inviteView","addInvitation","tier","prompt","newInvitation","createInvitation","generateInviteView","PhishingReport","MemberReport","ReviewAndRevokeInvitations","QueryParamsRouter","exact","path","App","src","logo","alt","href","themes","dark","light","prevTheme","subgraphUri","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","getElementById"],"mappings":"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","file":"static/js/main.f6999bc4.chunk.js","sourcesContent":["const typedMessage = {\n  primaryType: 'Delegation',\n  domain: {\n    name: 'MobyMask',\n    version: '1',\n  },\n\n  entries: {\n    delegate: \"address\",\n    caveat: \"Caveat\",\n    authority: \"SignedDelegation\",\n  },\n\n  types: {\n    EIP712Domain: [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ],\n    Invocation: [\n      { name: 'transaction', type: 'Transaction' },\n      { name: 'authority', type: 'SignedDelegation[]' },\n    ],\n    Invocations: [\n      { name: 'batch', type: 'Invocation[]' },\n      { name: 'replayProtection', type: 'ReplayProtection' },\n    ],\n    SignedInvocation: [\n      { name: 'invocations', type: 'Invocations' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    Transaction: [\n      { name: 'to', type: 'address' },\n      { name: 'gasLimit', type: 'uint256' },\n      { name: 'data', type: 'bytes' },\n    ],\n    ReplayProtection: [\n      { name: 'nonce', type: 'uint' },\n      { name: 'queue', type: 'uint' },\n    ],\n    Delegation: [\n      { name: 'delegate', type: 'address' },\n      { name: 'authority', type: 'bytes32' },\n      { name: 'caveats', type: 'Caveat[]' },\n    ],\n    Caveat: [\n      { name: 'enforcer', type: 'address' },\n      { name: 'terms', type: 'bytes' },\n    ],\n    SignedDelegation: [\n      { name: 'delegation', type: 'Delegation' },\n      { name: 'signature', type: 'bytes' },\n    ],\n  }\n};\n\nmodule.exports = typedMessage;\n","export default __webpack_public_path__ + \"static/media/logo.06de1321.svg\";","const chainIds = {\n  0: \"kardia\",\n  1: \"ethereum\",\n  3: \"ropsten test\",\n  4: \"rinkeby test\",\n  5: \"goerli test\",\n  8: \"ubiq\",\n  10: \"optimism\",\n  19: \"songbird\",\n  20: \"elastos\",\n  25: \"cronos\",\n  30: \"rsk\",\n  40: \"telos\",\n  42: \"kovan test\",\n  52: \"csc\",\n  55: \"zyx\",\n  56: \"binance\",\n  57: \"syscoin\",\n  60: \"gochain\",\n  61: \"ethclassic\",\n  66: \"okexchain\",\n  70: \"hoo\",\n  82: \"meter\",\n  88: \"tomochain\",\n  100: \"xdai\",\n  106: \"velas\",\n  108: \"thundercore\",\n  122: \"fuse\",\n  128: \"heco\",\n  137: \"polygon\",\n  200: \"xdaiarb\",\n  246: \"energyweb\",\n  250: \"fantom\",\n  269: \"hpb\",\n  288: \"boba\",\n  321: \"kucoin\",\n  336: \"shiden\",\n  361: \"theta\",\n  534: \"candle\",\n  592: \"astar\",\n  820: \"callisto\",\n  888: \"wanchain\",\n  1088: \"metis\",\n  1284: \"moonbeam\",\n  1285: \"moonriver\",\n  2020: \"ronin\",\n  2612: \"ezchain\",\n  4689: \"iotex\",\n  5050: \"xlc\",\n  5551: \"nahmii\",\n  8217: \"klaytn\",\n  10000: \"smartbch\",\n  32659: \"fusion\",\n  42161: \"arbitrum\",\n  42220: \"celo\",\n  42262: \"oasis\",\n  43114: \"avalanche\",\n  71394: \"godwoken\",\n  333999: \"polis\",\n  1313161554: \"aurora\",\n  1666600000: \"harmony\",\n  11297108109: \"palm\",\n  836542336838601: \"curio\",\n};\n\nexport default chainIds;\n","import React, { useEffect, useState } from \"react\";\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport chainList from './chainList';\n\nexport default function LazyConnect (props) {\n  const { actionName, chainId } = props;\n  let { opts = {} } = props;\n  const { needsAccountConnected = true } = opts;\n  const [provider, setInjectedProvider] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [userChainId, setUserChainId] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  if (!provider && MetaMaskOnboarding.isMetaMaskInstalled()) { \n    setInjectedProvider(window.ethereum);\n  }\n\n  const chainName = chainId ? chainList[Number(chainId)] : null;\n\n  // Get accounts;\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    getAccounts()\n    .then(setAccounts)\n    .catch(console.error);\n\n    async function getAccounts() {\n      try {\n        const _accounts = await provider.request({ method: 'eth_accounts' });\n        if (_accounts.length > 0) {\n          setAccounts(_accounts);\n        }\n      } catch (err) {\n        console.log('Getting accounts failed!', err);\n      }\n    }\n\n    provider.on(\"accountsChanged\", setAccounts);\n\n    return () => {\n      provider.removeListener('accountsChanged', setAccounts);\n    }\n  }, []);\n\n  // Get current selected network:\n  useEffect(() => {\n    if (!provider || userChainId) {\n      return;\n    }\n    getUserChainId()\n    .then(setUserChainId)\n    .catch(console.error);\n\n    async function getUserChainId() {\n      const chainId = await provider.request({ method: 'eth_chainId' });\n      return chainId;\n    }\n\n    provider.on('chainChanged', setUserChainId);\n\n    return () => {\n      provider.removeListener('chainChanged', setUserChainId);\n    }\n  }, []);\n\n  const needsToSwitchChain = Number(userChainId) !== chainId;\n  const needsToConnectAccount = needsAccountConnected && (!accounts || accounts.length === 0);\n  const requiresAction = needsToSwitchChain || needsToConnectAccount;\n\n  if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\n    return (<div className=\"lazyConnect\">\n      { createChecklist({\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        provider,\n        needsToConnectAccount,\n        setLoading,\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n      <button onClick={() => {\n        const onboarding = new MetaMaskOnboarding();\n        onboarding.startOnboarding();\n        }}>Get MetaMask</button>\n    </div>);\n  }\n  \n  if (requiresAction) {\n    return <div className=\"lazyConnect\">\n      { createChecklist({\n        setLoading,\n        provider,\n        needsToConnectAccount,\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n    </div>\n  }\n\n  if (loading) {\n    return (<div className=\"lazyConnect\">Loading...</div>)\n  }\n\n  const { children } = props;\n\n  const childrenWithProps = React.Children.map(children, child => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { provider });\n    }\n    return child;\n  });  \n\n  return (<div className=\"lazyConnected\">{childrenWithProps}</div>)\n}\n\nfunction createChecklist (checklistOpts) {\n  const { chainId, userChainId, chainName, setAccounts, provider, setLoading,\n    needsToConnectAccount,\n    needsAccountConnected, actionName, hasWallet, accounts } = checklistOpts;\n  return (<div>\n    <p>You need a few things to {actionName}.</p>\n    <ol>\n      { hasWallet ?\n        <li>✅ Get a web3 compatible Wallet (like MetaMask)</li> :\n        <li>☐ Get a web3 compatible Wallet (like MetaMask)</li> }\n      { switchAccountsItem({ needsAccountConnected, needsToConnectAccount, setAccounts, provider, setLoading, accounts, hasWallet }) }\n      { switchNetworkItem({ chainId, userChainId, chainName, setAccounts, provider, setLoading, hasWallet })} \n    </ol>\n   </div>);\n}\n\nfunction switchAccountsItem (opts) {\n  const { needsToConnectAccount, setAccounts, accounts, provider, hasWallet } = opts;\n\n  if (!needsToConnectAccount) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>☐ Connect an account</li>;\n  }\n\n  if (typeof accounts !== 'undefined' && accounts.length > 0) {\n    return null;\n  }\n\n  return <li>☐ <button onClick={async () => {\n      const _accounts = await provider.request({ method: 'eth_requestAccounts' });\n      setAccounts(_accounts);\n    }}>Connect an account</button>\n  </li>\n}\n\nfunction switchNetworkItem (opts) {\n  const { chainId, userChainId, chainName, provider, setLoading, hasWallet } = opts;\n  const needsToSwitchChain =  !!chainId && (Number(userChainId) !== chainId);\n\n  if (!needsToSwitchChain) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>Switch to the {chainName} network</li>;\n  }\n\n  return <li>\n    <button onClick={async () => {\n      provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x' + chainId.toString(16) }],\n      })\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((reason) => {\n        setLoading(false);\n        setError(reason);\n      });\n      setLoading(true);\n    }}>Switch to the { chainName } network</button>\n  </li>\n}\n","import { ethers } from \"ethers\";\nconst { abi } = require('./artifacts');\nconst { address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function createRegistry (provider, readOnly = false) {\n  const wallet = !readOnly && provider.getSigner();\n  const toUse = readOnly ? provider : wallet;\n  const registry = await attachRegistry(toUse);\n  return registry;\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\n\nexport default function TextInput (props) {\n  const { onComplete, placeholder, buttonLabel } = props;\n  const [ value, setValue ] = useState('');\n      \n  return <div>\n    <input type=\"text\" value={value} placeholder={placeholder} onKeyPress={(event) => {\n      if (event.key === 'Enter') {\n        onComplete(value);\n        setValue('');\n      }\n    }} onChange={(event) => {\n      setValue(event.target.value);\n    }}/>\n    \n    <button onClick={() => { onComplete(value) }}>{ buttonLabel }</button>\n  </div>\n} \n","import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport createRegistry from './createRegistry';\nimport TextInput from './TextInput';\n\nexport default function PhisherCheck (props) {\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Phisher Status</h3>\n      <TextInput placeholder=\"Enter a Twitter name\" buttonLabel=\"Check\"\n      onComplete={(name) => {\n        props.checkPhisher(name)\n        .then((result) => {\n          setOutput(result);\n        })\n        .catch(console.error);\n      }}/>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}\n\nexport function PhisherCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider, true)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return <PhisherCheck checkPhisher={async (name) => {\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isPhisher(codedName);\n      if (result) {\n        return `${name} is an accused phisher.`;\n      } else {\n        return `${name} is not a registered phisher.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}","import React from 'react';\n\nfunction InstallExtension() {\n  return (\n    <div className='box'>\n      <p>\n        Get warned about phishers on the web:\n      </p>\n      <button className='installButton' disabled>Install the Web Extension (coming soon!)</button>\n    </div>\n  );\n}\n\nexport default InstallExtension;\n","export default function linkForInvitation (invitation) {\n  return window.location.origin + '/#/members?invitation=' + encodeURIComponent(JSON.stringify(invitation));\n}","import linkForInvitation from \"./linkForInvitation\";\n\nexport default function copyInvitationLink (invitation, petName) {\n  return new Promise((resolve) => {\n    const inviteLink = linkForInvitation(invitation);\n    navigator.clipboard.writeText(inviteLink).then(function() {\n      alert('Your invite link for ' + petName + ' has been copied to your clipboard. Paste it somewhere only the intended recipients can see or you can lose your membership: \\n\\n' + inviteLink);\n      resolve();\n    })\n    .catch(function(err) {\n      alert('Had trouble writing to your clipboard. Here is your invite link (it may be copied). Paste it somewhere only the intended recipients can see or you can lose your membership: \\n\\n' + inviteLink);\n      resolve();\n    });\n  });\n}\n","import { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { chainId, address, name } = require('./config.json');\nimport createRegistry from './createRegistry';\nimport linkForInvitation from './linkForInvitation';\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\nimport copyInvitationLink from './copyInvitationLink';\n\nexport default function (props) {\n  const { provider, invitations, invitation, setInvitations } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return (<details className='box'>\n    <summary>Outstanding Invitations ({invitations.length})</summary>\n    { invitations.map((_invitation, index) => {\n      return (\n        <div key={index}>\n          <span>{ _invitation.petName }</span>\n          <input type=\"text\" readOnly value={linkForInvitation(_invitation.invitation)}></input>\n          <button onClick={() => {\n            copyInvitationLink(_invitation.invitation, _invitation.petName)\n            .catch((err) => alert(err.message));\n          }}>Copy</button>\n          <button onClick={async () => {\n            const { signedDelegations } = _invitation.invitation;\n            const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n            const delegationHash = util.createSignedDelegationHash(signedDelegation);\n            const intendedRevocation = {\n              delegationHash,\n            }\n            const signedIntendedRevocation = util.signRevocation(intendedRevocation, invitation.key);\n\n            await registry.revokeDelegation(signedDelegation, signedIntendedRevocation);\n\n            const newInvites = [...invitations];\n            newInvites.splice(index, 1);\n            localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n            setInvitations(newInvites);\n          }}>Revoke</button>\n        </div>\n      )\n    })}\n  </details>);\n\n}","const { chainId, address, name } = require('./config.json');\n\nexport default {\n  chainId,\n  name,\n  verifyingContract: address,\n}\n","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { createMembership } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nimport contractInfo from \"./contractInfo\";\nconst CONTRACT_NAME = name;\n\nexport default async function reportPhishers (phishers, provider, invitation) {\n  const { key, signedDelegations } = invitation;\n  const membership = createMembership({\n    contractInfo,\n    invitation,\n  });\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(phishers.map(async (phisher) => {\n    const _phisher = phisher.indexOf('@') === '0' ? phisher.slice(1) : phisher;\n    const desiredTx = await registry.populateTransaction.claimIfPhisher(`TWT:${_phisher.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n      authority: signedDelegations,\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = membership.signInvocations({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  });\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportPhishers from './reportPhishers';\nimport LazyConnect from './LazyConnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json')\nconst { chainId } = config;\nimport TextInput from './TextInput';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ phisher, setPhisher ] = useState();\n  const [ phishers, setPhishers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingPhishers');\n      let storedPhishers = JSON.parse(rawStorage) || [];\n      setPhishers(storedPhishers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  return (\n    <div className='box'>\n      <h3>Report a phishing attempt</h3>\n      <TextInput placeholder=\"@phisher_person\" buttonLabel=\"Report\"\n        onComplete={(phisher) => {\n        const _phisher = phisher.indexOf('@') === 0 ? phisher.slice(1) : phisher;\n        if (phishers.includes(_phisher)) return;\n        const newPhishers = [...phishers, _phisher];\n        console.log('new phishers is ', newPhishers);\n        localStorage.setItem('pendingPhishers', JSON.stringify(newPhishers));\n        setPhishers(newPhishers);\n      }}/>\n\n      <button onClick={() => {\n        if (phisher) {\n          phishers.push(phisher);\n          localStorage.setItem('pendingPhishers', JSON.stringify(phishers));\n          setPhisher('');\n        } \n      }}>Report twitter phisher</button>\n\n      <div className='phishers'>\n        { phishers && phishers.length > 0 ? \n        <div>\n          <p>Pending phishing reports:</p>\n          <ol>\n            {phishers.map((phisher, index) => {\n              return (<li key={index}>{phisher} <button onClick={() => {\n                const newPhishers = phishers.filter((p) => p !== phisher);\n                localStorage.setItem('pendingPhishers', JSON.stringify(newPhishers));\n                setPhishers(newPhishers);\n              }}>Remove</button></li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit reports directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton phishers={phishers} invitation={invitation} setPhishers={setPhishers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, phishers, invitation, setPhishers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  console.log('trying to submit batch with', ethersProvider);\n  return (<div>\n    <button onClick={async () => {\n      try {\n        const block = await reportPhishers(phishers, ethersProvider, invitation);\n        localStorage.clear();\n        setPhishers([]);\n      } catch (err) {\n        alert(`Error: ${err}`);\n      }\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import { ethers } from \"ethers\";\nimport contractInfo from \"./contractInfo\";\nconst types = require('./types')\nconst { createMembership } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function reportMembers (members, provider, invitation) {\n  const membership = createMembership({\n    contractInfo,\n    invitation,\n  });\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(members.map(async (member) => {\n    const _member = member.indexOf('@') === '0' ? member.slice(1) : member;\n    const desiredTx = await registry.populateTransaction.claimIfMember(`TWT:${_member.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = membership.signInvocations({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  });\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportMembers from './reportMembers';\nimport LazyConnect from './LazyConnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json')\nconst { chainId } = config;\nimport TextInput from './TextInput';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ members, setMembers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(function loadMembersFromDisk () {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingMembers');\n      let storedMembers = JSON.parse(rawStorage) || [];\n      setMembers(storedMembers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  return (\n    <div className='box'>\n      <h3>Endorse a member</h3>\n      <TextInput placeholder=\"@member_person\" buttonLabel=\"Endorse\"\n        onComplete={(member) => {\n          const _member = member.indexOf('@') === 0 ? member.slice(1) : member;\n          if (members.includes(_member)) return;\n          const newMembers = [...members, _member];\n          setMembers(newMembers);\n          localStorage.setItem('pendingMembers', JSON.stringify(newMembers));\n      }}/>\n\n      <div className='members'>\n        { members && members.length > 0 ? \n        <div>\n          <p>Pending member nominations:</p>\n          <ol>\n            {members.map((member, index) => {\n              return (<li key={index}>{member} <button onClick={() => {\n                const newMembers = members.filter((p) => p !== member);\n                localStorage.setItem('pendingMembers', JSON.stringify(newMembers));\n                setMembers(newMembers);\n              }}>Remove</button></li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit endorsements directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton members={members} invitation={invitation} setMembers={setMembers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, members, invitation, setMembers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  return (<div>\n    <button onClick={async () => {\n      try {\n        const block = await reportMembers(members, ethersProvider, invitation);\n        localStorage.clear();\n        setMembers([]);\n     } catch (err) {\n        console.error(err);\n        alert(`Error: ${err}`);\n      }\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport createRegistry from './createRegistry';\nimport TextInput from './TextInput';\n\nexport default function MemberCheck (props) {\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Member Status</h3>\n      <TextInput placeholder=\"Enter a Twitter name\" buttonLabel=\"Check\"\n      onComplete={(name) => {\n        props.checkMember(name)\n        .then((result) => {\n          setOutput(result);\n        })\n        .catch(console.error);\n      }}/>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}\n\nexport function MemberCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider, true)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return <MemberCheck checkMember={async (name) => {\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isMember(codedName);\n      if (result) {\n        return `${name} is an endorsed moby.`;\n      } else {\n        return `${name} has not been endorsed.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}","const { signDelegation } = require('eth-delegatable-utils');\nimport { ethers } from \"ethers\";\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst sigUtil = require('eth-sig-util');\nconst { TypedDataUtils } = sigUtil;\nconst types = require('./types');\n\nexport default function createInvitation (invitation) {\n  const { signedDelegations, key } = invitation;\n  const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n  const delegate = ethers.Wallet.createRandom();\n  console.log('types', types);\n  const delegationHash = TypedDataUtils.hashStruct('SignedDelegation', signedDelegation, types.types, true);\n  const hexHash = '0x' + delegationHash.toString('hex');\n\n  const delegation = {\n    delegate: delegate.address,\n    authority: hexHash,\n\n    // Revokable by default:\n    caveats: [{\n      enforcer: address,\n      terms: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    }]\n  }\n\n  const newSignedDelegation = signDelegation(delegation, key, {\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  });\n  const newInvite = {\n    signedDelegations: [...signedDelegations, newSignedDelegation],\n    key: delegate.privateKey,\n  }\n  console.log({ newInvite });\n  return newInvite;\n}\n","import React, { useEffect, useState } from 'react';\nimport InstallExtension from \"./InstallExtension\"\nimport ReviewAndRevokeInvitations from './ReviewAndRevokeInvitations';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nconst { validateInvitation } = require('eth-delegatable-utils');\nimport contractInfo from './contractInfo';\nconst { chainId } = contractInfo;\n\nimport PhishingReport from './PhishingReport';\nimport MemberReport from './MemberReport';\nimport { PhisherCheckButton } from './PhisherCheck';\nimport { MemberCheckButton } from './MemberCheck';\nimport createInvitation from './createInvitation';\nconst { createMembership } = require('eth-delegatable-utils');\nimport LazyConnect from './LazyConnect';\nimport copyInvitationLink from './copyInvitationLink';\n\nexport default function Members (props) {\n  const query = useQuery();\n\n  const [ loaded, setLoaded ] = useState(false); // For loading invitations\n  const [ loadingFromDisk, setLoadingFromDisk ] = useState(false);\n  const [ errorMessage, setErrorMessage ] = useState(null);\n\n  const [ invitation, setInvitation ] = useState(null); // Own invitation\n  const [ invitations, setInvitations ] = useState([]); // Outbound invitations\n  const history = useHistory();\n\n  \n  // Load user's own invitation from disk or query string:\n  useEffect(() => {\n    async function checkInvitations () {\n      if (!loadingFromDisk) {\n        setLoadingFromDisk(true);\n\n        if (!invitation) {\n          try {\n            let parsedInvitation;\n            let rawLoaded = document.cookie;\n            if (rawLoaded) {\n              parsedInvitation = JSON.parse(rawLoaded);\n            }\n            if (!parsedInvitation || parsedInvitation === 'null') {\n              parsedInvitation = JSON.parse(query.get(\"invitation\"));\n              validateInvitation({\n                contractInfo,\n                invitation: parsedInvitation,\n              });\n              document.cookie = query.get(\"invitation\");\n            }\n\n            history.push('/members');\n            validateInvitation({\n              contractInfo,\n              invitation: parsedInvitation,\n            });\n            if (parsedInvitation) {\n              setInvitation(parsedInvitation);\n            }\n            setLoadingFromDisk(false);\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(err.message);\n          }\n        }\n      }\n    }\n\n    checkInvitations().catch(console.error);\n  });\n\n  // Load user's outstanding invitations from disk:\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('outstandingInvitations');\n      let loadedInvitations = JSON.parse(rawStorage) || [];\n      setInvitations(loadedInvitations);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  if (!invitation) {\n    if (errorMessage) {\n      return (<div>\n        <h3>Invalid invitation.</h3>\n        <p>Sorry, we were unable to process your invitation.</p>\n        <p className='error'>{ errorMessage } </p>\n      </div>)   \n    } else {\n      return (<div>\n        <h3>Processing invitation...</h3> \n      </div>)\n    }\n  }\n\n  const inviteView = generateInviteView(invitation, (invitation) => {\n    console.log('adding invitation', invitation);\n    if (invitation) {\n      const newInvites = [...invitations, invitation];\n      localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n      setInvitations(newInvites);\n    } \n  });\n\n  return (\n    <div>\n      <div className=\"controlBoard\">\n\n        <div className=\"phisherBox\">\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is a phisher\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <PhisherCheckButton/>\n            </LazyConnect>\n          </div>\n\n          <div className=\"box\">\n            <PhishingReport invitation={invitation}/>\n          </div>\n        </div>\n\n        <div className=\"memberBox\">\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is endorsed\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <MemberCheckButton/>\n            </LazyConnect>\n          </div>\n\n          <div className=\"box\">\n            <MemberReport invitation={invitation}/>\n          </div>\n        </div>\n\n        <div className=\"inviteBox\">\n          { inviteView }\n\n          <LazyConnect actionName=\"revoke outstanding invitations\" chainId={chainId}>\n            <ReviewAndRevokeInvitations\n              invitations={invitations}\n              invitation={invitation}\n              setInvitations={setInvitations}/>\n          </LazyConnect>\n\n        </div>\n\n        <InstallExtension />\n      </div>\n\n    </div>\n  )\n}\n\nfunction generateInviteView(invitation, addInvitation) {\n  const tier = invitation.signedDelegations.length;\n\n  const membership = createMembership({\n    invitation,\n    contractInfo,\n  })\n\n  if (tier < 4) {\n    return (\n      <div className='box'>\n        <p>You are a tier {invitation.signedDelegations.length} invitee. This means you can invite up to {4-tier} additional tiers of members.</p>\n        <p>Invite people who you think will respect the system, and only report definite impostors and frauds, and only endorse people who are neither.</p>\n        <p>If you invite an abusive person and don't revoke their activity quickly, you may have your membership revoked.</p>\n        <button onClick={() => {\n          const petName = prompt('Who is this invitation for (for your personal use only, so you can view their reports and revoke the invitation)?');\n          const newInvitation = membership.createInvitation();\n          copyInvitationLink(newInvitation, petName)\n          .then(() => {\n            if (addInvitation) {\n              addInvitation({\n                petName,\n                invitation: newInvitation,\n              });\n            }\n          })\n          .catch(() => {\n            addInvitation({\n              petName,\n              invitation: newInvitation,\n            });\n          })\n        }}>Create new invite link</button>\n      </div> \n    );\n  } else if (tier === 4) {\n    <div>\n      <p>You are a tier 4 member. That means you can't currently invite new members through this interface, but if this site becomes popular, we can add support for this later.</p>\n    </div> \n  }\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\nimport LazyConnect from './LazyConnect';\nimport { PhisherCheckButton } from './PhisherCheck';\nconst { chainId } = require('./config.json');\n\n// Routes\nimport InstallExtension from './InstallExtension';\nimport Members from './Members';\nimport { MemberCheckButton } from './MemberCheck';\n\nexport default function QueryParamsRouter(props) {\n  const { provider } = props;\n  let query = useQuery();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div className='box'>\n          <LazyConnect actionName=\"check if a user is a phisher or member\" chainId={chainId}\n            opts={{ needsAccountConnected: false }}>\n            <PhisherCheckButton/>\n            <MemberCheckButton/>\n          </LazyConnect>\n        </div>\n\n        <InstallExtension/>\n      </Route>\n      <Route path=\"/members/\">\n        <Members/>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import logo from './logo.svg';\nimport QueryParamsRoute from './QueryParamsRoute';\nimport \"antd/dist/antd.css\";\nimport { HashRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <h1>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          MobyMask</h1>\n        <p>\n          An alliance of good-hearted phish, aiming to eliminate phishers. \n        </p>\n      </header>\n\n      <Router>\n        <QueryParamsRoute/>\n      </Router>\n\n      <div className='footer'>\n        <p>Reporters are added on an invite-only basis.</p>\n        <p>Learn more about how our invite system works at <a href=\"https://github.com/danfinlay/delegatable-eth\">delegatable-eth</a>.</p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}