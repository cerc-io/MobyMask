{"version":3,"sources":["createTypedMessage.js","logo.svg","chainList.js","LazyConnect.jsx","createRegistry.js","TextInput.jsx","PhisherCheck.jsx","InstallExtension.jsx","copyInvitationLink.js","ReviewAndRevokeInvitations.jsx","reportPhishers.js","PhishingReport.jsx","reportMembers.js","MemberReport.jsx","MemberCheck.jsx","validateInvitation.js","createInvitation.js","Members.jsx","QueryParamsRoute.jsx","App.jsx","index.jsx","types.js"],"names":["types","require","module","exports","yourContract","message","primaryType","CONTRACT_NAME","_chainId","chainId","deployTransaction","console","log","data","domain","name","version","verifyingContract","address","chainIds","LazyConnect","props","actionName","opts","needsAccountConnected","useState","provider","setInjectedProvider","accounts","setAccounts","userChainId","setUserChainId","loading","setLoading","MetaMaskOnboarding","isMetaMaskInstalled","window","ethereum","chainName","chainList","Number","useEffect","getAccounts","then","catch","error","on","removeListener","a","request","method","_accounts","getUserChainId","needsToSwitchChain","needsToConnectAccount","length","requiresAction","className","createChecklist","hasWallet","onClick","startOnboarding","children","childrenWithProps","React","Children","map","child","isValidElement","cloneElement","checklistOpts","switchAccountsItem","switchNetworkItem","params","toString","reason","setError","abi","createRegistry","readOnly","wallet","getSigner","toUse","attachRegistry","registry","signer","Registry","ethers","Contract","attach","_registry","deployed","TextInput","onComplete","placeholder","buttonLabel","value","setValue","type","onKeyPress","event","key","onChange","target","PhisherCheck","output","setOutput","checkPhisher","result","PhisherCheckButton","ethersProvider","providers","Web3Provider","setRegistry","codedName","toLowerCase","isPhisher","InstallExtension","disabled","copyInvitationLink","invitation","petName","Promise","resolve","reject","inviteLink","location","origin","encodeURIComponent","JSON","stringify","navigator","clipboard","writeText","alert","err","generateUtil","util","invitations","setInvitations","_invitation","index","signedDelegations","signedDelegation","delegationHash","createSignedDelegationHash","intendedRevocation","signedIntendedRevocation","signRevocation","revokeDelegation","newInvites","splice","localStorage","setItem","reportPhishers","phishers","all","phisher","_phisher","indexOf","slice","populateTransaction","claimIfPhisher","desiredTx","invocation","transaction","to","gasLimit","authority","invocations","queue","Math","floor","random","signedInvocations","signInvocation","batch","replayProtection","nonce","invoke","setPhisher","setPhishers","loaded","setLoaded","rawStorage","getItem","storedPhishers","parse","newPhishers","push","filter","p","SubmitBatchButton","clear","reportMembers","members","member","_member","claimIfMember","setMembers","storedMembers","newMembers","MemberCheck","checkMember","MemberCheckButton","isMember","recoverDelegationSigner","validateInvitation","Error","authHash","intendedSender","Wallet","canGrant","d","delegationSigner","delegation","delegate","signDelegation","TypedDataUtils","Members","query","search","useLocation","useMemo","URLSearchParams","useQuery","setInvitation","errorMessage","setErrorMessage","history","useHistory","rawLoaded","document","cookie","parsedInvitation","get","checkInvitations","loadedInvitations","inviteView","addInvitation","tier","prompt","newInvitation","createRandom","hexHash","hashStruct","caveats","enforcer","terms","newSignedDelegation","newInvite","privateKey","createInvitation","generateInviteView","PhishingReport","MemberReport","ReviewAndRevokeInvitations","QueryParamsRouter","exact","path","App","src","logo","alt","href","themes","dark","process","light","prevTheme","subgraphUri","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","getElementById","entries","caveat","EIP712Domain","Invocation","Invocations","SignedInvocation","Transaction","ReplayProtection","Delegation","Caveat","SignedDelegation"],"mappings":"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","file":"static/js/main.d6153a08.chunk.js","sourcesContent":["const { types } = require('./types');\n\nmodule.exports = function createTypedMessage (yourContract, message, primaryType, CONTRACT_NAME, _chainId) {\n  const chainId = yourContract?.deployTransaction?.chainId || _chainId;\n  console.log('creating message for contract', yourContract);\n  return { data: {\n    types,\n    primaryType,\n    domain: {\n      name: CONTRACT_NAME,\n      version: '1',\n      chainId,\n      verifyingContract: yourContract.address,\n    },\n    message,\n  }};\n}\n","export default __webpack_public_path__ + \"static/media/logo.06de1321.svg\";","const chainIds = {\n  0: \"kardia\",\n  1: \"ethereum\",\n  3: \"ropsten test\",\n  4: \"rinkeby test\",\n  5: \"goerli test\",\n  8: \"ubiq\",\n  10: \"optimism\",\n  19: \"songbird\",\n  20: \"elastos\",\n  25: \"cronos\",\n  30: \"rsk\",\n  40: \"telos\",\n  42: \"kovan test\",\n  52: \"csc\",\n  55: \"zyx\",\n  56: \"binance\",\n  57: \"syscoin\",\n  60: \"gochain\",\n  61: \"ethclassic\",\n  66: \"okexchain\",\n  70: \"hoo\",\n  82: \"meter\",\n  88: \"tomochain\",\n  100: \"xdai\",\n  106: \"velas\",\n  108: \"thundercore\",\n  122: \"fuse\",\n  128: \"heco\",\n  137: \"polygon\",\n  200: \"xdaiarb\",\n  246: \"energyweb\",\n  250: \"fantom\",\n  269: \"hpb\",\n  288: \"boba\",\n  321: \"kucoin\",\n  336: \"shiden\",\n  361: \"theta\",\n  534: \"candle\",\n  592: \"astar\",\n  820: \"callisto\",\n  888: \"wanchain\",\n  1088: \"metis\",\n  1284: \"moonbeam\",\n  1285: \"moonriver\",\n  2020: \"ronin\",\n  2612: \"ezchain\",\n  4689: \"iotex\",\n  5050: \"xlc\",\n  5551: \"nahmii\",\n  8217: \"klaytn\",\n  10000: \"smartbch\",\n  32659: \"fusion\",\n  42161: \"arbitrum\",\n  42220: \"celo\",\n  42262: \"oasis\",\n  43114: \"avalanche\",\n  71394: \"godwoken\",\n  333999: \"polis\",\n  1313161554: \"aurora\",\n  1666600000: \"harmony\",\n  11297108109: \"palm\",\n  836542336838601: \"curio\",\n};\n\nexport default chainIds;\n","import React, { useEffect, useState } from \"react\";\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport chainList from './chainList';\n\nexport default function LazyConnect (props) {\n  const { actionName, chainId } = props;\n  let { opts = {} } = props;\n  const { needsAccountConnected = true } = opts;\n  const [provider, setInjectedProvider] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [userChainId, setUserChainId] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  if (!provider && MetaMaskOnboarding.isMetaMaskInstalled()) { \n    setInjectedProvider(window.ethereum);\n  }\n\n  const chainName = chainId ? chainList[Number(chainId)] : null;\n\n  // Get accounts;\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    getAccounts()\n    .then(setAccounts)\n    .catch(console.error);\n\n    async function getAccounts() {\n      try {\n        const _accounts = await provider.request({ method: 'eth_accounts' });\n        setAccounts(_accounts);\n      } catch (err) {\n        console.log('Getting accounts failed!', err);\n      }\n    }\n\n    provider.on(\"accountsChanged\", setAccounts);\n\n    return () => {\n      provider.removeListener('accountsChanged', setAccounts);\n    }\n  }, []);\n\n  // Get current selected network:\n  useEffect(() => {\n    if (!provider || userChainId) {\n      return;\n    }\n    getUserChainId()\n    .then(setUserChainId)\n    .catch(console.error);\n\n    async function getUserChainId() {\n      const chainId = await provider.request({ method: 'eth_chainId' });\n      return chainId;\n    }\n\n    provider.on('chainChanged', setUserChainId);\n\n    return () => {\n      provider.removeListener('chainChanged', setUserChainId);\n    }\n  }, []);\n\n  const needsToSwitchChain = Number(userChainId) !== chainId;\n  const needsToConnectAccount = needsAccountConnected && (!accounts || accounts.length === 0);\n  const requiresAction = needsToSwitchChain || needsToConnectAccount;\n\n  if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\n    return (<div className=\"lazyConnect\">\n      { createChecklist({\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        provider,\n        needsToConnectAccount,\n        setLoading,\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n      <button onClick={() => {\n        const onboarding = new MetaMaskOnboarding();\n        onboarding.startOnboarding();\n        }}>Get MetaMask</button>\n    </div>);\n  }\n  \n  if (requiresAction) {\n    return <div className=\"lazyConnect\">\n      { createChecklist({\n        setLoading,\n        provider,\n        needsToConnectAccount,\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n    </div>\n  }\n\n  if (loading) {\n    return (<div className=\"lazyConnect\">Loading...</div>)\n  }\n\n  const { children } = props;\n\n  const childrenWithProps = React.Children.map(children, child => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { provider });\n    }\n    return child;\n  });  \n\n  return (<div className=\"lazyConnected\">{childrenWithProps}</div>)\n}\n\nfunction createChecklist (checklistOpts) {\n  const { chainId, userChainId, chainName, setAccounts, provider, setLoading,\n    needsToConnectAccount,\n    needsAccountConnected, actionName, hasWallet, accounts } = checklistOpts;\n  return (<div>\n    <p>You need a few things to {actionName}.</p>\n    <ol>\n      { hasWallet ?\n        <li>✅ Get a web3 compatible Wallet (like MetaMask)</li> :\n        <li>☐ Get a web3 compatible Wallet (like MetaMask)</li> }\n      { switchAccountsItem({ needsAccountConnected, needsToConnectAccount, setAccounts, provider, setLoading, accounts, hasWallet }) }\n      { switchNetworkItem({ chainId, userChainId, chainName, setAccounts, provider, setLoading, hasWallet })} \n    </ol>\n   </div>);\n}\n\nfunction switchAccountsItem (opts) {\n  const { needsToConnectAccount, setAccounts, provider, hasWallet } = opts;\n\n  if (!needsToConnectAccount) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>☐ Connect an account</li>;\n  }\n\n  return <li>☐ <button onClick={async () => {\n      const _accounts = await provider.request({ method: 'eth_requestAccounts' });\n      setAccounts(_accounts);\n    }}>Connect an account</button>\n  </li>\n}\n\nfunction switchNetworkItem (opts) {\n  const { chainId, userChainId, chainName, provider, setLoading, hasWallet } = opts;\n  const needsToSwitchChain =  !!chainId && (Number(userChainId) !== chainId);\n\n  if (!needsToSwitchChain) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>Switch to the {chainName} network</li>;\n  }\n\n  return <li>\n    <button onClick={async () => {\n      provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x' + chainId.toString(16) }],\n      })\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((reason) => {\n        setLoading(false);\n        setError(reason);\n      });\n      setLoading(true);\n    }}>Switch to the { chainName } network</button>\n  </li>\n}\n","import { ethers } from \"ethers\";\nconst { abi } = require('./artifacts');\nconst { address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function createRegistry (provider, readOnly = false) {\n  const wallet = !readOnly && provider.getSigner();\n  const toUse = readOnly ? provider : wallet;\n  const registry = await attachRegistry(toUse);\n  return registry;\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\n\nexport default function TextInput (props) {\n  const { onComplete, placeholder, buttonLabel } = props;\n  const [ value, setValue ] = useState('');\n      \n  return <div>\n    <input type=\"text\" value={value} placeholder={placeholder} onKeyPress={(event) => {\n      if (event.key === 'Enter') {\n        onComplete(value);\n        setValue('');\n      }\n    }} onChange={(event) => {\n      setValue(event.target.value);\n    }}/>\n    \n    <button onClick={() => { onComplete(value) }}>{ buttonLabel }</button>\n  </div>\n} \n","import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport createRegistry from './createRegistry';\nimport TextInput from './TextInput';\n\nexport default function PhisherCheck (props) {\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Phisher Status</h3>\n      <TextInput placeholder=\"Enter a Twitter name\" buttonLabel=\"Check\"\n      onComplete={(name) => {\n        props.checkPhisher(name)\n        .then((result) => {\n          setOutput(result);\n        })\n        .catch(console.error);\n      }}/>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}\n\nexport function PhisherCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider, true)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return <PhisherCheck checkPhisher={async (name) => {\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isPhisher(codedName);\n      if (result) {\n        return `${name} is an accused phisher.`;\n      } else {\n        return `${name} is not a registered phisher.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}","import React from 'react';\n\nfunction InstallExtension() {\n  return (\n    <div className='box'>\n      <p>\n        Get warned about phishers on the web:\n      </p>\n      <button className='installButton' disabled>Install the Web Extension (coming soon!)</button>\n    </div>\n  );\n}\n\nexport default InstallExtension;\n","export default function copyInvitationLink (invitation, petName) {\n  return new Promise((resolve, reject) => {\n    const inviteLink = window.location.origin + '/#/members?invitation=' + encodeURIComponent(JSON.stringify(invitation));\n    navigator.clipboard.writeText(inviteLink).then(function() {\n      alert('Your invite link has been copied to your clipboard. Paste it somewhere only the intended recipients can see or you can lose your membership: \\n\\n' + inviteLink);\n      resolve();\n    })\n    .catch(function(err) {\n      alert('Had trouble writing to your clipboard. Here is your invite link (it may be copied). Paste it somewhere only the intended recipients can see or you can lose your membership: \\n\\n' + inviteLink);\n    });\n  });\n}\n","import { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { chainId, address, name } = require('./config.json');\nimport createRegistry from './createRegistry';\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\nimport copyInvitationLink from './copyInvitationLink';\n\nexport default function (props) {\n  const { provider, invitations, invitation, setInvitations } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return (<details className='box'>\n    <summary>Outstanding Invitations ({invitations.length})</summary>\n    { invitations.map((_invitation, index) => {\n      return (\n        <div key={index}>\n          <span>{ _invitation.petName }</span>\n          <button onClick={() => {\n            copyInvitationLink(_invitation.invitation, _invitation.petName)\n            .catch((err) => alert(err.message));\n          }}>Re-Copy</button>\n          <button onClick={async () => {\n            const { signedDelegations } = _invitation.invitation;\n            const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n            const delegationHash = util.createSignedDelegationHash(signedDelegation);\n            const intendedRevocation = {\n              delegationHash,\n            }\n            const signedIntendedRevocation = util.signRevocation(intendedRevocation, invitation.key);\n\n            const block = await registry.revokeDelegation(signedDelegation, signedIntendedRevocation);\n\n            const newInvites = [...invitations];\n            newInvites.splice(index, 1);\n            localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n            setInvitations(newInvites);\n          }}>Revoke</button>\n        </div>\n      )\n    })}\n  </details>);\n\n}","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function reportPhishers (phishers, provider, invitation) {\n  const { key, signedDelegations } = invitation;\n  const util = generateUtil({\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  })\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(phishers.map(async (phisher) => {\n    const _phisher = phisher.indexOf('@') === '0' ? phisher.slice(1) : phisher;\n    const desiredTx = await registry.populateTransaction.claimIfPhisher(`TWT:${_phisher.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n      authority: signedDelegations,\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = util.signInvocation({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  }, key);\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportPhishers from './reportPhishers';\nimport LazyConnect from './LazyConnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json')\nconst { chainId } = config;\nimport TextInput from './TextInput';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ phisher, setPhisher ] = useState();\n  const [ phishers, setPhishers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingPhishers');\n      let storedPhishers = JSON.parse(rawStorage) || [];\n      setPhishers(storedPhishers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  return (\n    <div className='box'>\n      <h3>Report a phishing attempt</h3>\n      <TextInput placeholder=\"@phisher_person\" buttonLabel=\"Report\"\n        onComplete={(phisher) => {\n        const newPhishers = [...phishers, phisher];\n        localStorage.setItem('pendingPhishers', JSON.stringify(newPhishers));\n        setPhishers(newPhishers);\n      }}/>\n\n      <button onClick={() => {\n        if (phisher) {\n          phishers.push(phisher);\n          localStorage.setItem('pendingPhishers', JSON.stringify(phishers));\n          setPhisher('');\n        } \n      }}>Report twitter phisher</button>\n\n      <div className='phishers'>\n        { phishers && phishers.length > 0 ? \n        <div>\n          <p>Pending phishing reports:</p>\n          <ol>\n            {phishers.map((phisher, index) => {\n              return (<li key={index}>{phisher} <button onClick={() => {\n                const newPhishers = phishers.filter((p) => p !== phisher);\n                localStorage.setItem('pendingPhishers', JSON.stringify(newPhishers));\n                setPhishers(newPhishers);\n              }}>Remove</button></li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit reports directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton phishers={phishers} invitation={invitation} setPhishers={setPhishers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, phishers, invitation, setPhishers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  console.log('trying to submit batch with', ethersProvider);\n  return (<div>\n    <button onClick={async () => {\n      try {\n        const block = await reportPhishers(phishers, ethersProvider, invitation);\n        localStorage.clear();\n        setPhishers([]);\n      } catch (err) {\n        alert(`Error: ${err}`);\n      }\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function reportMembers (members, provider, invitation) {\n  const { key, signedDelegations } = invitation;\n  const util = generateUtil({\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  })\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(members.map(async (member) => {\n    const _member = member.indexOf('@') === '0' ? member.slice(1) : member;\n    const desiredTx = await registry.populateTransaction.claimIfMember(`TWT:${_member.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n      authority: signedDelegations,\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = util.signInvocation({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  }, key);\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportMembers from './reportMembers';\nimport LazyConnect from './LazyConnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json')\nconst { chainId } = config;\nimport TextInput from './TextInput';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ member, setMember ] = useState();\n  const [ members, setMembers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingMembers');\n      let storedMembers = JSON.parse(rawStorage) || [];\n      setMembers(storedMembers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  return (\n    <div className='box'>\n      <h3>Endorse a member</h3>\n      <TextInput placeholder=\"@member_person\" buttonLabel=\"Endorse\"\n        onComplete={(member) => {\n        members.push(member);\n        setMembers(members);\n        localStorage.setItem('pendingMembers', JSON.stringify(members));\n      }}/>\n\n      <div className='members'>\n        { members && members.length > 0 ? \n        <div>\n          <p>Pending member nominations:</p>\n          <ol>\n            {members.map((member, index) => {\n              return (<li key={index}>{member} <button onClick={() => {\n                const newMembers = members.filter((p) => p !== member);\n                localStorage.setItem('pendingMembers', JSON.stringify(newMembers));\n                setMembers(newMembers);\n              }}>Remove</button></li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit endorsements directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton members={members} invitation={invitation} setMembers={setMembers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, members, invitation, setMembers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  return (<div>\n    <button onClick={async () => {\n      try {\n        const block = await reportMembers(members, ethersProvider, invitation);\n        localStorage.clear();\n        setMembers([]);\n     } catch (err) {\n        alert(`Error: ${err}`);\n      }\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport createRegistry from './createRegistry';\nimport TextInput from './TextInput';\n\nexport default function MemberCheck (props) {\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Member Status</h3>\n      <TextInput placeholder=\"Enter a Twitter name\" buttonLabel=\"Check\"\n      onComplete={(name) => {\n        props.checkMember(name)\n        .then((result) => {\n          setOutput(result);\n        })\n        .catch(console.error);\n      }}/>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}\n\nexport function MemberCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider, true)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return <MemberCheck checkMember={async (name) => {\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isMember(codedName);\n      if (result) {\n        return `${name} is an endorsed moby.`;\n      } else {\n        return `${name} has not been endorsed.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { generateUtil, recoverDelegationSigner } = require('eth-delegatable-utils');\nconst createTypedMessage = require('./createTypedMessage');\nconst sigUtil = require('@metamask/eth-sig-util');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\n\ntypes.domain.chainId = chainId;\ntypes.domain.verifyingContract = address;\n\n/*\ntype SignedDelegation = {\n  delegation: Delegation,\n  signature: string,\n}\n\ntype Delegation = {\n  delegate: string,\n  authority: string,\n  caveats: Caveat[],\n}\n\ntype Caveat = {\n  enforcer: string,\n  terms: string,\n}\n\ntype Invitation = {\n  signedDelegations: SignedDelegation[],\n  key: string,\n}\n*/\nconst ROOT_AUTHORITY = '0xDdb18b319BE3530560eECFF962032dFAD88212d4';\n\nexport function validateInvitation (invitation) {\n  if (!invitation) {\n    throw new Error('Invitation is required');\n  }\n  console.log('invitation', invitation);\n\n  const { signedDelegations, key } = invitation;\n  const wallet = new ethers.Wallet(key);\n\n  // Trying to follow the code from Delegatable.sol as closely as possible here\n  // To ensure readable correctness.\n  let intendedSender = ROOT_AUTHORITY;\n  let canGrant = intendedSender.toLowerCase();\n  let authHash;\n\n  for (let d = 0; d < signedDelegations.length; d++) {\n    console.log(`Evaluating delegation number ${d}`)\n    const signedDelegation = signedDelegations[d];\n    const delegationSigner = recoverDelegationSigner(signedDelegation, {\n      chainId,\n      verifyingContract: address,\n      name: CONTRACT_NAME,\n    }).toLowerCase();\n\n    if (d === 0) {\n      intendedSender = delegationSigner;\n      canGrant = intendedSender.toLowerCase();\n    }\n\n    const delegation = signedDelegation.delegation;\n    if (delegationSigner !== canGrant) {\n      throw new Error(`Delegation signer ${delegationSigner} does not match required signer ${canGrant}`);\n    }\n\n    const delegationHash = util.createSignedDelegationHash(signedDelegation);\n\n    // Skipping caveat evaluation for now\n\n    authHash = delegationHash;\n    console.log(`Delegation ${d} of id ${authHash} signed by ${canGrant} granted to ${delegation.delegate}`);\n    canGrant = delegation.delegate.toLowerCase();\n  }\n\n  return !!invitation;\n}\n","const { signDelegation } = require('eth-delegatable-utils');\nimport { ethers } from \"ethers\";\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst sigUtil = require('eth-sig-util');\nconst { TypedDataUtils } = sigUtil;\nconst types = require('./types');\n\nexport default function createInvitation (invitation) {\n  const { signedDelegations, key } = invitation;\n  const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n  const delegate = ethers.Wallet.createRandom();\n  console.log('types', types);\n  const delegationHash = TypedDataUtils.hashStruct('SignedDelegation', signedDelegation, types.types, true);\n  const hexHash = '0x' + delegationHash.toString('hex');\n\n  const delegation = {\n    delegate: delegate.address,\n    authority: hexHash,\n\n    // Revokable by default:\n    caveats: [{\n      enforcer: address,\n      terms: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    }]\n  }\n\n  const newSignedDelegation = signDelegation(delegation, key, {\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  });\n  const newInvite = {\n    signedDelegations: [...signedDelegations, newSignedDelegation],\n    key: delegate.privateKey,\n  }\n  console.log({ newInvite });\n  return newInvite;\n}\n","import React, { useEffect, useState } from 'react';\nimport InstallExtension from \"./InstallExtension\"\nimport ReviewAndRevokeInvitations from './ReviewAndRevokeInvitations';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nconst types = require('./types')\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\n\nimport PhishingReport from './PhishingReport';\nimport MemberReport from './MemberReport';\nimport { PhisherCheckButton } from './PhisherCheck';\nimport { MemberCheckButton } from './MemberCheck';\nimport { validateInvitation } from './validateInvitation';\nimport createInvitation from './createInvitation';\nimport LazyConnect from './LazyConnect';\nimport copyInvitationLink from './copyInvitationLink';\n\nexport default function Members (props) {\n  const query = useQuery();\n  const [ invitation, setInvitation ] = useState(null);\n  const [ errorMessage, setErrorMessage ] = useState(null);\n  const [ loading, setLoading ] = useState(false);\n  const [ invitations, setInvitations ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false); // For loading invitations\n  const history = useHistory();\n\n  \n  // Load user's own invitation from disk or query string:\n  useEffect(() => {\n    async function checkInvitations () {\n      if (!loading) {\n        setLoading(true);\n\n        if (!invitation) {\n          try {\n            let parsedInvitation;\n            let rawLoaded = document.cookie;\n            if (rawLoaded) {\n              parsedInvitation = JSON.parse(rawLoaded);\n            }\n            if (!parsedInvitation || parsedInvitation === 'null') {\n              parsedInvitation = JSON.parse(query.get(\"invitation\"));\n              validateInvitation(parsedInvitation);\n              document.cookie = query.get(\"invitation\");\n            }\n\n            history.push('/members');\n            validateInvitation(parsedInvitation);\n            if (parsedInvitation) {\n              setInvitation(parsedInvitation);\n            }\n            setLoading(false);\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(err.message);\n          }\n        }\n      }\n    }\n\n    checkInvitations().catch(console.error);\n  });\n\n  // Load user's outstanding invitations from disk:\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('outstandingInvitations');\n      let loadedInvitations = JSON.parse(rawStorage) || [];\n      setInvitations(loadedInvitations);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  if (!invitation) {\n    if (errorMessage) {\n      return (<div>\n        <h3>Invalid invitation.</h3>\n        <p>Sorry, we were unable to process your invitation.</p>\n        <p className='error'>{ errorMessage } </p>\n      </div>)   \n    } else {\n      return (<div>\n        <h3>Processing invitation...</h3> \n      </div>)\n    }\n  }\n\n  const inviteView = generateInviteView(invitation, (invitation) => {\n    if (invitation) {\n      const newInvites = [...invitations, invitation];\n      localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n      setInvitations(newInvites);\n    } \n  });\n\n  console.log('rendering members screen')\n  return (\n    <div>\n      <div className=\"controlBoard\">\n\n        <div className=\"phisherBox\">\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is a phisher\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <PhisherCheckButton/>\n            </LazyConnect>\n          </div>\n\n          <div className=\"box\">\n            <PhishingReport invitation={invitation}/>\n          </div>\n        </div>\n\n        <div className=\"memberBox\">\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is endorsed\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <MemberCheckButton/>\n            </LazyConnect>\n          </div>\n\n          <div className=\"box\">\n            <MemberReport invitation={invitation}/>\n          </div>\n        </div>\n\n        <div className=\"inviteBox\">\n          { inviteView }\n\n          <LazyConnect actionName=\"revoke outstanding invitations\" chainId={chainId}>\n            <ReviewAndRevokeInvitations\n              invitations={invitations}\n              invitation={invitation}\n              setInvitations={setInvitations}/>\n          </LazyConnect>\n\n          <div className='box'>\n            <h3>Review your invites and their reports. (Coming soon!)</h3>\n          </div>\n\n        </div>\n\n        <InstallExtension />\n      </div>\n\n    </div>\n  )\n}\n\nfunction generateInviteView(invitation, addInvitation) {\n  const tier = invitation.signedDelegations.length;\n\n  if (tier < 4) {\n    return (\n      <div className='box'>\n        <p>You are a tier {invitation.signedDelegations.length} invitee. This means you can invite up to {4-tier} additional tiers of members.</p>\n        <p>Invite people who you think will respect the system, and only report definite impostors and frauds, and only endorse people who are neither.</p>\n        <p>If you invite an abusive person and don't revoke their activity quickly, you may have your membership revoked.</p>\n        <button onClick={() => {\n          const petName = prompt('Who is this invitation for (for your personal use only, so you can view their reports and revoke the invitation)?');\n          const newInvitation = createInvitation(invitation);\n          copyInvitationLink(newInvitation, petName)\n          .then(() => {\n            if (addInvitation) {\n              addInvitation({\n                petName,\n                invitation: newInvitation,\n              });\n            }\n          })\n        }}>Copy new invite link</button>\n      </div> \n    );\n  } else if (tier === 4) {\n    <div>\n      <p>You are a tier 4 member. That means you can't currently invite new members through this interface, but if this site becomes popular, we can add support for this later.</p>\n    </div> \n  }\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\nimport LazyConnect from './LazyConnect';\nimport { PhisherCheckButton } from './PhisherCheck';\nconst { chainId } = require('./config.json');\n\n// Routes\nimport InstallExtension from './InstallExtension';\nimport Members from './Members';\nimport { MemberCheckButton } from './MemberCheck';\n\nexport default function QueryParamsRouter(props) {\n  const { provider } = props;\n  let query = useQuery();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div className='box'>\n          <LazyConnect actionName=\"check if a user is a phisher or member\" chainId={chainId}\n            opts={{ needsAccountConnected: false }}>\n            <PhisherCheckButton/>\n            <MemberCheckButton/>\n          </LazyConnect>\n        </div>\n\n        <InstallExtension/>\n      </Route>\n      <Route path=\"/members/\">\n        <Members/>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import logo from './logo.svg';\nimport QueryParamsRoute from './QueryParamsRoute';\nimport \"antd/dist/antd.css\";\nimport { HashRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <h1>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          MobyMask</h1>\n        <p>\n          An alliance of good-hearted phish, aiming to eliminate phishers. \n        </p>\n      </header>\n\n      <Router>\n        <QueryParamsRoute/>\n      </Router>\n\n      <div className='footer'>\n        <p>Reporters are added on an invite-only basis.</p>\n        <p>Learn more about how our invite system works at <a href=\"https://github.com/danfinlay/delegatable-eth\">delegatable-eth</a>.</p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","const typedMessage = {\n  primaryType: 'Delegation',\n  domain: {\n    name: 'MobyMask',\n    version: '1',\n  },\n\n  entries: {\n    delegate: \"address\",\n    caveat: \"Caveat\",\n    authority: \"SignedDelegation\",\n  },\n\n  types: {\n    EIP712Domain: [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ],\n    Invocation: [\n      { name: 'transaction', type: 'Transaction' },\n      { name: 'authority', type: 'SignedDelegation[]' },\n    ],\n    Invocations: [\n      { name: 'batch', type: 'Invocation[]' },\n      { name: 'replayProtection', type: 'ReplayProtection' },\n    ],\n    SignedInvocation: [\n      { name: 'invocations', type: 'Invocations' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    Transaction: [\n      { name: 'to', type: 'address' },\n      { name: 'gasLimit', type: 'uint256' },\n      { name: 'data', type: 'bytes' },\n    ],\n    ReplayProtection: [\n      { name: 'nonce', type: 'uint' },\n      { name: 'queue', type: 'uint' },\n    ],\n    Delegation: [\n      { name: 'delegate', type: 'address' },\n      { name: 'authority', type: 'bytes32' },\n      { name: 'caveats', type: 'Caveat[]' },\n    ],\n    Caveat: [\n      { name: 'enforcer', type: 'address' },\n      { name: 'terms', type: 'bytes' },\n    ],\n    SignedDelegation: [\n      { name: 'delegation', type: 'Delegation' },\n      { name: 'signature', type: 'bytes' },\n    ],\n  }\n};\n\nmodule.exports = typedMessage;\n"],"sourceRoot":""}